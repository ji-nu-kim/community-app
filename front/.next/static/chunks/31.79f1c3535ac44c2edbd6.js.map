{"version":3,"sources":["webpack://_N_E/./node_modules/moment/locale/ko.js","webpack://_N_E/./node_modules/moment/locale sync ^\\.\\/ko$","webpack://_N_E/./actions/actionUser.ts","webpack://_N_E/./components/Modals/NotificationModal/styles.tsx","webpack://_N_E/./components/Modals/NotificationModal/index.tsx","webpack://_N_E/./interfaces/user/userAction.interfaces.ts"],"names":["moment","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","ll","lll","llll","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","period","meridiemParse","isPM","token","meridiem","hour","minute","isUpper","factory","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","loginRequestAction","data","type","actionTypesUser","LOG_IN_REQUEST","logOutRequestAction","LOG_OUT_REQUEST","removeImage","REMOVE_IMAGE","uploadImageRequestAction","UPLOAD_IMAGE_REQUEST","signUpRequestAction","SIGN_UP_REQUEST","leaveRequestAction","LEAVE_REQUEST","changeProfileRequestAction","CHANGE_PROFILE_REQUEST","changeCountryRequestAction","CHANGE_COUNTRY_REQUEST","checkNotificationRequestAction","CHECK_NOTIFICATION_REQUEST","removeNotificationRequestAction","REMOVE_NOTIFICATION_REQUEST","ModalExternal","styled","div","ModalContainer","NotificationModal","setNotificationModal","notices","dispatch","useDispatch","useState","showDeleteButton","setShowDeleteButton","onMouseEnterListElem","useCallback","onMouseLeaveListElem","onClickDelete","notificationId","notificationModalTrigger","onClick","stopPropagation","className","length","notice","onMouseEnter","onMouseLeave","title","createdAt","locale","format","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_SUCCESS","LOG_OUT_ERROR","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_ERROR","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_ERROR","SIGN_UP_SUCCESS","SIGN_UP_ERROR","LEAVE_SUCCESS","LEAVE_ERROR","CHANGE_PROFILE_SUCCESS","CHANGE_PROFILE_ERROR","CHANGE_COUNTRY_SUCCESS","CHANGE_COUNTRY_ERROR","CHECK_NOTIFICATION_SUCCESS","CHECK_NOTIFICATION_ERROR","REMOVE_NOTIFICATION_SUCCESS","REMOVE_NOTIFICATION_ERROR","ADD_MEET_OF_ME","REMOVE_MEET_OF_ME","MODIFY_MEET_OF_ME","JOIN_MEET_OF_ME","LEAVE_MEET_OF_ME","LEAVE_COMMUNITY_OF_ME","CHANGE_COMMUNITY_OF_ME"],"mappings":"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","file":"static/chunks/31.79f1c3535ac44c2edbd6.js","sourcesContent":["//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var ko = moment.defineLocale('ko', {\n        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(\n            '_'\n        ),\n        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY년 MMMM D일',\n            LLL: 'YYYY년 MMMM D일 A h:mm',\n            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n            l: 'YYYY.MM.DD.',\n            ll: 'YYYY년 MMMM D일',\n            lll: 'YYYY년 MMMM D일 A h:mm',\n            llll: 'YYYY년 MMMM D일 dddd A h:mm',\n        },\n        calendar: {\n            sameDay: '오늘 LT',\n            nextDay: '내일 LT',\n            nextWeek: 'dddd LT',\n            lastDay: '어제 LT',\n            lastWeek: '지난주 dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s 후',\n            past: '%s 전',\n            s: '몇 초',\n            ss: '%d초',\n            m: '1분',\n            mm: '%d분',\n            h: '한 시간',\n            hh: '%d시간',\n            d: '하루',\n            dd: '%d일',\n            M: '한 달',\n            MM: '%d달',\n            y: '일 년',\n            yy: '%d년',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse: /오전|오후/,\n        isPM: function (token) {\n            return token === '오후';\n        },\n        meridiem: function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n    });\n\n    return ko;\n\n})));\n","var map = {\n\t\"./ko\": \"Ivi+\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"KEd5\";","import { IChangeCommunityInfoReturnData } from 'interfaces';\nimport { IMeet } from 'interfaces/db';\nimport {\n  actionTypesUser,\n  ILogInRequest,\n  ILogOutRequest,\n  ILoadMyInfoRequest,\n  IUploadImageRequest,\n  ISignUpRequest,\n  ILeaveRequest,\n  IChangeProfileRequest,\n  IChangeCountryRequest,\n  ICheckNotificationRequest,\n  IRemoveNotificationRequest,\n  IAddMeetOfMe,\n  IRemoveMeetOfMe,\n  IModifyMeetOfMe,\n  IJoinMeeetOfMe,\n  ILeaveMeetOfMe,\n  ILeaveCommunityOfMe,\n  IChangeCommunityOfMe,\n  SignUpData,\n  LoginData,\n  IRemoveUserImage,\n  ChangeProfileData,\n} from '../interfaces/user/userAction.interfaces';\n\nexport const loginRequestAction = (data: LoginData): ILogInRequest => {\n  return {\n    type: actionTypesUser.LOG_IN_REQUEST,\n    data,\n  };\n};\nexport const logOutRequestAction = (): ILogOutRequest => {\n  return {\n    type: actionTypesUser.LOG_OUT_REQUEST,\n  };\n};\nexport const loadMyInfoRequestAction = (): ILoadMyInfoRequest => {\n  return {\n    type: actionTypesUser.LOAD_MY_INFO_REQUEST,\n  };\n};\nexport const removeImage = (): IRemoveUserImage => {\n  return {\n    type: actionTypesUser.REMOVE_IMAGE,\n  };\n};\nexport const uploadImageRequestAction = (data: FormData): IUploadImageRequest => {\n  return {\n    type: actionTypesUser.UPLOAD_IMAGE_REQUEST,\n    data,\n  };\n};\nexport const signUpRequestAction = (data: SignUpData): ISignUpRequest => {\n  return {\n    type: actionTypesUser.SIGN_UP_REQUEST,\n    data,\n  };\n};\nexport const leaveRequestAction = (data: { userId: number }): ILeaveRequest => {\n  return {\n    type: actionTypesUser.LEAVE_REQUEST,\n    data,\n  };\n};\nexport const changeProfileRequestAction = (\n  data: ChangeProfileData\n): IChangeProfileRequest => {\n  return {\n    type: actionTypesUser.CHANGE_PROFILE_REQUEST,\n    data,\n  };\n};\nexport const changeCountryRequestAction = (data: {\n  country: string;\n}): IChangeCountryRequest => {\n  return {\n    type: actionTypesUser.CHANGE_COUNTRY_REQUEST,\n    data,\n  };\n};\nexport const checkNotificationRequestAction = (): ICheckNotificationRequest => {\n  return {\n    type: actionTypesUser.CHECK_NOTIFICATION_REQUEST,\n  };\n};\nexport const removeNotificationRequestAction = (data: {\n  notificationId: number;\n}): IRemoveNotificationRequest => {\n  return {\n    type: actionTypesUser.REMOVE_NOTIFICATION_REQUEST,\n    data,\n  };\n};\nexport const addMeetOfMe = (data: IMeet): IAddMeetOfMe => {\n  return {\n    type: actionTypesUser.ADD_MEET_OF_ME,\n    data,\n  };\n};\nexport const removeMeetOfMe = (data: { meetId: number }): IRemoveMeetOfMe => {\n  return {\n    type: actionTypesUser.REMOVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const modifyMeetOfMe = (data: IMeet): IModifyMeetOfMe => {\n  return {\n    type: actionTypesUser.MODIFY_MEET_OF_ME,\n    data,\n  };\n};\nexport const joinMeetOfMe = (data: IMeet): IJoinMeeetOfMe => {\n  return {\n    type: actionTypesUser.JOIN_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveMeetOfMe = (data: {\n  meetId: number;\n  userId: number;\n}): ILeaveMeetOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveCommunityOfMe = (data: {\n  communityId: number;\n  userId: number;\n}): ILeaveCommunityOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_COMMUNITY_OF_ME,\n    data,\n  };\n};\nexport const changeCommunityOfMe = (\n  data: IChangeCommunityInfoReturnData\n): IChangeCommunityOfMe => {\n  return {\n    type: actionTypesUser.CHANGE_COMMUNITY_OF_ME,\n    data,\n  };\n};\n","import styled from 'styled-components';\n\nexport const ModalExternal = styled.div`\n  position: absolute;\n  left: 0;\n  bottom: 0;\n  top: 0;\n  right: 0;\n  z-index: 999;\n`;\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  z-index: 1000;\n  top: 50px;\n  right: 1rem;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.4);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n  border-radius: 10px;\n  overflow-x: hidden;\n  overflow-y: auto;\n\n  .modal-body {\n    ul {\n      height: inherit;\n      list-style: none;\n      padding: 0;\n      margin: 0;\n\n      li {\n        position: relative;\n        padding: 1rem;\n        padding-right: 4rem;\n        font-size: 0.75rem;\n        cursor: pointer;\n        width: 100%;\n        position: relative;\n        color: #fff;\n        border-bottom: 1px solid rgba(0, 0, 0, 0.4);\n\n        :hover {\n          background: rgba(0, 0, 0, 0.4);\n        }\n\n        .delete-button {\n          cursor: pointer;\n          position: absolute;\n          top: 50%;\n          right: 5%;\n          transform: translateY(-50%);\n          background: #039be5;\n          border: none;\n          width: 40px;\n          height: 20px;\n\n          :hover {\n            opacity: 0.7;\n          }\n        }\n      }\n    }\n  }\n`;\n","import { INotice } from 'interfaces/db';\nimport React, { Dispatch, SetStateAction, useCallback, useState } from 'react';\nimport { ModalContainer, ModalExternal } from './styles';\nimport moment from 'moment';\nimport { useDispatch } from 'react-redux';\nimport { removeNotificationRequestAction } from 'actions/actionUser';\n\ninterface NotificationModalProps {\n  setNotificationModal: Dispatch<SetStateAction<boolean>>;\n  notices: INotice[] | undefined;\n}\n\nfunction NotificationModal({ setNotificationModal, notices }: NotificationModalProps) {\n  const dispatch = useDispatch();\n  const [showDeleteButton, setShowDeleteButton] = useState(false);\n\n  const onMouseEnterListElem = useCallback(() => {\n    setShowDeleteButton(true);\n  }, []);\n\n  const onMouseLeaveListElem = useCallback(() => {\n    setShowDeleteButton(false);\n  }, []);\n\n  const onClickDelete = useCallback(\n    (notificationId: number) => () => {\n      return dispatch(removeNotificationRequestAction({ notificationId }));\n    },\n    []\n  );\n\n  const notificationModalTrigger = useCallback(() => {\n    setNotificationModal(false);\n  }, [setNotificationModal]);\n\n  return (\n    <ModalExternal onClick={notificationModalTrigger}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <div className=\"modal-body\">\n          <ul>\n            {notices &&\n              notices.length > 0 &&\n              notices.map(notice => (\n                <li\n                  key={notice.id}\n                  onMouseEnter={onMouseEnterListElem}\n                  onMouseLeave={onMouseLeaveListElem}\n                >\n                  {notice.title} {moment(notice.createdAt).locale('ko').format('LLL')}\n                  {showDeleteButton && (\n                    <button className=\"delete-button\" onClick={onClickDelete(notice.id)}>\n                      삭제\n                    </button>\n                  )}\n                </li>\n              ))}\n          </ul>\n        </div>\n      </ModalContainer>\n    </ModalExternal>\n  );\n}\n\nexport default NotificationModal;\n","import { IChangeCommunityInfoReturnData } from 'interfaces/community/communityAction.interfaces';\nimport { IMeet, INotice, IUser } from '../db';\n\nexport const actionTypesUser = {\n  LOG_IN_REQUEST: 'LOG_IN_REQUEST',\n  LOG_IN_SUCCESS: 'LOG_IN_SUCCESS',\n  LOG_IN_ERROR: 'LOG_IN_ERROR',\n  LOG_OUT_REQUEST: 'LOG_OUT_REQUEST',\n  LOG_OUT_SUCCESS: 'LOG_OUT_SUCCESS',\n  LOG_OUT_ERROR: 'LOG_OUT_ERROR',\n  LOAD_MY_INFO_REQUEST: 'LOAD_MY_INFO_REQUEST',\n  LOAD_MY_INFO_SUCCESS: 'LOAD_MY_INFO_SUCCESS',\n  LOAD_MY_INFO_ERROR: 'LOAD_MY_INFO_ERROR',\n  UPLOAD_IMAGE_REQUEST: 'UPLOAD_IMAGE_REQUEST',\n  UPLOAD_IMAGE_SUCCESS: 'UPLOAD_IMAGE_SUCCESS',\n  UPLOAD_IMAGE_ERROR: 'UPLOAD_IMAGE_ERROR',\n  REMOVE_IMAGE: 'REMOVE_IMAGE',\n  SIGN_UP_REQUEST: 'SIGN_UP_REQUEST',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_ERROR: 'SIGN_UP_ERROR',\n  LEAVE_REQUEST: 'LEAVE_REQUEST',\n  LEAVE_SUCCESS: 'LEAVE_SUCCESS',\n  LEAVE_ERROR: 'LEAVE_ERROR',\n  CHANGE_PROFILE_REQUEST: 'CHANGE_PROFILE_REQUEST',\n  CHANGE_PROFILE_SUCCESS: 'CHANGE_PROFILE_SUCCESS',\n  CHANGE_PROFILE_ERROR: 'CHANGE_PROFILE_ERROR',\n  CHANGE_COUNTRY_REQUEST: 'CHANGE_COUNTRY_REQUEST',\n  CHANGE_COUNTRY_SUCCESS: 'CHANGE_COUNTRY_SUCCESS',\n  CHANGE_COUNTRY_ERROR: 'CHANGE_COUNTRY_ERROR',\n  CHECK_NOTIFICATION_REQUEST: 'CHECK_NOTIFICATION_REQUEST',\n  CHECK_NOTIFICATION_SUCCESS: 'CHECK_NOTIFICATION_SUCCESS',\n  CHECK_NOTIFICATION_ERROR: 'CHECK_NOTIFICATION_ERROR',\n  REMOVE_NOTIFICATION_REQUEST: 'REMOVE_NOTIFICATION_REQUEST',\n  REMOVE_NOTIFICATION_SUCCESS: 'REMOVE_NOTIFICATION_SUCCESS',\n  REMOVE_NOTIFICATION_ERROR: 'REMOVE_NOTIFICATION_ERROR',\n  ADD_MEET_OF_ME: 'ADD_MEET_OF_ME',\n  REMOVE_MEET_OF_ME: 'REMOVE_MEET_OF_ME',\n  MODIFY_MEET_OF_ME: 'MODIFY_MEET_OF_ME',\n  JOIN_MEET_OF_ME: 'JOIN_MEET_OF_ME',\n  LEAVE_MEET_OF_ME: 'LEAVE_MEET_OF_ME',\n  LEAVE_COMMUNITY_OF_ME: 'LEAVE_COMMUNITY_OF_ME',\n  CHANGE_COMMUNITY_OF_ME: 'CHANGE_COMMUNITY_OF_ME',\n} as const;\nexport interface LoginData {\n  email: string;\n  password: string;\n}\nexport interface ILogInRequest {\n  type: typeof actionTypesUser.LOG_IN_REQUEST;\n  data: LoginData;\n}\nexport interface ILogInSuccess {\n  type: typeof actionTypesUser.LOG_IN_SUCCESS;\n}\nexport interface ILogInError {\n  type: typeof actionTypesUser.LOG_IN_ERROR;\n  error: Error;\n}\nexport interface ILogOutRequest {\n  type: typeof actionTypesUser.LOG_OUT_REQUEST;\n}\nexport interface ILogOutSuccess {\n  type: typeof actionTypesUser.LOG_OUT_SUCCESS;\n}\nexport interface ILogOutError {\n  type: typeof actionTypesUser.LOG_OUT_ERROR;\n  error: Error;\n}\nexport interface ILoadMyInfoRequest {\n  type: typeof actionTypesUser.LOAD_MY_INFO_REQUEST;\n}\nexport interface ILoadMyInfoSuccess {\n  type: typeof actionTypesUser.LOAD_MY_INFO_SUCCESS;\n  data: IUser;\n}\nexport interface ILoadMyInfoError {\n  type: typeof actionTypesUser.LOAD_MY_INFO_ERROR;\n  error: Error;\n}\nexport interface IRemoveUserImage {\n  type: typeof actionTypesUser.REMOVE_IMAGE;\n}\nexport interface IUploadImageRequest {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_REQUEST;\n  data: FormData;\n}\nexport interface IUploadImageSuccess {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_SUCCESS;\n  data: string[];\n}\nexport interface IUploadImageError {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_ERROR;\n  error: Error;\n}\nexport interface SignUpData {\n  email: string;\n  nickname: string;\n  password: string;\n  country: string;\n}\nexport interface ISignUpRequest {\n  type: typeof actionTypesUser.SIGN_UP_REQUEST;\n  data: SignUpData;\n}\nexport interface ISignUpSuccess {\n  type: typeof actionTypesUser.SIGN_UP_SUCCESS;\n}\nexport interface ISignUpError {\n  type: typeof actionTypesUser.SIGN_UP_ERROR;\n  error: Error;\n}\nexport interface ILeaveRequest {\n  type: typeof actionTypesUser.LEAVE_REQUEST;\n  data: { userId: number };\n}\nexport interface ILeaveSuccess {\n  type: typeof actionTypesUser.LEAVE_SUCCESS;\n}\nexport interface ILeaveError {\n  type: typeof actionTypesUser.LEAVE_ERROR;\n  error: Error;\n}\nexport interface ChangeProfileData {\n  nickname: string;\n  profilePhoto: string[];\n  category: string[];\n}\nexport interface IChangeProfileRequest {\n  type: typeof actionTypesUser.CHANGE_PROFILE_REQUEST;\n  data: ChangeProfileData;\n}\nexport interface IChangeProfileSuccess {\n  type: typeof actionTypesUser.CHANGE_PROFILE_SUCCESS;\n  data: IUser;\n}\nexport interface IChangeProfileError {\n  type: typeof actionTypesUser.CHANGE_PROFILE_ERROR;\n  error: Error;\n}\nexport interface IChangeCountryRequest {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_REQUEST;\n  data: { country: string };\n}\nexport interface IChangeCountrySuccess {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_SUCCESS;\n  data: { country: string };\n}\nexport interface IChangeCountryError {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_ERROR;\n  error: Error;\n}\nexport interface ICheckNotificationRequest {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_REQUEST;\n}\nexport interface ICheckNotificationSuccess {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_SUCCESS;\n  data: INotice[];\n}\nexport interface ICheckNotificationError {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IRemoveNotificationRequest {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_REQUEST;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationSuccess {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_SUCCESS;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationError {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IAddMeetOfMe {\n  type: typeof actionTypesUser.ADD_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IRemoveMeetOfMe {\n  type: typeof actionTypesUser.REMOVE_MEET_OF_ME;\n  data: { meetId: number };\n}\nexport interface IModifyMeetOfMe {\n  type: typeof actionTypesUser.MODIFY_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IJoinMeeetOfMe {\n  type: typeof actionTypesUser.JOIN_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface ILeaveMeetOfMe {\n  type: typeof actionTypesUser.LEAVE_MEET_OF_ME;\n  data: { meetId: number; userId: number };\n}\nexport interface ILeaveCommunityOfMe {\n  type: typeof actionTypesUser.LEAVE_COMMUNITY_OF_ME;\n  data: { communityId: number; userId: number };\n}\n\nexport interface IChangeCommunityOfMe {\n  type: typeof actionTypesUser.CHANGE_COMMUNITY_OF_ME;\n  data: IChangeCommunityInfoReturnData;\n}\n\nexport type ActionsUser =\n  | ILogInRequest\n  | ILogInSuccess\n  | ILogInError\n  | ILogOutRequest\n  | ILogOutSuccess\n  | ILogOutError\n  | ILoadMyInfoRequest\n  | ILoadMyInfoSuccess\n  | ILoadMyInfoError\n  | IUploadImageRequest\n  | IUploadImageSuccess\n  | IUploadImageError\n  | IRemoveUserImage\n  | ISignUpRequest\n  | ISignUpSuccess\n  | ISignUpError\n  | ILeaveRequest\n  | ILeaveSuccess\n  | ILeaveError\n  | IChangeProfileRequest\n  | IChangeProfileSuccess\n  | IChangeProfileError\n  | IChangeCountryRequest\n  | IChangeCountrySuccess\n  | IChangeCountryError\n  | ICheckNotificationRequest\n  | ICheckNotificationSuccess\n  | ICheckNotificationError\n  | IRemoveNotificationRequest\n  | IRemoveNotificationSuccess\n  | IRemoveNotificationError\n  | IAddMeetOfMe\n  | IRemoveMeetOfMe\n  | IModifyMeetOfMe\n  | IJoinMeeetOfMe\n  | ILeaveMeetOfMe\n  | ILeaveCommunityOfMe\n  | IChangeCommunityOfMe;\n"],"sourceRoot":""}