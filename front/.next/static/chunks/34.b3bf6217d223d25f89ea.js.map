{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./hooks/useInput.tsx","webpack://_N_E/./components/Modals/PostEditModal/styles.tsx","webpack://_N_E/./components/Modals/PostEditModal/index.tsx","webpack://_N_E/./utils/stylesUtil.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","useInput","initialValue","useState","value","setValue","useCallback","e","target","ModalContainer","styled","div","ModalHeader","header","ColorAni","ModalBody","PostEditModal","setEditMode","setCurrentModifyPost","currentPostText","postId","communityId","dispatch","useDispatch","content","onChangeContent","onClosePostEditModal","onClickModify","confirm","updatePostRequestAction","className","onClick","CloseCircleOutlined","onChange","memo","keyframes"],"mappings":"sHAEe,EADW,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2RAA8R,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oLAAwL,KAAQ,eAAgB,MAAS,Y,YCKrrB,EAAsB,SAA6BA,EAAOC,GAC5D,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAoBC,YAAc,sBACN,iBAAiB,I,kCCd7C,gBAYeC,IAVf,SAAqBC,GAAwD,MACjDC,mBAASD,GAA5BE,EADoE,KAC7DC,EAD6D,KAO3E,MAAO,CAACD,EAJQE,uBAAY,SAAAC,GAC1BF,EAASE,EAAEC,OAAOJ,SACjB,IAEqBC,K,yJCNbI,EAAiBC,IAAOC,IAAV,yEAAGD,CAAH,wUAqBdE,EAAcF,IAAOG,OAAV,sEAAGH,CAAH,iTAkBLI,KAKNC,EAAYL,IAAOC,IAAV,oEAAGD,CAAH,sZChCtB,SAASM,EAAT,GAMuB,IALrBC,EAKqB,EALrBA,YACAC,EAIqB,EAJrBA,qBACAC,EAGqB,EAHrBA,gBACAC,EAEqB,EAFrBA,OACAC,EACqB,EADrBA,YAEMC,EAAWC,cADI,EAGctB,YAAiBkB,GAAmB,IAHlD,mBAGdK,EAHc,KAGLC,EAHK,KAKfC,EAAuBpB,uBAAY,WACvCY,EAAqB,GACrBD,GAAY,KACX,IAEGU,EAAgBrB,uBAAY,WAC5BsB,QAAQ,gFACVN,EAASO,YAAwB,CAAEL,UAASJ,SAAQC,iBACpDJ,GAAY,MAEb,CAACO,IAEJ,OACE,eAACf,EAAD,WACE,eAACG,EAAD,WACE,qBAAKkB,UAAU,cAAf,6CACA,qBAAKA,UAAU,eAAeC,QAASL,EAAvC,SACE,cAACM,EAAA,EAAD,SAGJ,eAACjB,EAAD,WACE,8BACE,0BAAUkB,SAAUR,EAAiBrB,MAAOoB,MAE9C,qBAAKM,UAAU,gBAAf,SACE,wBAAQC,QAASJ,EAAjB,8CAOKO,yBAAKlB,I,kCC1DpB,kDAEaF,EAAWqB,YAAH","file":"static/chunks/34.b3bf6217d223d25f89ea.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import styled from 'styled-components';\nimport { ColorAni } from 'utils/stylesUtil';\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 100;\n  width: 300px;\n  height: 300px;\n  background: rgba(0, 0, 0, 0.7);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n\n  display: grid;\n  grid-template-rows: 44px auto;\n\n  label {\n    color: #e4e4e4;\n  }\n`;\n\nexport const ModalHeader = styled.header`\n  display: flex;\n  color: #e4e4e4;\n  font-weight: bold;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n  .modal-title {\n    margin-left: 1rem;\n  }\n  .close-button {\n    margin-right: 1rem;\n    cursor: pointer;\n\n    :hover {\n      color: coral;\n      animation: ${ColorAni} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport const ModalBody = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n\n  .post-image {\n    width: 250px;\n    height: 200px;\n    border: 1px solid rgba(255, 255, 255, 0.1);\n  }\n\n  textarea {\n    margin-top: 0.5rem;\n    color: #fff;\n    background: rgba(255, 255, 255, 0.2);\n    width: 250px;\n    height: 120px;\n    border: none;\n    resize: none;\n  }\n\n  .modify-button {\n    margin-top: 1rem;\n\n    button {\n      cursor: pointer;\n      background: #039be5;\n      border: none;\n      height: 30px;\n\n      :hover {\n        background: #0083c4;\n      }\n    }\n  }\n`;\n","import { CloseCircleOutlined } from '@ant-design/icons';\nimport { updatePostRequestAction } from 'actions/actionPost';\nimport useInput from 'hooks/useInput';\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\n\ninterface PostEditModalProps {\n  setEditMode: Dispatch<SetStateAction<boolean>>;\n  setCurrentModifyPost: Dispatch<SetStateAction<number>>;\n  currentPostText: string;\n  postId: number;\n  communityId: number;\n}\n\nfunction PostEditModal({\n  setEditMode,\n  setCurrentModifyPost,\n  currentPostText,\n  postId,\n  communityId,\n}: PostEditModalProps) {\n  const dispatch = useDispatch();\n\n  const [content, onChangeContent] = useInput<string>(currentPostText || '');\n\n  const onClosePostEditModal = useCallback(() => {\n    setCurrentModifyPost(0);\n    setEditMode(false);\n  }, []);\n\n  const onClickModify = useCallback(() => {\n    if (confirm('게시글을 수정하시겠습니까?')) {\n      dispatch(updatePostRequestAction({ content, postId, communityId }));\n      setEditMode(false);\n    }\n  }, [content]);\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <div className=\"modal-title\">포스트 수정</div>\n        <div className=\"close-button\" onClick={onClosePostEditModal}>\n          <CloseCircleOutlined />\n        </div>\n      </ModalHeader>\n      <ModalBody>\n        <div>\n          <textarea onChange={onChangeContent} value={content} />\n        </div>\n        <div className=\"modify-button\">\n          <button onClick={onClickModify}>수정하기</button>\n        </div>\n      </ModalBody>\n    </ModalContainer>\n  );\n}\n\nexport default memo(PostEditModal);\n","import { keyframes } from 'styled-components';\n\nexport const ColorAni = keyframes`\n  from {\n    filter: hue-rotate(0deg);\n  }\n  to {\n    filter: hue-rotate(360deg);\n  }\n`;\n"],"sourceRoot":""}