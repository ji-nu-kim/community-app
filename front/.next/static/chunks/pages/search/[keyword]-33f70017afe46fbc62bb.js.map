{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?90bd","webpack://_N_E/./pages/search/[keyword].tsx"],"names":["window","__NEXT_P","push","keyword","router","useRouter","changableCommunities","useSelector","state","community","query","length","className","map","href","id","prefetch","profilePhoto","categoryName","Categories","name","country","communityName","memo"],"mappings":"6FACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,oBACA,WACE,OAAO,EAAQ,Y,mNCevB,SAASC,IACP,IAAMC,EAASC,sBACPC,EAAyBC,aAC/B,SAACC,GAAD,OAA+BA,EAAMC,aAD/BH,qBAGR,OACE,qCACE,cAAC,IAAD,UACE,iDAAoBF,EAAOM,MAAMP,QAAjC,qBAEF,cAAC,UAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,wCACUC,EAAOM,MAAMP,QADvB,eAEE,uBAFF,qDAGaG,EAAqBK,OAHlC,cAMF,cAAC,IAAD,UACE,qBAAKC,UAAU,kBAAf,SACGN,EAAqBO,KAAI,SAAAJ,GAAS,OACjC,8BACE,cAAC,IAAD,CAAMK,KAAI,qBAAgBL,EAAUM,IAAMC,UAAU,EAApD,SACE,4BACE,cAAC,UAAD,CACEC,aAAcR,EAAUQ,aACxBC,aAAcT,EAAUU,WAAW,GAAGC,KACtCC,QAASZ,EAAUY,QACnBC,cAAeb,EAAUa,qBAPvBb,EAAUM,mB,SAoCrBQ,yBAAKpB,K","file":"static/chunks/pages/search/[keyword]-33f70017afe46fbc62bb.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search/[keyword]\",\n      function () {\n        return require(\"private-next-pages/search/[keyword].tsx\");\n      }\n    ]);\n  ","import { searchCommunitiesRequestAction } from 'actions/actionCommunity';\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\nimport axios from 'axios';\nimport AppLayout from 'components/Layouts/AppLayout';\nimport CategoryLayout, {\n  CategoryContent,\n  CategoryHeader,\n} from 'components/Layouts/CategoryLayout';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { GetServerSideProps } from 'next';\nimport React, { memo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport wrapper from 'store/configureStore';\nimport Head from 'next/head';\nimport { useRouter } from 'next/router';\nimport Link from 'next/link';\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\n\nfunction keyword() {\n  const router = useRouter();\n  const { changableCommunities } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n  return (\n    <>\n      <Head>\n        <title>community - {router.query.keyword} 검색</title>\n      </Head>\n      <AppLayout>\n        <CategoryLayout>\n          <CategoryHeader>\n            <h1>\n              &ldquo;{router.query.keyword}&rdquo;와\n              <br />\n              연관있는 커뮤니티 {changableCommunities.length}개\n            </h1>\n          </CategoryHeader>\n          <CategoryContent>\n            <div className=\"cards-container\">\n              {changableCommunities.map(community => (\n                <div key={community.id}>\n                  <Link href={`/community/${community.id}`} prefetch={false}>\n                    <a>\n                      <BoxStyleCard\n                        profilePhoto={community.profilePhoto}\n                        categoryName={community.Categories[0].name}\n                        country={community.country}\n                        communityName={community.communityName}\n                      />\n                    </a>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </CategoryContent>\n        </CategoryLayout>\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    const keyword = String(context.query.keyword);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(searchCommunitiesRequestAction({ keyword }));\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(keyword);\n"],"sourceRoot":""}