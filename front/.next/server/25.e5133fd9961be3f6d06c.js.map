{"version":3,"sources":["webpack:///./hooks/useInput.tsx","webpack:///./components/Modals/PostEditModal/styles.tsx","webpack:///./components/Modals/PostEditModal/index.tsx","webpack:///./utils/stylesUtil.tsx"],"names":["useInput","initialValue","value","setValue","useState","handler","useCallback","e","target","ModalContainer","styled","div","ModalHeader","header","ColorAni","ModalBody","PostEditModal","setEditMode","setCurrentModifyPost","currentPostText","postId","communityId","dispatch","useDispatch","content","onChangeContent","onClosePostEditModal","onClickModify","confirm","updatePostRequestAction","memo","keyframes"],"mappings":";;;;;;;AAAA;AAAA;AAAA;;AAEA,SAASA,QAAT,CAAqBC,YAArB,EAA6E;AAC3E,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBC,sDAAQ,CAACH,YAAD,CAAlC;AAEA,QAAMI,OAAO,GAAGC,yDAAW,CAACC,CAAC,IAAI;AAC/BJ,YAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SAAO,CAACA,KAAD,EAAQG,OAAR,EAAiBF,QAAjB,CAAP;AACD;;AAEcH,iEAAf,E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AAEO,MAAMS,cAAc,gBAAGC,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,0UAApB;AAqBA,MAAMC,WAAW,gBAAGF,oCAAM,CAACG,MAAV;AAAA;AAAA;AAAA,sTAkBLC,8BAlBK,CAAjB;AAuBA,MAAMC,SAAS,gBAAGL,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,wZAAf,C;;;;AC/CP;AACA;AACA;AACA;AACA;AACA;;AAUA,SAASK,aAAT,CAAuB;AACrBC,aADqB;AAErBC,sBAFqB;AAGrBC,iBAHqB;AAIrBC,QAJqB;AAKrBC;AALqB,CAAvB,EAMuB;AACrB,QAAMC,QAAQ,GAAGC,4CAAW,EAA5B;AAEA,QAAM,CAACC,OAAD,EAAUC,eAAV,IAA6BzB,mCAAQ,CAASmB,eAAe,IAAI,EAA5B,CAA3C;AAEA,QAAMO,oBAAoB,GAAGpB,sCAAW,CAAC,MAAM;AAC7CY,wBAAoB,CAAC,CAAD,CAApB;AACAD,eAAW,CAAC,KAAD,CAAX;AACD,GAHuC,EAGrC,EAHqC,CAAxC;AAKA,QAAMU,aAAa,GAAGrB,sCAAW,CAAC,MAAM;AACtC,QAAIsB,OAAO,CAAC,gBAAD,CAAX,EAA+B;AAC7BN,cAAQ,CAACO,qDAAuB,CAAC;AAAEL,eAAF;AAAWJ,cAAX;AAAmBC;AAAnB,OAAD,CAAxB,CAAR;AACAJ,iBAAW,CAAC,KAAD,CAAX;AACD;AACF,GALgC,EAK9B,CAACO,OAAD,CAL8B,CAAjC;AAOA,sBACE,6BAAC,cAAD;AAAA,4BACE,6BAAC,WAAD;AAAA,8BACE;AAAK,iBAAS,EAAC,aAAf;AAAA;AAAA,QADF,eAEE;AAAK,iBAAS,EAAC,cAAf;AAA8B,eAAO,EAAEE,oBAAvC;AAAA,+BACE,4BAAC,6BAAD;AADF,QAFF;AAAA,MADF,eAOE,6BAAC,SAAD;AAAA,8BACE;AAAA,+BACE;AAAU,kBAAQ,EAAED,eAApB;AAAqC,eAAK,EAAED;AAA5C;AADF,QADF,eAIE;AAAK,iBAAS,EAAC,eAAf;AAAA,+BACE;AAAQ,iBAAO,EAAEG,aAAjB;AAAA;AAAA;AADF,QAJF;AAAA,MAPF;AAAA,IADF;AAkBD;;AAEcG,sIAAI,CAACd,aAAD,CAAnB,E;;;;;;;;AC1DA;AAAA;AAAA;AAAA;AAEO,MAAMF,QAAQ,gBAAGiB,mEAAH,kEAAd,C","file":"25.e5133fd9961be3f6d06c.js","sourcesContent":["import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100;\r\n  width: 300px;\r\n  height: 300px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-button {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .post-image {\r\n    width: 250px;\r\n    height: 200px;\r\n    border: 1px solid rgba(255, 255, 255, 0.1);\r\n  }\r\n\r\n  textarea {\r\n    margin-top: 0.5rem;\r\n    color: #fff;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    width: 250px;\r\n    height: 120px;\r\n    border: none;\r\n    resize: none;\r\n  }\r\n\r\n  .modify-button {\r\n    margin-top: 1rem;\r\n\r\n    button {\r\n      cursor: pointer;\r\n      background: #039be5;\r\n      border: none;\r\n      height: 30px;\r\n\r\n      :hover {\r\n        background: #0083c4;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { updatePostRequestAction } from 'actions/actionPost';\r\nimport useInput from 'hooks/useInput';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\r\n\r\ninterface PostEditModalProps {\r\n  setEditMode: Dispatch<SetStateAction<boolean>>;\r\n  setCurrentModifyPost: Dispatch<SetStateAction<number>>;\r\n  currentPostText: string;\r\n  postId: number;\r\n  communityId: number;\r\n}\r\n\r\nfunction PostEditModal({\r\n  setEditMode,\r\n  setCurrentModifyPost,\r\n  currentPostText,\r\n  postId,\r\n  communityId,\r\n}: PostEditModalProps) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [content, onChangeContent] = useInput<string>(currentPostText || '');\r\n\r\n  const onClosePostEditModal = useCallback(() => {\r\n    setCurrentModifyPost(0);\r\n    setEditMode(false);\r\n  }, []);\r\n\r\n  const onClickModify = useCallback(() => {\r\n    if (confirm('게시글을 수정하시겠습니까?')) {\r\n      dispatch(updatePostRequestAction({ content, postId, communityId }));\r\n      setEditMode(false);\r\n    }\r\n  }, [content]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">포스트 수정</div>\r\n        <div className=\"close-button\" onClick={onClosePostEditModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <div>\r\n          <textarea onChange={onChangeContent} value={content} />\r\n        </div>\r\n        <div className=\"modify-button\">\r\n          <button onClick={onClickModify}>수정하기</button>\r\n        </div>\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(PostEditModal);\r\n","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n"],"sourceRoot":""}