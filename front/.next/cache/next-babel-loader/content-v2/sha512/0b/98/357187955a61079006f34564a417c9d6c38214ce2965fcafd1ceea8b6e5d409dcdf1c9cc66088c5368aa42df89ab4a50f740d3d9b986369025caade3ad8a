{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/wlsdn/Desktop/next/community/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport Link from 'next/link';\nimport React, { memo, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { NavWrapper, NavSearch, UserButtons, VisitorButtons } from './styles';\nimport { CaretDownOutlined, CaretUpOutlined, NotificationOutlined, SearchOutlined } from '@ant-design/icons';\nimport useInput from 'hooks/useInput';\nimport { checkNotificationRequestAction } from 'actions/actionUser';\nimport Router, { useRouter } from 'next/router';\n\nfunction NavBar(_ref) {\n  var setUserInfoModal = _ref.setUserInfoModal,\n      userInfoModal = _ref.userInfoModal,\n      setNotificationModal = _ref.setNotificationModal,\n      notices = _ref.notices;\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      keyword = _useInput2[0],\n      onChangeKeword = _useInput2[1]; // 새로 온 알림의 수(확인하면 사라짐)\n\n\n  var newNotification = notices === null || notices === void 0 ? void 0 : notices.filter(function (notice) {\n    return notice.checked === false;\n  }).length;\n  var path = router.asPath.split('/')[1];\n  var notificationModalTrigger = useCallback(function () {\n    setNotificationModal(function (prev) {\n      return !prev;\n    });\n\n    if (newNotification && newNotification > 0) {\n      return dispatch(checkNotificationRequestAction());\n    }\n  }, [newNotification]);\n  var userInfoModalTrigger = useCallback(function () {\n    setUserInfoModal(function (prev) {\n      return !prev;\n    });\n  }, [setUserInfoModal]);\n  var sumbitKeword = useCallback(function () {\n    if (keyword !== '') {\n      return Router.push(\"/search/\".concat(encodeURIComponent(keyword)));\n    }\n  }, [keyword]);\n  return /*#__PURE__*/_jsx(_Fragment, {\n    children: /*#__PURE__*/_jsxs(NavWrapper, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"nav-logo\",\n        children: /*#__PURE__*/_jsx(\"h1\", {\n          children: \"Community\"\n        })\n      }), path === 'search' && /*#__PURE__*/_jsxs(NavSearch, {\n        children: [/*#__PURE__*/_jsx(\"input\", {\n          type: \"search\",\n          placeholder: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uAC80\\uC0C9\",\n          onChange: onChangeKeword,\n          onKeyPress: function onKeyPress(e) {\n            return e.key === 'Enter' && sumbitKeword();\n          }\n        }), /*#__PURE__*/_jsx(\"button\", {\n          onClick: sumbitKeword,\n          children: /*#__PURE__*/_jsx(SearchOutlined, {})\n        })]\n      }), me ? /*#__PURE__*/_jsxs(UserButtons, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"notification-button\",\n          onClick: notificationModalTrigger,\n          children: [/*#__PURE__*/_jsx(NotificationOutlined, {}), newNotification && newNotification > 0 ? /*#__PURE__*/_jsx(\"div\", {\n            className: \"notification-numbers\",\n            children: newNotification\n          }) : null]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"info-button glass-style-button button-style\",\n          onClick: userInfoModalTrigger,\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            children: me === null || me === void 0 ? void 0 : me.nickname\n          }), /*#__PURE__*/_jsx(\"div\", {\n            children: userInfoModal ? /*#__PURE__*/_jsx(CaretUpOutlined, {}) : /*#__PURE__*/_jsx(CaretDownOutlined, {})\n          })]\n        })]\n      }) : /*#__PURE__*/_jsxs(VisitorButtons, {\n        children: [/*#__PURE__*/_jsx(Link, {\n          href: \"/signup\",\n          prefetch: false,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"button-style\",\n              children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n            })\n          })\n        }), /*#__PURE__*/_jsx(Link, {\n          href: \"/login\",\n          prefetch: false,\n          children: /*#__PURE__*/_jsx(\"a\", {\n            children: /*#__PURE__*/_jsx(\"div\", {\n              className: \"glass-style-button button-style\",\n              children: \"\\uB85C\\uADF8\\uC778\\uD558\\uAE30\"\n            })\n          })\n        })]\n      })]\n    })\n  });\n}\n\nexport default /*#__PURE__*/memo(NavBar);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/NavBar/index.tsx"],"names":["Link","React","memo","useCallback","useDispatch","useSelector","NavWrapper","NavSearch","UserButtons","VisitorButtons","CaretDownOutlined","CaretUpOutlined","NotificationOutlined","SearchOutlined","useInput","checkNotificationRequestAction","Router","useRouter","NavBar","setUserInfoModal","userInfoModal","setNotificationModal","notices","dispatch","router","state","user","me","keyword","onChangeKeword","newNotification","filter","notice","checked","length","path","asPath","split","notificationModalTrigger","prev","userInfoModalTrigger","sumbitKeword","push","encodeURIComponent","e","key","nickname"],"mappings":"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","sourcesContent":["import { RootStateInterface } from 'interfaces/RootState';\r\nimport Link from 'next/link';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavWrapper, NavSearch, UserButtons, VisitorButtons } from './styles';\r\nimport {\r\n  CaretDownOutlined,\r\n  CaretUpOutlined,\r\n  NotificationOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport useInput from 'hooks/useInput';\r\nimport { INotice } from 'interfaces/db';\r\nimport { checkNotificationRequestAction } from 'actions/actionUser';\r\nimport Router, { useRouter } from 'next/router';\r\n\r\ninterface NavBarProps {\r\n  setUserInfoModal: Dispatch<SetStateAction<boolean>>;\r\n  setNotificationModal: Dispatch<SetStateAction<boolean>>;\r\n  userInfoModal: boolean;\r\n  notices: INotice[] | undefined;\r\n}\r\n\r\nfunction NavBar({\r\n  setUserInfoModal,\r\n  userInfoModal,\r\n  setNotificationModal,\r\n  notices,\r\n}: NavBarProps) {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const [keyword, onChangeKeword] = useInput<string>('');\r\n  // 새로 온 알림의 수(확인하면 사라짐)\r\n  const newNotification = notices?.filter(notice => notice.checked === false).length;\r\n  const path = router.asPath.split('/')[1];\r\n\r\n  const notificationModalTrigger = useCallback(() => {\r\n    setNotificationModal(prev => !prev);\r\n\r\n    if (newNotification && newNotification > 0) {\r\n      return dispatch(checkNotificationRequestAction());\r\n    }\r\n  }, [newNotification]);\r\n\r\n  const userInfoModalTrigger = useCallback(() => {\r\n    setUserInfoModal(prev => !prev);\r\n  }, [setUserInfoModal]);\r\n\r\n  const sumbitKeword = useCallback(() => {\r\n    if (keyword !== '') {\r\n      return Router.push(`/search/${encodeURIComponent(keyword)}`);\r\n    }\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <>\r\n      <NavWrapper>\r\n        <div className=\"nav-logo\">\r\n          <h1>Community</h1>\r\n        </div>\r\n\r\n        {path === 'search' && (\r\n          <NavSearch>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"커뮤니티 검색\"\r\n              onChange={onChangeKeword}\r\n              onKeyPress={e => e.key === 'Enter' && sumbitKeword()}\r\n            />\r\n            <button onClick={sumbitKeword}>\r\n              <SearchOutlined />\r\n            </button>\r\n          </NavSearch>\r\n        )}\r\n        {me ? (\r\n          <UserButtons>\r\n            <div className=\"notification-button\" onClick={notificationModalTrigger}>\r\n              <NotificationOutlined />\r\n              {newNotification && newNotification > 0 ? (\r\n                <div className=\"notification-numbers\">{newNotification}</div>\r\n              ) : null}\r\n            </div>\r\n            <div\r\n              className=\"info-button glass-style-button button-style\"\r\n              onClick={userInfoModalTrigger}\r\n            >\r\n              <div>{me?.nickname}</div>\r\n              <div>{userInfoModal ? <CaretUpOutlined /> : <CaretDownOutlined />}</div>\r\n            </div>\r\n          </UserButtons>\r\n        ) : (\r\n          <VisitorButtons>\r\n            <Link href=\"/signup\" prefetch={false}>\r\n              <a>\r\n                <div className=\"button-style\">가입하기</div>\r\n              </a>\r\n            </Link>\r\n            <Link href=\"/login\" prefetch={false}>\r\n              <a>\r\n                <div className=\"glass-style-button button-style\">로그인하기</div>\r\n              </a>\r\n            </Link>\r\n          </VisitorButtons>\r\n        )}\r\n      </NavWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n"]},"metadata":{},"sourceType":"module"}