{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback } from 'react';\nimport { ModalExternal, ModalContainer, ModalBody, ModalHeader } from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\n\nfunction ShowCommunityUserModal({\n  setShowCommunityUserModal,\n  singleCommunity\n}) {\n  const closeShowCommunityUserModal = useCallback(() => {\n    setShowCommunityUserModal(false);\n  }, [setShowCommunityUserModal]);\n  return /*#__PURE__*/_jsx(ModalExternal, {\n    onClick: closeShowCommunityUserModal,\n    children: /*#__PURE__*/_jsxs(ModalContainer, {\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxs(ModalHeader, {\n        children: [/*#__PURE__*/_jsx(\"div\", {\n          className: \"modal-title\",\n          children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uD68C\\uC6D0\"\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"close-btn\",\n          onClick: closeShowCommunityUserModal,\n          children: /*#__PURE__*/_jsx(CloseCircleOutlined, {})\n        })]\n      }), /*#__PURE__*/_jsx(ModalBody, {\n        children: singleCommunity.Users.map(user => /*#__PURE__*/_jsxs(\"div\", {\n          className: \"user-container\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"user-name\",\n            children: [user.profilePhoto ? /*#__PURE__*/_jsx(\"img\", {\n              width: \"24px\",\n              height: \"24px\",\n              src: user.profilePhoto,\n              alt: \"user-image\"\n            }) : /*#__PURE__*/_jsx(\"div\", {\n              className: \"fake-image\",\n              children: user.nickname[0]\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"user-nickname\",\n              children: user.nickname\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"user-country\",\n            children: user.country\n          })]\n        }, user.nickname))\n      })]\n    })\n  });\n}\n\nexport default ShowCommunityUserModal;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/Modals/ShowCommunityUserModal/index.tsx"],"names":["React","useCallback","ModalExternal","ModalContainer","ModalBody","ModalHeader","CloseCircleOutlined","ShowCommunityUserModal","setShowCommunityUserModal","singleCommunity","closeShowCommunityUserModal","e","stopPropagation","Users","map","user","profilePhoto","nickname","country"],"mappings":";;AAAA,OAAOA,KAAP,IAA0CC,WAA1C,QAA6D,OAA7D;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,SAAxC,EAAmDC,WAAnD,QAAsE,UAAtE;AACA,SAASC,mBAAT,QAAoC,mBAApC;;AAQA,SAASC,sBAAT,CAAgC;AAC9BC,EAAAA,yBAD8B;AAE9BC,EAAAA;AAF8B,CAAhC,EAGgC;AAC9B,QAAMC,2BAA2B,GAAGT,WAAW,CAAC,MAAM;AACpDO,IAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACD,GAF8C,EAE5C,CAACA,yBAAD,CAF4C,CAA/C;AAIA,sBACE,KAAC,aAAD;AAAe,IAAA,OAAO,EAAEE,2BAAxB;AAAA,2BACE,MAAC,cAAD;AAAgB,MAAA,OAAO,EAAEC,CAAC,IAAIA,CAAC,CAACC,eAAF,EAA9B;AAAA,8BACE,MAAC,WAAD;AAAA,gCACE;AAAK,UAAA,SAAS,EAAC,aAAf;AAAA;AAAA,UADF,eAEE;AAAK,UAAA,SAAS,EAAC,WAAf;AAA2B,UAAA,OAAO,EAAEF,2BAApC;AAAA,iCACE,KAAC,mBAAD;AADF,UAFF;AAAA,QADF,eAOE,KAAC,SAAD;AAAA,kBACGD,eAAe,CAACI,KAAhB,CAAsBC,GAAtB,CAA0BC,IAAI,iBAC7B;AAAK,UAAA,SAAS,EAAC,gBAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,uBACGA,IAAI,CAACC,YAAL,gBACC;AACE,cAAA,KAAK,EAAC,MADR;AAEE,cAAA,MAAM,EAAC,MAFT;AAGE,cAAA,GAAG,EAAED,IAAI,CAACC,YAHZ;AAIE,cAAA,GAAG,EAAC;AAJN,cADD,gBAQC;AAAK,cAAA,SAAS,EAAC,YAAf;AAAA,wBAA6BD,IAAI,CAACE,QAAL,CAAc,CAAd;AAA7B,cATJ,eAWE;AAAK,cAAA,SAAS,EAAC,eAAf;AAAA,wBAAgCF,IAAI,CAACE;AAArC,cAXF;AAAA,YADF,eAcE;AAAK,YAAA,SAAS,EAAC,cAAf;AAAA,sBAA+BF,IAAI,CAACG;AAApC,YAdF;AAAA,WAAqCH,IAAI,CAACE,QAA1C,CADD;AADH,QAPF;AAAA;AADF,IADF;AAgCD;;AAED,eAAeV,sBAAf","sourcesContent":["import React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport { ModalExternal, ModalContainer, ModalBody, ModalHeader } from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { ICommunity } from 'interfaces/db';\n\ninterface ShowCommunityUserModalProps {\n  setShowCommunityUserModal: Dispatch<SetStateAction<boolean>>;\n  singleCommunity: ICommunity;\n}\n\nfunction ShowCommunityUserModal({\n  setShowCommunityUserModal,\n  singleCommunity,\n}: ShowCommunityUserModalProps) {\n  const closeShowCommunityUserModal = useCallback(() => {\n    setShowCommunityUserModal(false);\n  }, [setShowCommunityUserModal]);\n\n  return (\n    <ModalExternal onClick={closeShowCommunityUserModal}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <div className=\"modal-title\">커뮤니티 회원</div>\n          <div className=\"close-btn\" onClick={closeShowCommunityUserModal}>\n            <CloseCircleOutlined />\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          {singleCommunity.Users.map(user => (\n            <div className=\"user-container\" key={user.nickname}>\n              <div className=\"user-name\">\n                {user.profilePhoto ? (\n                  <img\n                    width=\"24px\"\n                    height=\"24px\"\n                    src={user.profilePhoto}\n                    alt=\"user-image\"\n                  />\n                ) : (\n                  <div className=\"fake-image\">{user.nickname[0]}</div>\n                )}\n                <div className=\"user-nickname\">{user.nickname}</div>\n              </div>\n              <div className=\"user-country\">{user.country}</div>\n            </div>\n          ))}\n        </ModalBody>\n      </ModalContainer>\n    </ModalExternal>\n  );\n}\n\nexport default ShowCommunityUserModal;\n"]},"metadata":{},"sourceType":"module"}