{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Form, Button } from 'antd';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { addCommunityValidation } from '../utils/yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SignUpLayout, { InputContainer, TextAreaContainer, ButtonContainer } from 'components/Layouts/FormLayout';\nimport { addCommunityRequestAction } from 'actions/actionCommunity';\nvar FormErrorMessage = dynamic(function () {\n  return import('components/Message/FormErrorMessage');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/Message/FormErrorMessage')];\n    },\n    modules: ['components/Message/FormErrorMessage']\n  }\n});\nvar SearchAddressModal = dynamic(function () {\n  return import('components/Modals/SearchAddressModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/Modals/SearchAddressModal')];\n    },\n    modules: ['components/Modals/SearchAddressModal']\n  }\n});\n\nfunction MakeCommunity() {\n  var _errors$communityName, _errors$description;\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.community;\n  }),\n      mainCategories = _useSelector2.mainCategories,\n      addCommunityDone = _useSelector2.addCommunityDone,\n      addCommunityError = _useSelector2.addCommunityError,\n      addCommunityLoading = _useSelector2.addCommunityLoading;\n\n  var _useState = useState(false),\n      showSearchAddressModal = _useState[0],\n      setShowSearchAddressModal = _useState[1];\n\n  var _useState2 = useState(false),\n      countryError = _useState2[0],\n      setCountryError = _useState2[1];\n\n  var _useState3 = useState(false),\n      categoryError = _useState3[0],\n      setcategoryError = _useState3[1];\n\n  var _useState4 = useState(''),\n      country = _useState4[0],\n      setCountry = _useState4[1];\n\n  var _useState5 = useState(''),\n      category = _useState5[0],\n      setCategory = _useState5[1];\n\n  useEffect(function () {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n  useEffect(function () {\n    if (addCommunityError) {\n      alert(addCommunityError);\n    }\n  }, [addCommunityError]);\n  useEffect(function () {\n    if (addCommunityDone) {\n      alert('커뮤니티를 생성했습니다');\n      Router.push('/');\n    }\n  }, [addCommunityDone]);\n\n  var _useForm = useForm({\n    resolver: yupResolver(addCommunityValidation),\n    mode: 'onBlur'\n  }),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control;\n\n  var openSearchAddressModal = useCallback(function () {\n    setCountryError(false);\n    setShowSearchAddressModal(true);\n  }, []);\n  var closeSearchAddressModal = useCallback(function () {\n    setShowSearchAddressModal(false);\n  }, []);\n  var onChangeCategory = useCallback(function (e) {\n    setCategory(e.target.value);\n    setcategoryError(false);\n  }, []);\n  var onSubmit = useCallback(handleSubmit(function (data) {\n    if (country === '') {\n      return setCountryError(true);\n    }\n\n    if (category === '') {\n      return setcategoryError(true);\n    }\n\n    return dispatch(addCommunityRequestAction({\n      communityName: data.communityName,\n      description: data.description,\n      country: country,\n      category: category\n    }));\n  }), [country, category]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"community - \\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uB9CC\\uB4E4\\uAE30\"\n      })\n    }), /*#__PURE__*/_jsxs(SignUpLayout, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uB9CC\\uB4E4\\uAE30\"\n      }), /*#__PURE__*/_jsxs(Form, {\n        onFinish: onSubmit,\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"communityName\",\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC774\\uB984\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"input\", {}),\n            type: \"text\",\n            name: \"communityName\",\n            control: control,\n            placeholder: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            defaultValue: \"\"\n          }), ((_errors$communityName = errors.communityName) === null || _errors$communityName === void 0 ? void 0 : _errors$communityName.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.communityName.message\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"description\",\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0\\uC18C\\uAC1C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"textarea\", {}),\n            name: \"description\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            control: control,\n            defaultValue: \"\"\n          }), ((_errors$description = errors.description) === null || _errors$description === void 0 ? void 0 : _errors$description.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.description.message\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"country\",\n            children: \"\\uC8FC\\uC18C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            style: {\n              cursor: 'pointer'\n            },\n            value: country,\n            readOnly: true,\n            placeholder: \"\\uC8FC\\uC18C\\uB97C \\uAC80\\uC0C9\\uD558\\uC138\\uC694\",\n            onClick: openSearchAddressModal\n          }), countryError && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: \"\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          })]\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: \"categories\",\n          children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\"\n        }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsxs(\"select\", {\n          id: \"categories\",\n          className: \"select-category\",\n          onChange: onChangeCategory,\n          children: [/*#__PURE__*/_jsx(\"option\", {\n            value: \"\",\n            children: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n          }), mainCategories.map(function (v) {\n            return /*#__PURE__*/_jsx(\"option\", {\n              value: v.id,\n              children: v.name\n            }, v.name);\n          })]\n        }), categoryError && /*#__PURE__*/_jsx(FormErrorMessage, {\n          errorMessage: \"\\uCE74\\uD14C\\uACE0\\uB9AC\\uB97C \\uC120\\uD0DD\\uD558\\uC138\\uC694\"\n        }), /*#__PURE__*/_jsx(ButtonContainer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            htmlType: \"submit\",\n            loading: addCommunityLoading,\n            children: \"\\uC0DD\\uC131\\uD558\\uAE30\"\n          })\n        })]\n      }), showSearchAddressModal && /*#__PURE__*/_jsx(SearchAddressModal, {\n        closeSearchAddressModal: closeSearchAddressModal,\n        setCountry: setCountry,\n        type: \"village\"\n      })]\n    })]\n  });\n}\n\nexport var __N_SSP = true;\nexport default MakeCommunity;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/pages/makecommunity.tsx"],"names":["Form","Button","Head","Router","dynamic","React","useCallback","useEffect","useState","useDispatch","useSelector","useForm","Controller","addCommunityValidation","yupResolver","SignUpLayout","InputContainer","TextAreaContainer","ButtonContainer","addCommunityRequestAction","FormErrorMessage","SearchAddressModal","MakeCommunity","dispatch","state","user","me","community","mainCategories","addCommunityDone","addCommunityError","addCommunityLoading","showSearchAddressModal","setShowSearchAddressModal","countryError","setCountryError","categoryError","setcategoryError","country","setCountry","category","setCategory","push","alert","resolver","mode","handleSubmit","errors","control","openSearchAddressModal","closeSearchAddressModal","onChangeCategory","e","target","value","onSubmit","data","communityName","description","message","cursor","map","v","id","name"],"mappings":"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","sourcesContent":["import { loadMyInfoRequestAction } from '../actions/actionUser';\r\nimport { Form, Button } from 'antd';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { addCommunityValidation } from '../utils/yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport SignUpLayout, {\r\n  InputContainer,\r\n  TextAreaContainer,\r\n  ButtonContainer,\r\n} from 'components/Layouts/FormLayout';\r\nimport {\r\n  addCommunityRequestAction,\r\n  loadCategoriesRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { END } from '@redux-saga/core';\r\nimport axios from 'axios';\r\nimport { GetServerSideProps } from 'next';\r\nimport wrapper from 'store/configureStore';\r\n\r\nconst FormErrorMessage = dynamic(() => import('components/Message/FormErrorMessage'));\r\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\r\n\r\ntype SignUpType = {\r\n  communityName: string;\r\n  description: string;\r\n};\r\n\r\nfunction MakeCommunity() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const { mainCategories, addCommunityDone, addCommunityError, addCommunityLoading } =\r\n    useSelector((state: RootStateInterface) => state.community);\r\n\r\n  const [showSearchAddressModal, setShowSearchAddressModal] = useState(false);\r\n  const [countryError, setCountryError] = useState(false);\r\n  const [categoryError, setcategoryError] = useState(false);\r\n  const [country, setCountry] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!me) {\r\n      Router.push('/');\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (addCommunityError) {\r\n      alert(addCommunityError);\r\n    }\r\n  }, [addCommunityError]);\r\n\r\n  useEffect(() => {\r\n    if (addCommunityDone) {\r\n      alert('커뮤니티를 생성했습니다');\r\n      Router.push('/');\r\n    }\r\n  }, [addCommunityDone]);\r\n\r\n  const { handleSubmit, errors, control } = useForm<SignUpType>({\r\n    resolver: yupResolver(addCommunityValidation),\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const openSearchAddressModal = useCallback(() => {\r\n    setCountryError(false);\r\n    setShowSearchAddressModal(true);\r\n  }, []);\r\n\r\n  const closeSearchAddressModal = useCallback(() => {\r\n    setShowSearchAddressModal(false);\r\n  }, []);\r\n\r\n  const onChangeCategory = useCallback(e => {\r\n    setCategory(e.target.value);\r\n    setcategoryError(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    handleSubmit((data: SignUpType) => {\r\n      if (country === '') {\r\n        return setCountryError(true);\r\n      }\r\n      if (category === '') {\r\n        return setcategoryError(true);\r\n      }\r\n      return dispatch(\r\n        addCommunityRequestAction({\r\n          communityName: data.communityName,\r\n          description: data.description,\r\n          country,\r\n          category,\r\n        })\r\n      );\r\n    }),\r\n    [country, category]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - 커뮤니티 만들기</title>\r\n      </Head>\r\n      <SignUpLayout>\r\n        <h1>커뮤니티 만들기</h1>\r\n        <Form onFinish={onSubmit} className=\"form-grid\">\r\n          <InputContainer>\r\n            <label htmlFor=\"communityName\">커뮤니티 이름</label>\r\n            <br />\r\n            <Controller\r\n              as={<input />}\r\n              type=\"text\"\r\n              name=\"communityName\"\r\n              control={control}\r\n              placeholder=\"커뮤니티 이름을 입력하세요\"\r\n              defaultValue=\"\"\r\n            />\r\n            {errors.communityName?.message && (\r\n              <FormErrorMessage errorMessage={errors.communityName.message} />\r\n            )}\r\n          </InputContainer>\r\n\r\n          <TextAreaContainer>\r\n            <label htmlFor=\"description\">커뮤니티소개</label>\r\n            <br />\r\n            <Controller\r\n              as={<textarea />}\r\n              name=\"description\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n            />\r\n            {errors.description?.message && (\r\n              <FormErrorMessage errorMessage={errors.description.message} />\r\n            )}\r\n          </TextAreaContainer>\r\n\r\n          <InputContainer>\r\n            <label htmlFor=\"country\">주소</label>\r\n            <br />\r\n            <input\r\n              style={{ cursor: 'pointer' }}\r\n              value={country}\r\n              readOnly\r\n              placeholder=\"주소를 검색하세요\"\r\n              onClick={openSearchAddressModal}\r\n            />\r\n            {countryError && <FormErrorMessage errorMessage=\"주소를 입력하세요\" />}\r\n          </InputContainer>\r\n\r\n          <label htmlFor=\"categories\">카테고리</label>\r\n          <br />\r\n          <select id=\"categories\" className=\"select-category\" onChange={onChangeCategory}>\r\n            <option value=\"\">카테고리를 선택하세요</option>\r\n            {mainCategories.map(v => (\r\n              <option key={v.name} value={v.id}>\r\n                {v.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {categoryError && <FormErrorMessage errorMessage=\"카테고리를 선택하세요\" />}\r\n\r\n          <ButtonContainer>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={addCommunityLoading}>\r\n              생성하기\r\n            </Button>\r\n          </ButtonContainer>\r\n        </Form>\r\n        {showSearchAddressModal && (\r\n          <SearchAddressModal\r\n            closeSearchAddressModal={closeSearchAddressModal}\r\n            setCountry={setCountry}\r\n            type=\"village\"\r\n          />\r\n        )}\r\n      </SignUpLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoriesRequestAction());\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default MakeCommunity;\r\n"]},"metadata":{},"sourceType":"module"}