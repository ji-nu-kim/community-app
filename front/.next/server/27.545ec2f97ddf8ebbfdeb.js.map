{"version":3,"sources":["webpack:///./hooks/useInput.tsx","webpack:///./components/CommentForm.tsx"],"names":["useInput","initialValue","value","setValue","useState","handler","useCallback","e","target","CommentForm","postId","dispatch","useDispatch","me","useSelector","state","user","addCommentDone","post","comment","onChangeComment","setComment","useEffect","onSubmitComment","trim","alert","addCommentRequestAction","marginTop","background","border","color","resize","height","memo"],"mappings":";;;;;;;AAAA;AAAA;AAAA;;AAEA,SAASA,QAAT,CAAqBC,YAArB,EAA6E;AAC3E,QAAM;AAAA,OAACC,KAAD;AAAA,OAAQC;AAAR,MAAoBC,sDAAQ,CAACH,YAAD,CAAlC;AAEA,QAAMI,OAAO,GAAGC,yDAAW,CAACC,CAAC,IAAI;AAC/BJ,YAAQ,CAACI,CAAC,CAACC,MAAF,CAASN,KAAV,CAAR;AACD,GAF0B,EAExB,EAFwB,CAA3B;AAIA,SAAO,CAACA,KAAD,EAAQG,OAAR,EAAiBF,QAAjB,CAAP;AACD;;AAEcH,iEAAf,E;;;;;;;;;;;;;;;;;;;;;ACZA;AACA;AACA;AACA;AAEA;;AAMA,SAASS,WAAT,CAAqB;AAAEC;AAAF,CAArB,EAAmD;AACjD,QAAMC,QAAQ,GAAGC,+DAAW,EAA5B;AACA,QAAM;AAAEC;AAAF,MAASC,+DAAW,CAAEC,KAAD,IAA+BA,KAAK,CAACC,IAAtC,CAA1B;AACA,QAAM;AAAEC;AAAF,MAAqBH,+DAAW,CAAEC,KAAD,IAA+BA,KAAK,CAACG,IAAtC,CAAtC;AACA,QAAM,CAACC,OAAD,EAAUC,eAAV,EAA2BC,UAA3B,IAAyCrB,uEAAQ,CAAS,EAAT,CAAvD;AAEAsB,yDAAS,CAAC,MAAM;AACd,QAAIL,cAAJ,EAAoB;AAClBI,gBAAU,CAAC,EAAD,CAAV;AACD;AACF,GAJQ,EAIN,CAACJ,cAAD,CAJM,CAAT;AAMA,QAAMM,eAAe,GAAGjB,yDAAW,CAAC,MAAM;AACxC,QAAI,CAACa,OAAO,CAACK,IAAR,EAAD,IAAmB,CAACL,OAAxB,EAAiC;AAC/BM,WAAK,CAAC,WAAD,CAAL;AACA;AACD;;AAED,QAAIZ,EAAJ,EAAQ;AACN,aAAOF,QAAQ,CACbe,2FAAuB,CAAC;AACtBP,eADsB;AAEtBT;AAFsB,OAAD,CADV,CAAf;AAMD;AACF,GAdkC,EAchC,CAACS,OAAD,EAAUT,MAAV,EAAkBG,EAAlB,CAdgC,CAAnC;AAgBA,sBACE,8DAAC,yCAAD;AAAM,YAAQ,EAAEU,eAAhB;AAAA,2BACE,+DAAC,yCAAD,CAAM,IAAN;AACE,WAAK,EAAE;AACLI,iBAAS,EAAE;AADN,OADT;AAAA,8BAKE,8DAAC,0CAAD,CAAO,QAAP;AACE,aAAK,EAAER,OADT;AAEE,gBAAQ,EAAEC,eAFZ;AAGE,YAAI,EAAE,CAHR;AAIE,mBAAW,EAAC,mDAJd;AAKE,aAAK,EAAE;AACLQ,oBAAU,EAAE,mBADP;AAELC,gBAAM,EAAE,MAFH;AAGLC,eAAK,EAAE,MAHF;AAILC,gBAAM,EAAE,MAJH;AAKLC,gBAAM,EAAE;AALH;AALT,QALF,eAkBE,8DAAC,2CAAD;AAAQ,YAAI,EAAC,SAAb;AAAuB,gBAAQ,EAAC,QAAhC;AAAyC,aAAK,EAAE;AAAEL,mBAAS,EAAE;AAAb,SAAhD;AAAA;AAAA,QAlBF;AAAA;AADF,IADF;AA0BD;;AAEcM,8HAAI,CAACxB,WAAD,CAAnB,E","file":"27.545ec2f97ddf8ebbfdeb.js","sourcesContent":["import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import { Form, Input, Button } from 'antd';\nimport React, { memo, useCallback, useEffect } from 'react';\nimport { addCommentRequestAction } from '../actions/actionPost';\nimport useInput from '../hooks/useInput';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport { useDispatch, useSelector } from 'react-redux';\n\ninterface CommentFormProps {\n  postId: number;\n}\n\nfunction CommentForm({ postId }: CommentFormProps) {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state: RootStateInterface) => state.user);\n  const { addCommentDone } = useSelector((state: RootStateInterface) => state.post);\n  const [comment, onChangeComment, setComment] = useInput<string>('');\n\n  useEffect(() => {\n    if (addCommentDone) {\n      setComment('');\n    }\n  }, [addCommentDone]);\n\n  const onSubmitComment = useCallback(() => {\n    if (!comment.trim() || !comment) {\n      alert('댓글을 입력하세요');\n      return;\n    }\n\n    if (me) {\n      return dispatch(\n        addCommentRequestAction({\n          comment,\n          postId,\n        })\n      );\n    }\n  }, [comment, postId, me]);\n\n  return (\n    <Form onFinish={onSubmitComment}>\n      <Form.Item\n        style={{\n          marginTop: '0.5rem',\n        }}\n      >\n        <Input.TextArea\n          value={comment}\n          onChange={onChangeComment}\n          rows={4}\n          placeholder=\"댓글을 작성하세요\"\n          style={{\n            background: 'rgba(0, 0, 0, .4)',\n            border: 'none',\n            color: '#fff',\n            resize: 'none',\n            height: '70px',\n          }}\n        />\n        <Button type=\"primary\" htmlType=\"submit\" style={{ marginTop: '.5rem' }}>\n          등록\n        </Button>\n      </Form.Item>\n    </Form>\n  );\n}\n\nexport default memo(CommentForm);\n"],"sourceRoot":""}