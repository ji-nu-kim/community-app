{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/PlusOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/PlusOutlined.js","webpack://_N_E/./components/CommunityBody/Meet/styles.tsx","webpack://_N_E/./components/CommunityBody/Meet/index.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","MeetContainer","styled","div","CardContainer","number","MakeMeetButton","ModifyMeetModal","dynamic","CreateMeetModal","Map","Meet","singleCommunity","communityUser","me","dispatch","useDispatch","useSelector","state","community","addMeetDone","joinMeetDone","joinMeetError","useState","showCreateMeetModal","setShowCreateMeetModal","showModifyMeetModal","setShowModifyMeetModal","currentMeet","setCurrentMeet","currentModifyMeet","setCurrentModifyMeet","joinedMeetIndex","Meets","map","meet","id","joinedMeetList","filter","includes","notJoinedMeetList","onClickPlace","useCallback","meetId","onClickMember","current","onClickCreateMeetButton","onClickDeleteMeetButton","confirm","removeMeetRequestAction","communityId","onClickJoinMeetButton","currentMembers","totalMembers","alert","joinMeetRequestAction","onClickLeaveMeetButton","leaveMeetRequestAction","onClickModifyMeetButton","useEffect","style","overflow","length","className","i","title","date","fee","onClick","Users","members","place","user","MeetOwnerId","nickname","address","meetInfo","find","memo"],"mappings":"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","file":"static/chunks/43.62eaea3c7d0e5ecb66e4.js","sourcesContent":["// This icon file is generated automatically.\nvar PlusOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"defs\", \"attrs\": {}, \"children\": [{ \"tag\": \"style\", \"attrs\": {} }] }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M482 152h60q8 0 8 8v704q0 8-8 8h-60q-8 0-8-8V160q0-8 8-8z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M176 474h672q8 0 8 8v60q0 8-8 8H176q-8 0-8-8v-60q0-8 8-8z\" } }] }, \"name\": \"plus\", \"theme\": \"outlined\" };\nexport default PlusOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport PlusOutlinedSvg from \"@ant-design/icons-svg/es/asn/PlusOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar PlusOutlined = function PlusOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: PlusOutlinedSvg\n  }));\n};\n\nPlusOutlined.displayName = 'PlusOutlined';\nexport default /*#__PURE__*/React.forwardRef(PlusOutlined);","import styled from 'styled-components';\n\ninterface ICardContainer {\n  number: number;\n}\n\nexport const MeetContainer = styled.div`\n  position: relative;\n  height: 100%;\n  backdrop-filter: blur(2px);\n  -webkit-backdrop-filter: blur(2px);\n  background: rgba(0, 0, 0, 0.4);\n  display: grid;\n  grid-template-rows: auto 55px;\n\n  .visitor-post {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .joined-meet,\n  .new-meet {\n    display: grid;\n    grid-template-rows: 44px auto;\n\n    .meet-members,\n    .meet-place {\n      cursor: pointer;\n\n      :hover {\n        color: #039be5;\n      }\n    }\n\n    .meet-name {\n      margin-left: 1rem;\n      align-self: center;\n      font-weight: bold;\n      font-size: 1rem;\n    }\n  }\n`;\n\nexport const CardContainer = styled.div`\n  padding: 1rem;\n  position: relative;\n  width: 100%;\n  height: 300px;\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n\n  .card-left {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    z-index: 10;\n    filter: ${(props: ICardContainer) => `hue-rotate(${props.number * 60}deg)`};\n    background: ${(props: ICardContainer) =>\n      `linear-gradient(\n      ${props.number * 60}deg,\n      rgba(255, 252, 0, 0.85) 0%,\n      rgba(252, 0, 255, 0.85) 45%,\n      rgba(0, 255, 252, 0.85) 100%\n    )`};\n\n    text-align: center;\n    .card-header {\n      font-size: 1.5rem;\n      font-weight: bold;\n      margin-bottom: 2rem;\n    }\n    .card-body {\n      font-size: 0.75rem;\n      div {\n        margin-bottom: 0.5rem;\n      }\n\n      .meet-button {\n        button {\n          cursor: pointer;\n          border: none;\n          background: #039be5;\n          height: 30px;\n\n          :hover {\n            background: #0282c2;\n          }\n        }\n        .owner-buttons {\n          button:first-child {\n            margin-right: 1rem;\n          }\n        }\n      }\n    }\n  }\n\n  .card-right {\n    background: rgba(255, 255, 255, 0.4);\n    z-index: 5;\n\n    .show-members {\n      width: 100%;\n      height: 100%;\n      display: grid;\n      grid-template-rows: 30% 70%;\n      align-items: center;\n      justify-items: center;\n      font-weight: bold;\n      font-size: 1rem;\n\n      .member-container {\n        width: 100%;\n        height: 100%;\n        padding: 1rem;\n\n        p {\n          margin-right: 1rem;\n          display: inline;\n        }\n      }\n    }\n  }\n`;\n\nexport const MakeMeetButton = styled.div`\n  margin-right: 1rem;\n  align-self: center;\n  justify-self: end;\n  cursor: pointer;\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  border: 2px solid hotpink;\n  color: hotpink;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  z-index: 100;\n\n  :hover {\n    filter: hue-rotate(180deg);\n  }\n`;\n","import { PlusOutlined } from '@ant-design/icons';\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\nimport React, { memo, useCallback, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\nimport {\n  joinMeetRequestAction,\n  leaveMeetRequestAction,\n  removeMeetRequestAction,\n} from 'actions/actionCommunity';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\n\nconst ModifyMeetModal = dynamic(() => import('components/Modals/ModifyMeetModal'));\nconst CreateMeetModal = dynamic(() => import('components/Modals/CreateMeetModal'));\nconst Map = dynamic(() => import('components/Map'));\n\ninterface MeeetProps {\n  singleCommunity: ICommunity;\n  me: IUser | null;\n  communityUser: IUserInfo | undefined;\n}\n\nfunction Meet({ singleCommunity, communityUser, me }: MeeetProps) {\n  const dispatch = useDispatch();\n  const { addMeetDone, joinMeetDone, joinMeetError } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n  const [showCreateMeetModal, setShowCreateMeetModal] = useState(false);\n  const [showModifyMeetModal, setShowModifyMeetModal] = useState(false);\n  const [currentMeet, setCurrentMeet] = useState<number[]>([]);\n  const [currentModifyMeet, setCurrentModifyMeet] = useState(-9999);\n  const joinedMeetIndex = me?.Meets.map(meet => meet.id);\n  const joinedMeetList = singleCommunity.Meets.filter(meet =>\n    joinedMeetIndex?.includes(meet.id)\n  );\n  const notJoinedMeetList = singleCommunity.Meets.filter(\n    meet => !joinedMeetIndex?.includes(meet.id)\n  );\n\n  const onClickPlace = useCallback(\n    (meetId: number) => () => {\n      if (currentMeet.includes(meetId)) {\n        return;\n      }\n      setCurrentMeet([...currentMeet, meetId]);\n    },\n    [currentMeet]\n  );\n\n  const onClickMember = useCallback(\n    (meetId: number) => () => {\n      setCurrentMeet([...currentMeet].filter(current => current !== meetId));\n    },\n    [currentMeet]\n  );\n\n  const onClickCreateMeetButton = useCallback(() => {\n    setShowCreateMeetModal(true);\n  }, []);\n\n  const onClickDeleteMeetButton = useCallback(\n    (meetId: number) => () => {\n      if (confirm('모임을 삭제하시겠습니까?')) {\n        return dispatch(\n          removeMeetRequestAction({ meetId, communityId: singleCommunity.id })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickJoinMeetButton = useCallback(\n    (meetId: number, currentMembers: number, totalMembers: number) => () => {\n      if (currentMembers >= totalMembers) {\n        return alert('인원 수가 초과되었습니다');\n      }\n      if (confirm('모임에 참가하시겠습니까?')) {\n        return dispatch(\n          joinMeetRequestAction({ meetId, communityId: singleCommunity.id })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickLeaveMeetButton = useCallback(\n    (meetId: number) => () => {\n      if (confirm('모임을 탈퇴하시겠습니까?')) {\n        return dispatch(\n          leaveMeetRequestAction({ communityId: singleCommunity.id, meetId })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickModifyMeetButton = useCallback(\n    (meetId: number) => () => {\n      setCurrentModifyMeet(meetId);\n      setShowModifyMeetModal(true);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (addMeetDone) {\n      setShowCreateMeetModal(false);\n    }\n  }, [addMeetDone]);\n\n  useEffect(() => {\n    if (joinMeetDone) {\n      setShowModifyMeetModal(false);\n    }\n  }, [joinMeetDone]);\n\n  useEffect(() => {\n    if (joinMeetError) {\n      alert(joinMeetError);\n    }\n  }, [joinMeetError]);\n\n  return (\n    <MeetContainer>\n      {communityUser ? (\n        <>\n          <div style={{ overflow: 'auto' }}>\n            {joinedMeetList.length ? (\n              <div className=\"joined-meet\">\n                <div className=\"meet-name\">참가한 모임</div>\n                <div className=\"meet-card-grid\">\n                  {joinedMeetList.map((meet, i) => (\n                    <div key={meet.id}>\n                      <CardContainer number={i}>\n                        <div className=\"card-left\">\n                          <div className=\"card-header\">\n                            <div className=\"meet-title\">{meet.title}</div>\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"meet-date\">{meet.date}시</div>\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\n                            <div\n                              className=\"meet-members\"\n                              onClick={onClickMember(meet.id)}\n                            >\n                              인원: {meet.Users.length} / {meet.members}명\n                            </div>\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\n                              장소: {meet.place}\n                            </div>\n                            <div className=\"meet-owner\">\n                              모임리더:{' '}\n                              {meet.Users.map(\n                                user => user.id === meet.MeetOwnerId && user.nickname\n                              )}\n                            </div>\n                            <div className=\"meet-button\">\n                              {meet.MeetOwnerId === me?.id ? (\n                                <div className=\"owner-buttons\">\n                                  <button onClick={onClickModifyMeetButton(meet.id)}>\n                                    수정\n                                  </button>\n                                  <button onClick={onClickDeleteMeetButton(meet.id)}>\n                                    삭제\n                                  </button>\n                                </div>\n                              ) : (\n                                <button onClick={onClickLeaveMeetButton(meet.id)}>\n                                  탈퇴\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"card-right\">\n                          {currentMeet.includes(meet.id) ? (\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\n                          ) : (\n                            <div className=\"show-members\">\n                              <div>참가멤버</div>\n                              <div className=\"member-container\">\n                                {meet.Users.map(user => (\n                                  <p key={user.id}>{user.nickname}</p>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </CardContainer>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n            <div className=\"new-meet\">\n              <div className=\"meet-name\">새로운 모임</div>\n              {notJoinedMeetList.length\n                ? notJoinedMeetList.map((meet, i) => (\n                    <div key={meet.id}>\n                      <CardContainer number={i}>\n                        <div className=\"card-left\">\n                          <div className=\"card-header\">\n                            <div className=\"meet-title\">{meet.title}</div>\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"meet-date\">{meet.date}시</div>\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\n                            <div\n                              className=\"meet-members\"\n                              onClick={onClickMember(meet.id)}\n                            >\n                              인원: {meet.Users.length} / {meet.members}명\n                            </div>\n\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\n                              장소: {meet.place}\n                            </div>\n                            <div className=\"meet-owner\">\n                              모임리더:{' '}\n                              {meet.Users.map(\n                                user => user.id === meet.MeetOwnerId && user.nickname\n                              )}\n                            </div>\n                            <div className=\"meet-button\">\n                              {meet.Users.length < meet.members ? (\n                                <button\n                                  onClick={onClickJoinMeetButton(\n                                    meet.id,\n                                    meet.Users.length,\n                                    meet.members\n                                  )}\n                                >\n                                  참가하기\n                                </button>\n                              ) : (\n                                <button>인원제한</button>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"card-right\">\n                          {currentMeet.includes(meet.id) ? (\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\n                          ) : (\n                            <div className=\"show-members\">\n                              <div>참가멤버</div>\n                              <div className=\"member-container\">\n                                {meet.Users.map(user => (\n                                  <p key={user.id}>{user.nickname}</p>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </CardContainer>\n                    </div>\n                  ))\n                : null}\n            </div>\n          </div>\n\n          <MakeMeetButton onClick={onClickCreateMeetButton}>\n            <PlusOutlined />\n          </MakeMeetButton>\n\n          {showCreateMeetModal && (\n            <CreateMeetModal\n              setShowCreateMeetModal={setShowCreateMeetModal}\n              communityId={singleCommunity.id}\n            />\n          )}\n\n          {showModifyMeetModal && (\n            <ModifyMeetModal\n              setShowModifyMeetModal={setShowModifyMeetModal}\n              communityId={singleCommunity.id}\n              meetInfo={joinedMeetList.find(meet => meet.id === currentModifyMeet)}\n            />\n          )}\n        </>\n      ) : (\n        <div className=\"visitor-post\">커뮤니티 유저만 볼 수 있습니다</div>\n      )}\n    </MeetContainer>\n  );\n}\n\nexport default memo(Meet);\n"],"sourceRoot":""}