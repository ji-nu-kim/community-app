{"version":3,"sources":["webpack://front/./pages/index.tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\"","webpack://front/ignored|C:\\Users\\wlsdn\\Desktop\\next\\community\\front\\node_modules\\next\\dist\\next-server\\lib\\router|./utils/resolve-rewrites"],"names":["BoxStyleCard","dynamic","HomeLayout","AppLayout","Home","dispatch","useDispatch","me","useSelector","state","user","mainCommunities","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","community","useEffect","country","loadCountryCommunitiesRequestAction","communityId","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","id","addEventListener","removeEventListener","map","profilePhoto","Categories","name","communityName","getServerSideProps","wrapper","context","cookie","req","headers","axios","store","loadMyInfoRequestAction","loadCommunitiesRequestAction","END","sagaTask","toPromise","memo"],"mappings":"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","file":"../pages/index.js","sourcesContent":["import axios from 'axios';\nimport React, { memo, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { END } from 'redux-saga';\nimport dynamic from 'next/dynamic';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\nimport {\n  loadCommunitiesRequestAction,\n  loadCountryCommunitiesRequestAction,\n} from 'actions/actionCommunity';\nimport wrapper from 'store/configureStore';\n\nconst BoxStyleCard = dynamic(() => import('components/Cards/BoxStyleCard'));\nconst HomeLayout = dynamic(() => import('components/Layouts/HomeLayout'));\nconst AppLayout = dynamic(() => import('components/Layouts/AppLayout'));\n\nfunction Home() {\n  const dispatch = useDispatch();\n  const { me } = useSelector((state: RootStateInterface) => state.user);\n  const {\n    mainCommunities,\n    changableCommunities,\n    hasMoreCommunity,\n    loadCommunitiesLoading,\n  } = useSelector((state: RootStateInterface) => state.community);\n\n  useEffect(() => {\n    if (me?.country) {\n      dispatch(\n        loadCountryCommunitiesRequestAction({\n          country: me.country,\n          communityId: 0,\n        })\n      );\n    }\n  }, [me?.country]);\n\n  useEffect(() => {\n    function onScroll() {\n      if (me?.country && changableCommunities.length) {\n        if (\n          window.scrollY + document.documentElement.clientHeight >=\n          document.documentElement.scrollHeight - 200\n        ) {\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\n            dispatch(\n              loadCountryCommunitiesRequestAction({\n                country: me.country,\n                communityId: lastId,\n              })\n            );\n          }\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, me]);\n\n  return (\n    <>\n      <Head>\n        <link\n          href=\"https://fonts.googleapis.com/css2?family=Luckiest+Guy&display=swap\"\n          rel=\"stylesheet\"\n        />\n      </Head>\n      <AppLayout>\n        <HomeLayout>\n          <section>\n            <h1>새로운 커뮤니티를 만나보세요</h1>\n            <div className=\"cards-container\">\n              {mainCommunities.map(community => (\n                <div key={`new${community.id}`}>\n                  <Link href={`/community/${community.id}`} prefetch={false}>\n                    <a>\n                      <BoxStyleCard\n                        profilePhoto={community.profilePhoto}\n                        categoryName={community.Categories[0].name}\n                        country={community.country}\n                        communityName={community.communityName}\n                      />\n                    </a>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </section>\n\n          {me && changableCommunities && (\n            <section>\n              <h1>우리동네 커뮤니티</h1>\n              <div className=\"cards-container\">\n                {changableCommunities.map(community => (\n                  <div key={`country${community.id}`}>\n                    <Link href={`/community/${community.id}`} prefetch={false}>\n                      <a>\n                        <BoxStyleCard\n                          profilePhoto={community.profilePhoto}\n                          categoryName={community.Categories[0].name}\n                          country={community.country}\n                          communityName={community.communityName}\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </section>\n          )}\n        </HomeLayout>\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCommunitiesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Home);\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;","/* (ignored) */"],"sourceRoot":""}