{"version":3,"sources":["webpack://_N_E/./pages/login.tsx","webpack://_N_E/./hooks/useInput.tsx","webpack://_N_E/./actions/actionUser.ts","webpack://_N_E/./components/Layouts/FormLayout.tsx","webpack://_N_E/./node_modules/next/link.js","webpack://_N_E/../../client/link.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?576a","webpack://_N_E/./interfaces/user/userAction.interfaces.ts","webpack://_N_E/../../client/use-intersection.tsx"],"names":["login","dispatch","useDispatch","useSelector","state","user","me","logInError","logInDone","logInLoading","useInput","email","onChangeEmail","password","onChangePassword","useEffect","id","Router","push","alert","onSubmit","useCallback","loginRequestAction","onFinish","htmlFor","name","value","onChange","type","required","size","htmlType","loading","href","initialValue","useState","setValue","e","target","data","actionTypesUser","LOG_IN_REQUEST","logOutRequestAction","LOG_OUT_REQUEST","removeImage","REMOVE_IMAGE","uploadImageRequestAction","UPLOAD_IMAGE_REQUEST","signUpRequestAction","SIGN_UP_REQUEST","leaveRequestAction","LEAVE_REQUEST","changeProfileRequestAction","CHANGE_PROFILE_REQUEST","changeCountryRequestAction","CHANGE_COUNTRY_REQUEST","checkNotificationRequestAction","CHECK_NOTIFICATION_REQUEST","removeNotificationRequestAction","REMOVE_NOTIFICATION_REQUEST","FormContainer","styled","div","InputContainer","TextAreaContainer","ButtonContainer","SignUpLayout","children","module","exports","prefetched","prefetch","isLocalURL","router","err","curLocale","options","props","p","pathname","React","resolveHref","as","resolvedAs","child","Children","childRef","useIntersection","rootMargin","setRef","el","setIntersectionRef","shouldPrefetch","isVisible","locale","isPrefetched","childProps","ref","onClick","nodeName","event","isModifiedEvent","scroll","replace","shallow","success","document","linkClicked","priority","localeDomain","getDomainLocale","addBasePath","addLocale","window","__NEXT_P","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_SUCCESS","LOG_OUT_ERROR","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_ERROR","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_ERROR","SIGN_UP_SUCCESS","SIGN_UP_ERROR","LEAVE_SUCCESS","LEAVE_ERROR","CHANGE_PROFILE_SUCCESS","CHANGE_PROFILE_ERROR","CHANGE_COUNTRY_SUCCESS","CHANGE_COUNTRY_ERROR","CHECK_NOTIFICATION_SUCCESS","CHECK_NOTIFICATION_ERROR","REMOVE_NOTIFICATION_SUCCESS","REMOVE_NOTIFICATION_ERROR","ADD_MEET_OF_ME","REMOVE_MEET_OF_ME","MODIFY_MEET_OF_ME","JOIN_MEET_OF_ME","LEAVE_MEET_OF_ME","LEAVE_COMMUNITY_OF_ME","isDisabled","unobserve","instance","observers","elements","observer","IntersectionObserver","entries","entry","callback","createObserver","observe","setVisible","idleCallback","requestIdleCallback","cancelIdleCallback","hasIntersectionObserver"],"mappings":"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","file":"static/chunks/pages/login-3b1a4ee3fe9d938b5a56.js","sourcesContent":["import { loginRequestAction } from 'actions/actionUser';\r\nimport { Button } from 'antd';\r\nimport Form from 'antd/lib/form/Form';\r\nimport FormLayout, {\r\n  ButtonContainer,\r\n  InputContainer,\r\n} from 'components/Layouts/FormLayout';\r\nimport useInput from 'hooks/useInput';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport Head from 'next/head';\r\nimport Link from 'next/link';\r\nimport Router from 'next/router';\r\nimport React, { useCallback, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nfunction login() {\r\n  const dispatch = useDispatch();\r\n  const { me, logInError, logInDone, logInLoading } = useSelector(\r\n    (state: RootStateInterface) => state.user\r\n  );\r\n  const [email, onChangeEmail] = useInput<string>('');\r\n  const [password, onChangePassword] = useInput<string>('');\r\n\r\n  useEffect(() => {\r\n    if (me && me.id) {\r\n      Router.push('/');\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (logInDone) {\r\n      Router.push('/');\r\n    }\r\n  }, [logInDone]);\r\n\r\n  useEffect(() => {\r\n    if (logInError) {\r\n      alert(logInError);\r\n    }\r\n  }, [logInError]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(loginRequestAction({ email, password }));\r\n  }, [email, password]);\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - 로그인</title>\r\n      </Head>\r\n      <FormLayout>\r\n        <h1>로그인</h1>\r\n        <Form onFinish={onSubmit}>\r\n          <InputContainer>\r\n            <label htmlFor=\"email\">이메일</label>\r\n            <br />\r\n            <input\r\n              name=\"user-email\"\r\n              value={email}\r\n              onChange={onChangeEmail}\r\n              type=\"email\"\r\n              required\r\n            />\r\n          </InputContainer>\r\n\r\n          <InputContainer>\r\n            <label htmlFor=\"password\">비밀번호</label>\r\n            <br />\r\n            <input\r\n              name=\"user-password\"\r\n              value={password}\r\n              onChange={onChangePassword}\r\n              type=\"password\"\r\n              required\r\n            />\r\n          </InputContainer>\r\n\r\n          <ButtonContainer>\r\n            <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={logInLoading}>\r\n              로그인\r\n            </Button>\r\n            <Link href=\"/signup\">\r\n              <a>\r\n                <Button size=\"large\" htmlType=\"submit\">\r\n                  회원가입\r\n                </Button>\r\n              </a>\r\n            </Link>\r\n          </ButtonContainer>\r\n        </Form>\r\n      </FormLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default login;\r\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import { IMeet } from 'interfaces/db';\nimport {\n  actionTypesUser,\n  ILogInRequest,\n  ILogOutRequest,\n  ILoadMyInfoRequest,\n  IUploadImageRequest,\n  ISignUpRequest,\n  ILeaveRequest,\n  IChangeProfileRequest,\n  IChangeCountryRequest,\n  ICheckNotificationRequest,\n  IRemoveNotificationRequest,\n  IAddMeetOfMe,\n  IRemoveMeetOfMe,\n  IModifyMeetOfMe,\n  IJoinMeeetOfMe,\n  ILeaveMeetOfMe,\n  ILeaveCommunityOfMe,\n  SignUpData,\n  LoginData,\n  IRemoveUserImage,\n  ChangeProfileData,\n} from '../interfaces/user/userAction.interfaces';\n\nexport const loginRequestAction = (data: LoginData): ILogInRequest => {\n  return {\n    type: actionTypesUser.LOG_IN_REQUEST,\n    data,\n  };\n};\nexport const logOutRequestAction = (): ILogOutRequest => {\n  return {\n    type: actionTypesUser.LOG_OUT_REQUEST,\n  };\n};\nexport const loadMyInfoRequestAction = (): ILoadMyInfoRequest => {\n  return {\n    type: actionTypesUser.LOAD_MY_INFO_REQUEST,\n  };\n};\nexport const removeImage = (): IRemoveUserImage => {\n  return {\n    type: actionTypesUser.REMOVE_IMAGE,\n  };\n};\nexport const uploadImageRequestAction = (data: FormData): IUploadImageRequest => {\n  return {\n    type: actionTypesUser.UPLOAD_IMAGE_REQUEST,\n    data,\n  };\n};\nexport const signUpRequestAction = (data: SignUpData): ISignUpRequest => {\n  return {\n    type: actionTypesUser.SIGN_UP_REQUEST,\n    data,\n  };\n};\nexport const leaveRequestAction = (data: { userId: number }): ILeaveRequest => {\n  return {\n    type: actionTypesUser.LEAVE_REQUEST,\n    data,\n  };\n};\nexport const changeProfileRequestAction = (\n  data: ChangeProfileData\n): IChangeProfileRequest => {\n  return {\n    type: actionTypesUser.CHANGE_PROFILE_REQUEST,\n    data,\n  };\n};\nexport const changeCountryRequestAction = (data: {\n  country: string;\n}): IChangeCountryRequest => {\n  return {\n    type: actionTypesUser.CHANGE_COUNTRY_REQUEST,\n    data,\n  };\n};\nexport const checkNotificationRequestAction = (): ICheckNotificationRequest => {\n  return {\n    type: actionTypesUser.CHECK_NOTIFICATION_REQUEST,\n  };\n};\nexport const removeNotificationRequestAction = (data: {\n  notificationId: number;\n}): IRemoveNotificationRequest => {\n  return {\n    type: actionTypesUser.REMOVE_NOTIFICATION_REQUEST,\n    data,\n  };\n};\nexport const addMeetOfMe = (data: IMeet): IAddMeetOfMe => {\n  return {\n    type: actionTypesUser.ADD_MEET_OF_ME,\n    data,\n  };\n};\nexport const removeMeetOfMe = (data: { meetId: number }): IRemoveMeetOfMe => {\n  return {\n    type: actionTypesUser.REMOVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const modifyMeetOfMe = (data: IMeet): IModifyMeetOfMe => {\n  return {\n    type: actionTypesUser.MODIFY_MEET_OF_ME,\n    data,\n  };\n};\nexport const joinMeetOfMe = (data: IMeet): IJoinMeeetOfMe => {\n  return {\n    type: actionTypesUser.JOIN_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveMeetOfMe = (data: {\n  meetId: number;\n  userId: number;\n}): ILeaveMeetOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveCommunityOfMe = (data: {\n  communityId: number;\n  userId: number;\n}): ILeaveCommunityOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_COMMUNITY_OF_ME,\n    data,\n  };\n};\n","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface SignUpLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nexport const FormContainer = styled.div`\r\n  position: absolute;\r\n  top: 40%;\r\n  left: 50%;\r\n  transform: translate(-50%, -40%);\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n\r\n  h1 {\r\n    font-size: 3rem;\r\n    font-weight: bold;\r\n    background: linear-gradient(to right, #fbcac9, #8ca6ce);\r\n    -webkit-background-clip: text;\r\n    -webkit-text-fill-color: transparent;\r\n    text-align: center;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  label {\r\n    font-weight: bold;\r\n    color: #777;\r\n  }\r\n\r\n  .select-category {\r\n    margin-top: 0.5rem;\r\n    background: transparent;\r\n\r\n    ::-webkit-scrollbar {\r\n      width: 0;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  input {\r\n    width: 300px;\r\n    height: 44px;\r\n    border: none;\r\n    border-bottom: 1px solid #000;\r\n    background: transparent;\r\n  }\r\n`;\r\n\r\nexport const TextAreaContainer = styled.div`\r\n  margin-bottom: 1rem;\r\n  textarea {\r\n    border: 1px solid #000;\r\n    background: transparent;\r\n    margin-top: 0.5rem;\r\n    width: 300px;\r\n    height: 100px;\r\n    resize: none;\r\n  }\r\n`;\r\n\r\nexport const ButtonContainer = styled.div`\r\n  margin-top: 1rem;\r\n  display: flex;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\n\r\nfunction SignUpLayout({ children }: SignUpLayoutProps) {\r\n  return <FormContainer>{children}</FormContainer>;\r\n}\r\n\r\nexport default SignUpLayout;\r\n","module.exports = require('./dist/client/link')\n","import React, { Children, useEffect } from 'react'\nimport { UrlObject } from 'url'\nimport {\n  addBasePath,\n  addLocale,\n  getDomainLocale,\n  isLocalURL,\n  NextRouter,\n  PrefetchOptions,\n  resolveHref,\n} from '../next-server/lib/router/router'\nimport { useRouter } from './router'\nimport { useIntersection } from './use-intersection'\n\ntype Url = string | UrlObject\ntype RequiredKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? never : K\n}[keyof T]\ntype OptionalKeys<T> = {\n  [K in keyof T]-?: {} extends Pick<T, K> ? K : never\n}[keyof T]\n\nexport type LinkProps = {\n  href: Url\n  as?: Url\n  replace?: boolean\n  scroll?: boolean\n  shallow?: boolean\n  passHref?: boolean\n  prefetch?: boolean\n  locale?: string | false\n}\ntype LinkPropsRequired = RequiredKeys<LinkProps>\ntype LinkPropsOptional = OptionalKeys<LinkProps>\n\nconst prefetched: { [cacheKey: string]: boolean } = {}\n\nfunction prefetch(\n  router: NextRouter,\n  href: string,\n  as: string,\n  options?: PrefetchOptions\n): void {\n  if (typeof window === 'undefined' || !router) return\n  if (!isLocalURL(href)) return\n  // Prefetch the JSON page if asked (only in the client)\n  // We need to handle a prefetch error here since we may be\n  // loading with priority which can reject but we don't\n  // want to force navigation since this is only a prefetch\n  router.prefetch(href, as, options).catch((err) => {\n    if (process.env.NODE_ENV !== 'production') {\n      // rethrow to show invalid URL errors\n      throw err\n    }\n  })\n  const curLocale =\n    options && typeof options.locale !== 'undefined'\n      ? options.locale\n      : router && router.locale\n\n  // Join on an invalid URI character\n  prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')] = true\n}\n\nfunction isModifiedEvent(event: React.MouseEvent): boolean {\n  const { target } = event.currentTarget as HTMLAnchorElement\n  return (\n    (target && target !== '_self') ||\n    event.metaKey ||\n    event.ctrlKey ||\n    event.shiftKey ||\n    event.altKey || // triggers resource download\n    (event.nativeEvent && event.nativeEvent.which === 2)\n  )\n}\n\nfunction linkClicked(\n  e: React.MouseEvent,\n  router: NextRouter,\n  href: string,\n  as: string,\n  replace?: boolean,\n  shallow?: boolean,\n  scroll?: boolean,\n  locale?: string | false\n): void {\n  const { nodeName } = e.currentTarget\n\n  if (nodeName === 'A' && (isModifiedEvent(e) || !isLocalURL(href))) {\n    // ignore click for browser’s default behavior\n    return\n  }\n\n  e.preventDefault()\n\n  //  avoid scroll for urls with anchor refs\n  if (scroll == null) {\n    scroll = as.indexOf('#') < 0\n  }\n\n  // replace state instead of push if prop is present\n  router[replace ? 'replace' : 'push'](href, as, {\n    shallow,\n    locale,\n    scroll,\n  }).then((success: boolean) => {\n    if (!success) return\n    if (scroll) {\n      // FIXME: proper route announcing at Router level, not Link:\n      document.body.focus()\n    }\n  })\n}\n\nfunction Link(props: React.PropsWithChildren<LinkProps>) {\n  if (process.env.NODE_ENV !== 'production') {\n    function createPropError(args: {\n      key: string\n      expected: string\n      actual: string\n    }) {\n      return new Error(\n        `Failed prop type: The prop \\`${args.key}\\` expects a ${args.expected} in \\`<Link>\\`, but got \\`${args.actual}\\` instead.` +\n          (typeof window !== 'undefined'\n            ? \"\\nOpen your browser's console to view the Component stack trace.\"\n            : '')\n      )\n    }\n\n    // TypeScript trick for type-guarding:\n    const requiredPropsGuard: Record<LinkPropsRequired, true> = {\n      href: true,\n    } as const\n    const requiredProps: LinkPropsRequired[] = Object.keys(\n      requiredPropsGuard\n    ) as LinkPropsRequired[]\n    requiredProps.forEach((key: LinkPropsRequired) => {\n      if (key === 'href') {\n        if (\n          props[key] == null ||\n          (typeof props[key] !== 'string' && typeof props[key] !== 'object')\n        ) {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: props[key] === null ? 'null' : typeof props[key],\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // TypeScript trick for type-guarding:\n    const optionalPropsGuard: Record<LinkPropsOptional, true> = {\n      as: true,\n      replace: true,\n      scroll: true,\n      shallow: true,\n      passHref: true,\n      prefetch: true,\n      locale: true,\n    } as const\n    const optionalProps: LinkPropsOptional[] = Object.keys(\n      optionalPropsGuard\n    ) as LinkPropsOptional[]\n    optionalProps.forEach((key: LinkPropsOptional) => {\n      const valType = typeof props[key]\n\n      if (key === 'as') {\n        if (props[key] && valType !== 'string' && valType !== 'object') {\n          throw createPropError({\n            key,\n            expected: '`string` or `object`',\n            actual: valType,\n          })\n        }\n      } else if (key === 'locale') {\n        if (props[key] && valType !== 'string') {\n          throw createPropError({\n            key,\n            expected: '`string`',\n            actual: valType,\n          })\n        }\n      } else if (\n        key === 'replace' ||\n        key === 'scroll' ||\n        key === 'shallow' ||\n        key === 'passHref' ||\n        key === 'prefetch'\n      ) {\n        if (props[key] != null && valType !== 'boolean') {\n          throw createPropError({\n            key,\n            expected: '`boolean`',\n            actual: valType,\n          })\n        }\n      } else {\n        // TypeScript trick for type-guarding:\n        // eslint-disable-next-line @typescript-eslint/no-unused-vars\n        const _: never = key\n      }\n    })\n\n    // This hook is in a conditional but that is ok because `process.env.NODE_ENV` never changes\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    const hasWarned = React.useRef(false)\n    if (props.prefetch && !hasWarned.current) {\n      hasWarned.current = true\n      console.warn(\n        'Next.js auto-prefetches automatically based on viewport. The prefetch attribute is no longer needed. More: https://err.sh/vercel/next.js/prefetch-true-deprecated'\n      )\n    }\n  }\n  const p = props.prefetch !== false\n\n  const router = useRouter()\n  const pathname = (router && router.pathname) || '/'\n\n  const { href, as } = React.useMemo(() => {\n    const [resolvedHref, resolvedAs] = resolveHref(pathname, props.href, true)\n    return {\n      href: resolvedHref,\n      as: props.as\n        ? resolveHref(pathname, props.as)\n        : resolvedAs || resolvedHref,\n    }\n  }, [pathname, props.href, props.as])\n\n  let { children, replace, shallow, scroll, locale } = props\n\n  // Deprecated. Warning shown by propType check. If the children provided is a string (<Link>example</Link>) we wrap it in an <a> tag\n  if (typeof children === 'string') {\n    children = <a>{children}</a>\n  }\n\n  // This will return the first child, if multiple are provided it will throw an error\n  const child: any = Children.only(children)\n  const childRef: any = child && typeof child === 'object' && child.ref\n\n  const [setIntersectionRef, isVisible] = useIntersection({\n    rootMargin: '200px',\n  })\n  const setRef = React.useCallback(\n    (el: Element) => {\n      setIntersectionRef(el)\n      if (childRef) {\n        if (typeof childRef === 'function') childRef(el)\n        else if (typeof childRef === 'object') {\n          childRef.current = el\n        }\n      }\n    },\n    [childRef, setIntersectionRef]\n  )\n  useEffect(() => {\n    const shouldPrefetch = isVisible && p && isLocalURL(href)\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n    const isPrefetched =\n      prefetched[href + '%' + as + (curLocale ? '%' + curLocale : '')]\n    if (shouldPrefetch && !isPrefetched) {\n      prefetch(router, href, as, {\n        locale: curLocale,\n      })\n    }\n  }, [as, href, isVisible, locale, p, router])\n\n  const childProps: {\n    onMouseEnter?: React.MouseEventHandler\n    onClick: React.MouseEventHandler\n    href?: string\n    ref?: any\n  } = {\n    ref: setRef,\n    onClick: (e: React.MouseEvent) => {\n      if (child.props && typeof child.props.onClick === 'function') {\n        child.props.onClick(e)\n      }\n      if (!e.defaultPrevented) {\n        linkClicked(e, router, href, as, replace, shallow, scroll, locale)\n      }\n    },\n  }\n\n  childProps.onMouseEnter = (e: React.MouseEvent) => {\n    if (!isLocalURL(href)) return\n    if (child.props && typeof child.props.onMouseEnter === 'function') {\n      child.props.onMouseEnter(e)\n    }\n    prefetch(router, href, as, { priority: true })\n  }\n\n  // If child is an <a> tag and doesn't have a href attribute, or if the 'passHref' property is\n  // defined, we specify the current 'href', so that repetition is not needed by the user\n  if (props.passHref || (child.type === 'a' && !('href' in child.props))) {\n    const curLocale =\n      typeof locale !== 'undefined' ? locale : router && router.locale\n\n    // we only render domain locales if we are currently on a domain locale\n    // so that locale links are still visitable in development/preview envs\n    const localeDomain =\n      router &&\n      router.isLocaleDomain &&\n      getDomainLocale(\n        as,\n        curLocale,\n        router && router.locales,\n        router && router.domainLocales\n      )\n\n    childProps.href =\n      localeDomain ||\n      addBasePath(addLocale(as, curLocale, router && router.defaultLocale))\n  }\n\n  return React.cloneElement(child, childProps)\n}\n\nexport default Link\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/login\",\n      function () {\n        return require(\"private-next-pages/login.tsx\");\n      }\n    ]);\n  ","import { IMeet, INotice, IUser } from '../db';\n\nexport const actionTypesUser = {\n  LOG_IN_REQUEST: 'LOG_IN_REQUEST',\n  LOG_IN_SUCCESS: 'LOG_IN_SUCCESS',\n  LOG_IN_ERROR: 'LOG_IN_ERROR',\n  LOG_OUT_REQUEST: 'LOG_OUT_REQUEST',\n  LOG_OUT_SUCCESS: 'LOG_OUT_SUCCESS',\n  LOG_OUT_ERROR: 'LOG_OUT_ERROR',\n  LOAD_MY_INFO_REQUEST: 'LOAD_MY_INFO_REQUEST',\n  LOAD_MY_INFO_SUCCESS: 'LOAD_MY_INFO_SUCCESS',\n  LOAD_MY_INFO_ERROR: 'LOAD_MY_INFO_ERROR',\n  UPLOAD_IMAGE_REQUEST: 'UPLOAD_IMAGE_REQUEST',\n  UPLOAD_IMAGE_SUCCESS: 'UPLOAD_IMAGE_SUCCESS',\n  UPLOAD_IMAGE_ERROR: 'UPLOAD_IMAGE_ERROR',\n  REMOVE_IMAGE: 'REMOVE_IMAGE',\n  SIGN_UP_REQUEST: 'SIGN_UP_REQUEST',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_ERROR: 'SIGN_UP_ERROR',\n  LEAVE_REQUEST: 'LEAVE_REQUEST',\n  LEAVE_SUCCESS: 'LEAVE_SUCCESS',\n  LEAVE_ERROR: 'LEAVE_ERROR',\n  CHANGE_PROFILE_REQUEST: 'CHANGE_PROFILE_REQUEST',\n  CHANGE_PROFILE_SUCCESS: 'CHANGE_PROFILE_SUCCESS',\n  CHANGE_PROFILE_ERROR: 'CHANGE_PROFILE_ERROR',\n  CHANGE_COUNTRY_REQUEST: 'CHANGE_COUNTRY_REQUEST',\n  CHANGE_COUNTRY_SUCCESS: 'CHANGE_COUNTRY_SUCCESS',\n  CHANGE_COUNTRY_ERROR: 'CHANGE_COUNTRY_ERROR',\n  CHECK_NOTIFICATION_REQUEST: 'CHECK_NOTIFICATION_REQUEST',\n  CHECK_NOTIFICATION_SUCCESS: 'CHECK_NOTIFICATION_SUCCESS',\n  CHECK_NOTIFICATION_ERROR: 'CHECK_NOTIFICATION_ERROR',\n  REMOVE_NOTIFICATION_REQUEST: 'REMOVE_NOTIFICATION_REQUEST',\n  REMOVE_NOTIFICATION_SUCCESS: 'REMOVE_NOTIFICATION_SUCCESS',\n  REMOVE_NOTIFICATION_ERROR: 'REMOVE_NOTIFICATION_ERROR',\n  ADD_MEET_OF_ME: 'ADD_MEET_OF_ME',\n  REMOVE_MEET_OF_ME: 'REMOVE_MEET_OF_ME',\n  MODIFY_MEET_OF_ME: 'MODIFY_MEET_OF_ME',\n  JOIN_MEET_OF_ME: 'JOIN_MEET_OF_ME',\n  LEAVE_MEET_OF_ME: 'LEAVE_MEET_OF_ME',\n  LEAVE_COMMUNITY_OF_ME: 'LEAVE_COMMUNITY_OF_ME',\n} as const;\nexport interface LoginData {\n  email: string;\n  password: string;\n}\nexport interface ILogInRequest {\n  type: typeof actionTypesUser.LOG_IN_REQUEST;\n  data: LoginData;\n}\nexport interface ILogInSuccess {\n  type: typeof actionTypesUser.LOG_IN_SUCCESS;\n}\nexport interface ILogInError {\n  type: typeof actionTypesUser.LOG_IN_ERROR;\n  error: Error;\n}\nexport interface ILogOutRequest {\n  type: typeof actionTypesUser.LOG_OUT_REQUEST;\n}\nexport interface ILogOutSuccess {\n  type: typeof actionTypesUser.LOG_OUT_SUCCESS;\n}\nexport interface ILogOutError {\n  type: typeof actionTypesUser.LOG_OUT_ERROR;\n  error: Error;\n}\nexport interface ILoadMyInfoRequest {\n  type: typeof actionTypesUser.LOAD_MY_INFO_REQUEST;\n}\nexport interface ILoadMyInfoSuccess {\n  type: typeof actionTypesUser.LOAD_MY_INFO_SUCCESS;\n  data: IUser;\n}\nexport interface ILoadMyInfoError {\n  type: typeof actionTypesUser.LOAD_MY_INFO_ERROR;\n  error: Error;\n}\nexport interface IRemoveUserImage {\n  type: typeof actionTypesUser.REMOVE_IMAGE;\n}\nexport interface IUploadImageRequest {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_REQUEST;\n  data: FormData;\n}\nexport interface IUploadImageSuccess {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_SUCCESS;\n  data: string[];\n}\nexport interface IUploadImageError {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_ERROR;\n  error: Error;\n}\nexport interface SignUpData {\n  email: string;\n  nickname: string;\n  password: string;\n  country: string;\n}\nexport interface ISignUpRequest {\n  type: typeof actionTypesUser.SIGN_UP_REQUEST;\n  data: SignUpData;\n}\nexport interface ISignUpSuccess {\n  type: typeof actionTypesUser.SIGN_UP_SUCCESS;\n}\nexport interface ISignUpError {\n  type: typeof actionTypesUser.SIGN_UP_ERROR;\n  error: Error;\n}\nexport interface ILeaveRequest {\n  type: typeof actionTypesUser.LEAVE_REQUEST;\n  data: { userId: number };\n}\nexport interface ILeaveSuccess {\n  type: typeof actionTypesUser.LEAVE_SUCCESS;\n}\nexport interface ILeaveError {\n  type: typeof actionTypesUser.LEAVE_ERROR;\n  error: Error;\n}\nexport interface ChangeProfileData {\n  nickname: string;\n  profilePhoto: string[];\n  category: string[];\n}\nexport interface IChangeProfileRequest {\n  type: typeof actionTypesUser.CHANGE_PROFILE_REQUEST;\n  data: ChangeProfileData;\n}\nexport interface IChangeProfileSuccess {\n  type: typeof actionTypesUser.CHANGE_PROFILE_SUCCESS;\n  data: IUser;\n}\nexport interface IChangeProfileError {\n  type: typeof actionTypesUser.CHANGE_PROFILE_ERROR;\n  error: Error;\n}\nexport interface IChangeCountryRequest {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_REQUEST;\n  data: { country: string };\n}\nexport interface IChangeCountrySuccess {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_SUCCESS;\n  data: { country: string };\n}\nexport interface IChangeCountryError {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_ERROR;\n  error: Error;\n}\nexport interface ICheckNotificationRequest {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_REQUEST;\n}\nexport interface ICheckNotificationSuccess {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_SUCCESS;\n  data: INotice[];\n}\nexport interface ICheckNotificationError {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IRemoveNotificationRequest {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_REQUEST;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationSuccess {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_SUCCESS;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationError {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IAddMeetOfMe {\n  type: typeof actionTypesUser.ADD_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IRemoveMeetOfMe {\n  type: typeof actionTypesUser.REMOVE_MEET_OF_ME;\n  data: { meetId: number };\n}\nexport interface IModifyMeetOfMe {\n  type: typeof actionTypesUser.MODIFY_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IJoinMeeetOfMe {\n  type: typeof actionTypesUser.JOIN_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface ILeaveMeetOfMe {\n  type: typeof actionTypesUser.LEAVE_MEET_OF_ME;\n  data: { meetId: number; userId: number };\n}\nexport interface ILeaveCommunityOfMe {\n  type: typeof actionTypesUser.LEAVE_COMMUNITY_OF_ME;\n  data: { communityId: number; userId: number };\n}\n\nexport type ActionsUser =\n  | ILogInRequest\n  | ILogInSuccess\n  | ILogInError\n  | ILogOutRequest\n  | ILogOutSuccess\n  | ILogOutError\n  | ILoadMyInfoRequest\n  | ILoadMyInfoSuccess\n  | ILoadMyInfoError\n  | IUploadImageRequest\n  | IUploadImageSuccess\n  | IUploadImageError\n  | IRemoveUserImage\n  | ISignUpRequest\n  | ISignUpSuccess\n  | ISignUpError\n  | ILeaveRequest\n  | ILeaveSuccess\n  | ILeaveError\n  | IChangeProfileRequest\n  | IChangeProfileSuccess\n  | IChangeProfileError\n  | IChangeCountryRequest\n  | IChangeCountrySuccess\n  | IChangeCountryError\n  | ICheckNotificationRequest\n  | ICheckNotificationSuccess\n  | ICheckNotificationError\n  | IRemoveNotificationRequest\n  | IRemoveNotificationSuccess\n  | IRemoveNotificationError\n  | IAddMeetOfMe\n  | IRemoveMeetOfMe\n  | IModifyMeetOfMe\n  | IJoinMeeetOfMe\n  | ILeaveMeetOfMe\n  | ILeaveCommunityOfMe;\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport {\n  requestIdleCallback,\n  cancelIdleCallback,\n} from './request-idle-callback'\n\ntype UseIntersectionObserverInit = Pick<IntersectionObserverInit, 'rootMargin'>\ntype UseIntersection = { disabled?: boolean } & UseIntersectionObserverInit\ntype ObserveCallback = (isVisible: boolean) => void\ntype Observer = {\n  id: string\n  observer: IntersectionObserver\n  elements: Map<Element, ObserveCallback>\n}\n\nconst hasIntersectionObserver = typeof IntersectionObserver !== 'undefined'\n\nexport function useIntersection<T extends Element>({\n  rootMargin,\n  disabled,\n}: UseIntersection): [(element: T | null) => void, boolean] {\n  const isDisabled: boolean = disabled || !hasIntersectionObserver\n\n  const unobserve = useRef<Function>()\n  const [visible, setVisible] = useState(false)\n\n  const setRef = useCallback(\n    (el: T | null) => {\n      if (unobserve.current) {\n        unobserve.current()\n        unobserve.current = undefined\n      }\n\n      if (isDisabled || visible) return\n\n      if (el && el.tagName) {\n        unobserve.current = observe(\n          el,\n          (isVisible) => isVisible && setVisible(isVisible),\n          { rootMargin }\n        )\n      }\n    },\n    [isDisabled, rootMargin, visible]\n  )\n\n  useEffect(() => {\n    if (!hasIntersectionObserver) {\n      if (!visible) {\n        const idleCallback = requestIdleCallback(() => setVisible(true))\n        return () => cancelIdleCallback(idleCallback)\n      }\n    }\n  }, [visible])\n\n  return [setRef, visible]\n}\n\nfunction observe(\n  element: Element,\n  callback: ObserveCallback,\n  options: UseIntersectionObserverInit\n): () => void {\n  const { id, observer, elements } = createObserver(options)\n  elements.set(element, callback)\n\n  observer.observe(element)\n  return function unobserve(): void {\n    elements.delete(element)\n    observer.unobserve(element)\n\n    // Destroy observer when there's nothing left to watch:\n    if (elements.size === 0) {\n      observer.disconnect()\n      observers.delete(id)\n    }\n  }\n}\n\nconst observers = new Map<string, Observer>()\nfunction createObserver(options: UseIntersectionObserverInit): Observer {\n  const id = options.rootMargin || ''\n  let instance = observers.get(id)\n  if (instance) {\n    return instance\n  }\n\n  const elements = new Map<Element, ObserveCallback>()\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      const callback = elements.get(entry.target)\n      const isVisible = entry.isIntersecting || entry.intersectionRatio > 0\n      if (callback && isVisible) {\n        callback(isVisible)\n      }\n    })\n  }, options)\n\n  observers.set(\n    id,\n    (instance = {\n      id,\n      observer,\n      elements,\n    })\n  )\n  return instance\n}\n"],"sourceRoot":""}