{"version":3,"sources":["webpack://front/./components/Modals/CommunityModifyModal/styles.tsx","webpack://front/./components/Modals/CommunityModifyModal/index.tsx","webpack://front/./hooks/useInput.tsx","webpack://front/./utils/stylesUtil.tsx"],"names":["ModalContainer","styled","ModalHeader","ColorAni","ModalFormContainer","TextAreaContainer","ImageInsert","dynamic","CommunityModal","setShowCommunityModifyModal","dispatch","useDispatch","singleCommunity","imagePath","useSelector","state","community","description","onChangeDescription","useInput","caution","onChangeCaution","requirement","onChangeRequirement","closeCommunityModal","useCallback","onSubmit","confirm","setTimeout","changeCommunityInfoRequestAction","communityId","id","profilePhoto","memo","initialValue","value","setValue","useState","handler","e","target","keyframes"],"mappings":"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","file":"9909.js","sourcesContent":["import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10;\r\n  width: 600px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.4);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-btn {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalFormContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr 44px;\r\n  grid-template-columns: 1fr 1fr;\r\n  height: 100%;\r\n  padding: 0.5rem;\r\n  gap: 0.5rem;\r\n\r\n  .profile-img {\r\n    background: rgba(0, 0, 0, 0.1);\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .create-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    grid-column: 1 / 3;\r\n  }\r\n`;\r\n\r\nexport const TextAreaContainer = styled.div`\r\n  background: rgba(0, 0, 0, 0.1);\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: center;\r\n  align-items: center;\r\n  textarea {\r\n    margin-top: 0.5rem;\r\n    color: #fff;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    width: 250px;\r\n    height: 120px;\r\n    border: none;\r\n    resize: none;\r\n\r\n    ::placeholder {\r\n      color: #fff;\r\n    }\r\n  }\r\n`;\r\n","import React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalFormContainer,\r\n  TextAreaContainer,\r\n} from './styles';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Form } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport useInput from 'hooks/useInput';\r\nimport { changeCommunityInfoRequestAction } from 'actions/actionCommunity';\r\n\r\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\r\ninterface CommunityModalProps {\r\n  setShowCommunityModifyModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nfunction CommunityModal({ setShowCommunityModifyModal }: CommunityModalProps) {\r\n  const dispatch = useDispatch();\r\n  const { singleCommunity, imagePath } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [description, onChangeDescription] = useInput<string>(\r\n    singleCommunity?.description || ''\r\n  );\r\n  const [caution, onChangeCaution] = useInput<string>(singleCommunity?.caution || '');\r\n  const [requirement, onChangeRequirement] = useInput<string>(\r\n    singleCommunity?.requirement || ''\r\n  );\r\n\r\n  const closeCommunityModal = useCallback(() => {\r\n    setShowCommunityModifyModal(false);\r\n  }, [setShowCommunityModifyModal]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (confirm('정보를 수정하시겠습니까?') && singleCommunity) {\r\n      setTimeout(() => {\r\n        return dispatch(\r\n          changeCommunityInfoRequestAction({\r\n            communityId: singleCommunity.id,\r\n            caution,\r\n            requirement,\r\n            description,\r\n            profilePhoto: imagePath,\r\n          })\r\n        );\r\n      }, 3000);\r\n    }\r\n  }, [description, requirement, caution, imagePath, singleCommunity]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">커뮤니티 수정하기</div>\r\n        <div className=\"close-btn\" onClick={closeCommunityModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <Form className=\"form\" onFinish={onSubmit}>\r\n        <ModalFormContainer>\r\n          <div className=\"profile-img\">\r\n            <label>프로필사진</label>\r\n            <ImageInsert\r\n              imagePath={imagePath}\r\n              profilePhoto={singleCommunity?.profilePhoto}\r\n            />\r\n          </div>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 소개</label>\r\n            <textarea\r\n              value={description}\r\n              name=\"description\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeDescription}\r\n            />\r\n          </TextAreaContainer>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 주의사항</label>\r\n            <textarea\r\n              value={caution}\r\n              name=\"caution\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeCaution}\r\n            />\r\n          </TextAreaContainer>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 가입조건</label>\r\n            <textarea\r\n              value={requirement}\r\n              name=\"requirement\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeRequirement}\r\n            />\r\n          </TextAreaContainer>\r\n          <div className=\"create-btn\">\r\n            <Button ghost htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </div>\r\n        </ModalFormContainer>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(CommunityModal);\r\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n"],"sourceRoot":""}