{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/wlsdn/Desktop/frontend/react/next/community/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport React, { memo, useCallback } from 'react';\nimport dynamic from 'next/dynamic';\nimport { ModalContainer, ModalHeader, ModalFormContainer, TextAreaContainer } from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from 'hooks/useInput';\nimport { changeCommunityInfoRequestAction } from 'actions/actionCommunity';\nvar ImageInsert = dynamic(function () {\n  return import('components/ImageInsert');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/ImageInsert')];\n    },\n    modules: ['components/ImageInsert']\n  }\n});\n\nfunction CommunityModal(_ref) {\n  var setShowCommunityModifyModal = _ref.setShowCommunityModifyModal;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.community;\n  }),\n      singleCommunity = _useSelector.singleCommunity,\n      imagePath = _useSelector.imagePath;\n\n  var _useInput = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.description) || ''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      description = _useInput2[0],\n      onChangeDescription = _useInput2[1];\n\n  var _useInput3 = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.caution) || ''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      caution = _useInput4[0],\n      onChangeCaution = _useInput4[1];\n\n  var _useInput5 = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.requirement) || ''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      requirement = _useInput6[0],\n      onChangeRequirement = _useInput6[1];\n\n  var closeCommunityModal = useCallback(function () {\n    setShowCommunityModifyModal(false);\n  }, [setShowCommunityModifyModal]);\n  var onSubmit = useCallback(function () {\n    if (confirm('정보를 수정하시겠습니까?') && singleCommunity) {\n      setTimeout(function () {\n        return dispatch(changeCommunityInfoRequestAction({\n          communityId: singleCommunity.id,\n          caution: caution,\n          requirement: requirement,\n          description: description,\n          profilePhoto: imagePath\n        }));\n      }, 3000);\n    }\n  }, [description, requirement, caution, imagePath, singleCommunity]);\n  return /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"modal-title\",\n        children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC218\\uC815\\uD558\\uAE30\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"close-btn\",\n        onClick: closeCommunityModal,\n        children: /*#__PURE__*/_jsx(CloseCircleOutlined, {})\n      })]\n    }), /*#__PURE__*/_jsx(Form, {\n      className: \"form\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxs(ModalFormContainer, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"profile-img\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uD504\\uB85C\\uD544\\uC0AC\\uC9C4\"\n          }), /*#__PURE__*/_jsx(ImageInsert, {\n            imagePath: imagePath,\n            profilePhoto: singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.profilePhoto\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC18C\\uAC1C\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: description,\n            name: \"description\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeDescription\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC8FC\\uC758\\uC0AC\\uD56D\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: caution,\n            name: \"caution\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeCaution\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uAC00\\uC785\\uC870\\uAC74\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: requirement,\n            name: \"requirement\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeRequirement\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"create-btn\",\n          children: /*#__PURE__*/_jsx(Button, {\n            ghost: true,\n            htmlType: \"submit\",\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport default /*#__PURE__*/memo(CommunityModal);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/frontend/react/next/community/front/components/Modals/CommunityModifyModal/index.tsx"],"names":["React","memo","useCallback","dynamic","ModalContainer","ModalHeader","ModalFormContainer","TextAreaContainer","CloseCircleOutlined","Button","Form","useDispatch","useSelector","useInput","changeCommunityInfoRequestAction","ImageInsert","CommunityModal","setShowCommunityModifyModal","dispatch","state","community","singleCommunity","imagePath","description","onChangeDescription","caution","onChangeCaution","requirement","onChangeRequirement","closeCommunityModal","onSubmit","confirm","setTimeout","communityId","id","profilePhoto"],"mappings":"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","sourcesContent":["import React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\nimport dynamic from 'next/dynamic';\nimport {\n  ModalContainer,\n  ModalHeader,\n  ModalFormContainer,\n  TextAreaContainer,\n} from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport useInput from 'hooks/useInput';\nimport { changeCommunityInfoRequestAction } from 'actions/actionCommunity';\n\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\ninterface CommunityModalProps {\n  setShowCommunityModifyModal: Dispatch<SetStateAction<boolean>>;\n}\n\nfunction CommunityModal({ setShowCommunityModifyModal }: CommunityModalProps) {\n  const dispatch = useDispatch();\n  const { singleCommunity, imagePath } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n  const [description, onChangeDescription] = useInput<string>(\n    singleCommunity?.description || ''\n  );\n  const [caution, onChangeCaution] = useInput<string>(singleCommunity?.caution || '');\n  const [requirement, onChangeRequirement] = useInput<string>(\n    singleCommunity?.requirement || ''\n  );\n\n  const closeCommunityModal = useCallback(() => {\n    setShowCommunityModifyModal(false);\n  }, [setShowCommunityModifyModal]);\n\n  const onSubmit = useCallback(() => {\n    if (confirm('정보를 수정하시겠습니까?') && singleCommunity) {\n      setTimeout(() => {\n        return dispatch(\n          changeCommunityInfoRequestAction({\n            communityId: singleCommunity.id,\n            caution,\n            requirement,\n            description,\n            profilePhoto: imagePath,\n          })\n        );\n      }, 3000);\n    }\n  }, [description, requirement, caution, imagePath, singleCommunity]);\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <div className=\"modal-title\">커뮤니티 수정하기</div>\n        <div className=\"close-btn\" onClick={closeCommunityModal}>\n          <CloseCircleOutlined />\n        </div>\n      </ModalHeader>\n      <Form className=\"form\" onFinish={onSubmit}>\n        <ModalFormContainer>\n          <div className=\"profile-img\">\n            <label>프로필사진</label>\n            <ImageInsert\n              imagePath={imagePath}\n              profilePhoto={singleCommunity?.profilePhoto}\n            />\n          </div>\n          <TextAreaContainer>\n            <label>커뮤니티 소개</label>\n            <textarea\n              value={description}\n              name=\"description\"\n              placeholder=\"최대 140글자까지 입력가능합니다\"\n              onChange={onChangeDescription}\n            />\n          </TextAreaContainer>\n          <TextAreaContainer>\n            <label>커뮤니티 주의사항</label>\n            <textarea\n              value={caution}\n              name=\"caution\"\n              placeholder=\"최대 140글자까지 입력가능합니다\"\n              onChange={onChangeCaution}\n            />\n          </TextAreaContainer>\n          <TextAreaContainer>\n            <label>커뮤니티 가입조건</label>\n            <textarea\n              value={requirement}\n              name=\"requirement\"\n              placeholder=\"최대 140글자까지 입력가능합니다\"\n              onChange={onChangeRequirement}\n            />\n          </TextAreaContainer>\n          <div className=\"create-btn\">\n            <Button ghost htmlType=\"submit\">\n              수정하기\n            </Button>\n          </div>\n        </ModalFormContainer>\n      </Form>\n    </ModalContainer>\n  );\n}\n\nexport default memo(CommunityModal);\n"]},"metadata":{},"sourceType":"module"}