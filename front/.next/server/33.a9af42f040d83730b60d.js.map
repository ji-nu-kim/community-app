{"version":3,"sources":["webpack:///./components/CommunityBody/Meet/styles.tsx","webpack:///./components/CommunityBody/Meet/index.tsx"],"names":["MeetContainer","styled","div","CardContainer","props","number","MakeMeetButton","ModifyMeetModal","dynamic","CreateMeetModal","Map","Meet","singleCommunity","communityUser","me","dispatch","useDispatch","addMeetDone","joinMeetDone","joinMeetError","useSelector","state","community","showCreateMeetModal","setShowCreateMeetModal","useState","showModifyMeetModal","setShowModifyMeetModal","currentMeet","setCurrentMeet","currentModifyMeet","setCurrentModifyMeet","joinedMeetIndex","Meets","map","meet","id","joinedMeetList","filter","includes","notJoinedMeetList","onClickPlace","useCallback","meetId","onClickMember","current","onClickCreateMeetButton","onClickDeleteMeetButton","confirm","removeMeetRequestAction","communityId","onClickJoinMeetButton","currentMembers","totalMembers","alert","joinMeetRequestAction","onClickLeaveMeetButton","leaveMeetRequestAction","onClickModifyMeetButton","useEffect","overflow","length","i","title","date","fee","Users","members","place","user","MeetOwnerId","nickname","find","memo"],"mappings":"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","file":"33.a9af42f040d83730b60d.js","sourcesContent":["import styled from 'styled-components';\r\n\r\ninterface ICardContainer {\r\n  number: number;\r\n}\r\n\r\nexport const MeetContainer = styled.div`\r\n  position: relative;\r\n  height: 100%;\r\n  backdrop-filter: blur(2px);\r\n  -webkit-backdrop-filter: blur(2px);\r\n  background: rgba(0, 0, 0, 0.4);\r\n  display: grid;\r\n  grid-template-rows: auto 55px;\r\n\r\n  .visitor-post {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .joined-meet,\r\n  .new-meet {\r\n    display: grid;\r\n    grid-template-rows: 44px auto;\r\n\r\n    .meet-members,\r\n    .meet-place {\r\n      cursor: pointer;\r\n\r\n      :hover {\r\n        color: #039be5;\r\n      }\r\n    }\r\n\r\n    .meet-name {\r\n      margin-left: 1rem;\r\n      align-self: center;\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  padding: 1rem;\r\n  position: relative;\r\n  width: 100%;\r\n  height: 300px;\r\n  display: grid;\r\n  grid-template-columns: 1fr 1fr;\r\n\r\n  .card-left {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    z-index: 10;\r\n    filter: ${(props: ICardContainer) => `hue-rotate(${props.number * 60}deg)`};\r\n    background: ${(props: ICardContainer) =>\r\n      `linear-gradient(\r\n      ${props.number * 60}deg,\r\n      rgba(255, 252, 0, 0.85) 0%,\r\n      rgba(252, 0, 255, 0.85) 45%,\r\n      rgba(0, 255, 252, 0.85) 100%\r\n    )`};\r\n\r\n    text-align: center;\r\n    .card-header {\r\n      font-size: 1.5rem;\r\n      font-weight: bold;\r\n      margin-bottom: 2rem;\r\n    }\r\n    .card-body {\r\n      font-size: 0.75rem;\r\n      div {\r\n        margin-bottom: 0.5rem;\r\n      }\r\n\r\n      .meet-button {\r\n        button {\r\n          cursor: pointer;\r\n          border: none;\r\n          background: #039be5;\r\n          height: 30px;\r\n\r\n          :hover {\r\n            background: #0282c2;\r\n          }\r\n        }\r\n        .owner-buttons {\r\n          button:first-child {\r\n            margin-right: 1rem;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .card-right {\r\n    background: rgba(255, 255, 255, 0.4);\r\n    z-index: 5;\r\n\r\n    .show-members {\r\n      width: 100%;\r\n      height: 100%;\r\n      display: grid;\r\n      grid-template-rows: 30% 70%;\r\n      align-items: center;\r\n      justify-items: center;\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n\r\n      .member-container {\r\n        width: 100%;\r\n        height: 100%;\r\n        padding: 1rem;\r\n\r\n        p {\r\n          margin-right: 1rem;\r\n          display: inline;\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const MakeMeetButton = styled.div`\r\n  margin-right: 1rem;\r\n  align-self: center;\r\n  justify-self: end;\r\n  cursor: pointer;\r\n  width: 30px;\r\n  height: 30px;\r\n  border-radius: 50%;\r\n  border: 2px solid hotpink;\r\n  color: hotpink;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  z-index: 100;\r\n\r\n  :hover {\r\n    filter: hue-rotate(180deg);\r\n  }\r\n`;\r\n","import { PlusOutlined } from '@ant-design/icons';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\nimport React, { memo, useCallback, useState, useEffect } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\r\nimport {\r\n  joinMeetRequestAction,\r\n  leaveMeetRequestAction,\r\n  removeMeetRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\n\r\nconst ModifyMeetModal = dynamic(() => import('components/Modals/ModifyMeetModal'));\r\nconst CreateMeetModal = dynamic(() => import('components/Modals/CreateMeetModal'));\r\nconst Map = dynamic(() => import('components/Map'));\r\n\r\ninterface MeeetProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction Meet({ singleCommunity, communityUser, me }: MeeetProps) {\r\n  const dispatch = useDispatch();\r\n  const { addMeetDone, joinMeetDone, joinMeetError } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [showCreateMeetModal, setShowCreateMeetModal] = useState(false);\r\n  const [showModifyMeetModal, setShowModifyMeetModal] = useState(false);\r\n  const [currentMeet, setCurrentMeet] = useState<number[]>([]);\r\n  const [currentModifyMeet, setCurrentModifyMeet] = useState(-9999);\r\n  const joinedMeetIndex = me?.Meets.map(meet => meet.id);\r\n  const joinedMeetList = singleCommunity.Meets.filter(meet =>\r\n    joinedMeetIndex?.includes(meet.id)\r\n  );\r\n  const notJoinedMeetList = singleCommunity.Meets.filter(\r\n    meet => !joinedMeetIndex?.includes(meet.id)\r\n  );\r\n\r\n  const onClickPlace = useCallback(\r\n    (meetId: number) => () => {\r\n      if (currentMeet.includes(meetId)) {\r\n        return;\r\n      }\r\n      setCurrentMeet([...currentMeet, meetId]);\r\n    },\r\n    [currentMeet]\r\n  );\r\n\r\n  const onClickMember = useCallback(\r\n    (meetId: number) => () => {\r\n      setCurrentMeet([...currentMeet].filter(current => current !== meetId));\r\n    },\r\n    [currentMeet]\r\n  );\r\n\r\n  const onClickCreateMeetButton = useCallback(() => {\r\n    setShowCreateMeetModal(true);\r\n  }, []);\r\n\r\n  const onClickDeleteMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      if (confirm('모임을 삭제하시겠습니까?')) {\r\n        return dispatch(\r\n          removeMeetRequestAction({ meetId, communityId: singleCommunity.id })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickJoinMeetButton = useCallback(\r\n    (meetId: number, currentMembers: number, totalMembers: number) => () => {\r\n      if (currentMembers >= totalMembers) {\r\n        return alert('인원 수가 초과되었습니다');\r\n      }\r\n      if (confirm('모임에 참가하시겠습니까?')) {\r\n        return dispatch(\r\n          joinMeetRequestAction({ meetId, communityId: singleCommunity.id })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickLeaveMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      if (confirm('모임을 탈퇴하시겠습니까?')) {\r\n        return dispatch(\r\n          leaveMeetRequestAction({ communityId: singleCommunity.id, meetId })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickModifyMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      setCurrentModifyMeet(meetId);\r\n      setShowModifyMeetModal(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addMeetDone) {\r\n      setShowCreateMeetModal(false);\r\n    }\r\n  }, [addMeetDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinMeetDone) {\r\n      setShowModifyMeetModal(false);\r\n    }\r\n  }, [joinMeetDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinMeetError) {\r\n      alert(joinMeetError);\r\n    }\r\n  }, [joinMeetError]);\r\n\r\n  return (\r\n    <MeetContainer>\r\n      {communityUser ? (\r\n        <>\r\n          <div style={{ overflow: 'auto' }}>\r\n            {joinedMeetList.length ? (\r\n              <div className=\"joined-meet\">\r\n                <div className=\"meet-name\">참가한 모임</div>\r\n                <div className=\"meet-card-grid\">\r\n                  {joinedMeetList.map((meet, i) => (\r\n                    <div key={meet.id}>\r\n                      <CardContainer number={i}>\r\n                        <div className=\"card-left\">\r\n                          <div className=\"card-header\">\r\n                            <div className=\"meet-title\">{meet.title}</div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"meet-date\">{meet.date}시</div>\r\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\r\n                            <div\r\n                              className=\"meet-members\"\r\n                              onClick={onClickMember(meet.id)}\r\n                            >\r\n                              인원: {meet.Users.length} / {meet.members}명\r\n                            </div>\r\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\r\n                              장소: {meet.place}\r\n                            </div>\r\n                            <div className=\"meet-owner\">\r\n                              모임리더:{' '}\r\n                              {meet.Users.map(\r\n                                user => user.id === meet.MeetOwnerId && user.nickname\r\n                              )}\r\n                            </div>\r\n                            <div className=\"meet-button\">\r\n                              {meet.MeetOwnerId === me?.id ? (\r\n                                <div className=\"owner-buttons\">\r\n                                  <button onClick={onClickModifyMeetButton(meet.id)}>\r\n                                    수정\r\n                                  </button>\r\n                                  <button onClick={onClickDeleteMeetButton(meet.id)}>\r\n                                    삭제\r\n                                  </button>\r\n                                </div>\r\n                              ) : (\r\n                                <button onClick={onClickLeaveMeetButton(meet.id)}>\r\n                                  탈퇴\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-right\">\r\n                          {currentMeet.includes(meet.id) ? (\r\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\r\n                          ) : (\r\n                            <div className=\"show-members\">\r\n                              <div>참가멤버</div>\r\n                              <div className=\"member-container\">\r\n                                {meet.Users.map(user => (\r\n                                  <p key={user.id}>{user.nickname}</p>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </CardContainer>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"new-meet\">\r\n              <div className=\"meet-name\">새로운 모임</div>\r\n              {notJoinedMeetList.length\r\n                ? notJoinedMeetList.map((meet, i) => (\r\n                    <div key={meet.id}>\r\n                      <CardContainer number={i}>\r\n                        <div className=\"card-left\">\r\n                          <div className=\"card-header\">\r\n                            <div className=\"meet-title\">{meet.title}</div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"meet-date\">{meet.date}시</div>\r\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\r\n                            <div\r\n                              className=\"meet-members\"\r\n                              onClick={onClickMember(meet.id)}\r\n                            >\r\n                              인원: {meet.Users.length} / {meet.members}명\r\n                            </div>\r\n\r\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\r\n                              장소: {meet.place}\r\n                            </div>\r\n                            <div className=\"meet-owner\">\r\n                              모임리더:{' '}\r\n                              {meet.Users.map(\r\n                                user => user.id === meet.MeetOwnerId && user.nickname\r\n                              )}\r\n                            </div>\r\n                            <div className=\"meet-button\">\r\n                              {meet.Users.length < meet.members ? (\r\n                                <button\r\n                                  onClick={onClickJoinMeetButton(\r\n                                    meet.id,\r\n                                    meet.Users.length,\r\n                                    meet.members\r\n                                  )}\r\n                                >\r\n                                  참가하기\r\n                                </button>\r\n                              ) : (\r\n                                <button>인원제한</button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"card-right\">\r\n                          {currentMeet.includes(meet.id) ? (\r\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\r\n                          ) : (\r\n                            <div className=\"show-members\">\r\n                              <div>참가멤버</div>\r\n                              <div className=\"member-container\">\r\n                                {meet.Users.map(user => (\r\n                                  <p key={user.id}>{user.nickname}</p>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </CardContainer>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n\r\n          <MakeMeetButton onClick={onClickCreateMeetButton}>\r\n            <PlusOutlined />\r\n          </MakeMeetButton>\r\n\r\n          {showCreateMeetModal && (\r\n            <CreateMeetModal\r\n              setShowCreateMeetModal={setShowCreateMeetModal}\r\n              communityId={singleCommunity.id}\r\n            />\r\n          )}\r\n\r\n          {showModifyMeetModal && (\r\n            <ModifyMeetModal\r\n              setShowModifyMeetModal={setShowModifyMeetModal}\r\n              communityId={singleCommunity.id}\r\n              meetInfo={joinedMeetList.find(meet => meet.id === currentModifyMeet)}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"visitor-post\">커뮤니티 유저만 볼 수 있습니다</div>\r\n      )}\r\n    </MeetContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Meet);\r\n"],"sourceRoot":""}