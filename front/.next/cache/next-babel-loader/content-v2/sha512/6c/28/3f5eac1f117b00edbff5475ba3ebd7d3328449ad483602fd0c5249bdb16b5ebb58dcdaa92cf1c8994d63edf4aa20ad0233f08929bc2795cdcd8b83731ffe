{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { loadCategoryCommunitiesRequestAction } from 'actions/actionCommunity';\nimport AppLayout from 'components/Layouts/AppLayout';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport CategoryLayout, { CategoryContent, CategoryHeader } from 'components/Layouts/CategoryLayout';\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\nimport Link from 'next/link';\nimport Head from 'next/head';\n\nfunction Category() {\n  var dispatch = useDispatch();\n  var router = useRouter();\n\n  var _useSelector = useSelector(function (state) {\n    return state.community;\n  }),\n      changableCommunities = _useSelector.changableCommunities,\n      hasMoreCommunity = _useSelector.hasMoreCommunity,\n      loadCommunitiesLoading = _useSelector.loadCommunitiesLoading,\n      singleCategory = _useSelector.singleCategory,\n      communityLength = _useSelector.communityLength;\n\n  useEffect(function () {\n    function onScroll() {\n      if (changableCommunities.length) {\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 300) {\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\n            var categoryId = Number(router.query.id);\n            var lastId = changableCommunities[changableCommunities.length - 1].id;\n            dispatch(loadCategoryCommunitiesRequestAction({\n              categoryId: categoryId,\n              communityId: lastId\n            }));\n          }\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      return window.removeEventListener('scroll', onScroll);\n    };\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\n\n  if (!singleCategory) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsxs(\"title\", {\n        children: [\"community - \", singleCategory.name, \" \\uCE74\\uD14C\\uACE0\\uB9AC\"]\n      })\n    }), /*#__PURE__*/_jsx(AppLayout, {\n      children: /*#__PURE__*/_jsxs(CategoryLayout, {\n        img: singleCategory.profilePhoto,\n        children: [/*#__PURE__*/_jsx(CategoryHeader, {\n          children: /*#__PURE__*/_jsxs(\"h1\", {\n            children: [singleCategory.name, /*#__PURE__*/_jsx(\"br\", {}), communityLength, \"\\uAC1C\\uC758 \\uCEE4\\uBBA4\\uB2C8\\uD2F0\"]\n          })\n        }), /*#__PURE__*/_jsx(CategoryContent, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"cards-container\",\n            children: changableCommunities.map(function (community) {\n              return /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: \"/community/\".concat(community.id),\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: /*#__PURE__*/_jsx(BoxStyleCard, {\n                      profilePhoto: community.profilePhoto,\n                      categoryName: community.Categories[0].name,\n                      country: community.country,\n                      communityName: community.communityName\n                    })\n                  })\n                })\n              }, community.id);\n            })\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport var __N_SSP = true;\nexport default Category;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/pages/category/[id].tsx"],"names":["loadCategoryCommunitiesRequestAction","AppLayout","useRouter","React","useEffect","useDispatch","useSelector","CategoryLayout","CategoryContent","CategoryHeader","BoxStyleCard","Link","Head","Category","dispatch","router","state","community","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","singleCategory","communityLength","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","categoryId","Number","query","id","lastId","communityId","addEventListener","removeEventListener","name","profilePhoto","map","Categories","country","communityName"],"mappings":"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","sourcesContent":["import { END } from '@redux-saga/core';\nimport {\n  loadCategoryCommunitiesRequestAction,\n  loadCategoryRequestAction,\n} from 'actions/actionCommunity';\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\nimport axios from 'axios';\nimport AppLayout from 'components/Layouts/AppLayout';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport wrapper from 'store/configureStore';\nimport CategoryLayout, {\n  CategoryContent,\n  CategoryHeader,\n} from 'components/Layouts/CategoryLayout';\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\nimport Link from 'next/link';\nimport Head from 'next/head';\n\nfunction Category() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    changableCommunities,\n    hasMoreCommunity,\n    loadCommunitiesLoading,\n    singleCategory,\n    communityLength,\n  } = useSelector((state: RootStateInterface) => state.community);\n\n  useEffect(() => {\n    function onScroll() {\n      if (changableCommunities.length) {\n        if (\n          window.scrollY + document.documentElement.clientHeight >=\n          document.documentElement.scrollHeight - 300\n        ) {\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\n            const categoryId = Number(router.query.id);\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\n            dispatch(\n              loadCategoryCommunitiesRequestAction({\n                categoryId,\n                communityId: lastId,\n              })\n            );\n          }\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\n\n  if (!singleCategory) {\n    return <div>잠시만 기다려주세요</div>;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>community - {singleCategory.name} 카테고리</title>\n      </Head>\n      <AppLayout>\n        <CategoryLayout img={singleCategory.profilePhoto}>\n          <CategoryHeader>\n            <h1>\n              {singleCategory.name}\n              <br />\n              {communityLength}개의 커뮤니티\n            </h1>\n          </CategoryHeader>\n          <CategoryContent>\n            <div className=\"cards-container\">\n              {changableCommunities.map(community => (\n                <div key={community.id}>\n                  <Link href={`/community/${community.id}`}>\n                    <a>\n                      <BoxStyleCard\n                        profilePhoto={community.profilePhoto}\n                        categoryName={community.Categories[0].name}\n                        country={community.country}\n                        communityName={community.communityName}\n                      />\n                    </a>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </CategoryContent>\n        </CategoryLayout>\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    const categoryId = Number(context.query.id);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoryRequestAction({ categoryId }));\n    context.store.dispatch(\n      loadCategoryCommunitiesRequestAction({\n        categoryId,\n        communityId: 0,\n      })\n    );\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Category;\n"]},"metadata":{},"sourceType":"module"}