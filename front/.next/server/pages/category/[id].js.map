{"version":3,"sources":["webpack://front/./pages/category/[id].tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"@redux-saga/core\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\""],"names":["Category","dispatch","useDispatch","router","useRouter","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","singleCategory","communityLength","useSelector","state","community","useEffect","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","categoryId","Number","query","id","lastId","loadCategoryCommunitiesRequestAction","communityId","addEventListener","removeEventListener","name","profilePhoto","map","Categories","country","communityName","getServerSideProps","wrapper","context","cookie","req","headers","axios","store","loadMyInfoRequestAction","loadCategoryRequestAction","END","sagaTask","toPromise"],"mappings":"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","file":"../pages/category/[id].js","sourcesContent":["import { END } from '@redux-saga/core';\r\nimport {\r\n  loadCategoryCommunitiesRequestAction,\r\n  loadCategoryRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport CategoryLayout, {\r\n  CategoryContent,\r\n  CategoryHeader,\r\n} from 'components/Layouts/CategoryLayout';\r\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nfunction Category() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const {\r\n    changableCommunities,\r\n    hasMoreCommunity,\r\n    loadCommunitiesLoading,\r\n    singleCategory,\r\n    communityLength,\r\n  } = useSelector((state: RootStateInterface) => state.community);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (changableCommunities.length) {\r\n        if (\r\n          window.scrollY + document.documentElement.clientHeight >=\r\n          document.documentElement.scrollHeight - 300\r\n        ) {\r\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\r\n            const categoryId = Number(router.query.id);\r\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\r\n            dispatch(\r\n              loadCategoryCommunitiesRequestAction({\r\n                categoryId,\r\n                communityId: lastId,\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\r\n\r\n  if (!singleCategory) {\r\n    return <div>잠시만 기다려주세요</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {singleCategory.name} 카테고리</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CategoryLayout img={singleCategory.profilePhoto}>\r\n          <CategoryHeader>\r\n            <h1>\r\n              {singleCategory.name}\r\n              <br />\r\n              {communityLength}개의 커뮤니티\r\n            </h1>\r\n          </CategoryHeader>\r\n          <CategoryContent>\r\n            <div className=\"cards-container\">\r\n              {changableCommunities.map(community => (\r\n                <div key={community.id}>\r\n                  <Link href={`/community/${community.id}`} prefetch={false}>\r\n                    <a>\r\n                      <BoxStyleCard\r\n                        profilePhoto={community.profilePhoto}\r\n                        categoryName={community.Categories[0].name}\r\n                        country={community.country}\r\n                        communityName={community.communityName}\r\n                      />\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CategoryContent>\r\n        </CategoryLayout>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const categoryId = Number(context.query.id);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoryRequestAction({ categoryId }));\r\n    context.store.dispatch(\r\n      loadCategoryCommunitiesRequestAction({\r\n        categoryId,\r\n        communityId: 0,\r\n      })\r\n    );\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Category;\r\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"@redux-saga/core\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;"],"sourceRoot":""}