{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack://_N_E/./actions/actionUser.ts","webpack://_N_E/./components/Cards/RoundStyleCard/styles.tsx","webpack://_N_E/./components/Cards/RoundStyleCard/index.tsx","webpack://_N_E/./components/Layouts/AppLayout.tsx","webpack://_N_E/./components/Layouts/ProfileLayout.tsx","webpack://_N_E/./pages/profile.tsx","webpack://_N_E/?5716"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","loginRequestAction","data","type","actionTypesUser","logOutRequestAction","removeImage","uploadImageRequestAction","signUpRequestAction","leaveRequestAction","changeProfileRequestAction","changeCountryRequestAction","checkNotificationRequestAction","removeNotificationRequestAction","btnRotateAni","keyframes","CardContainer","styled","img","width","height","name","NavBar","dynamic","SideBar","UserInfoModal","NotificationModal","Global","createGlobalStyle","AppLayout","children","useSelector","state","user","me","leaveDone","leaveError","useState","userInfoModal","setUserInfoModal","notificationModal","setNotificationModal","useEffect","alert","notices","Notices","style","display","gridTemplateColumns","memo","ProfileContainer","ProfileHeader","ProfileContent","UserProfileModifyModal","SearchAddressModal","Profile","dispatch","useDispatch","changeProfileDone","userProfileModifyModal","setUserProfileModifyModal","showSearchAddressModal","setShowSearchAdressModal","modifyCountry","setModifyCountry","openSearchAddressModal","useCallback","closeSearchAddressModal","profileModifyModalTrigger","prev","confirm","country","Router","className","profilePhoto","src","alt","UserOutlined","nickname","onClick","Categories","map","category","href","id","prefetch","RoundStyleCard","process","Communities","community","communityName","setCountry","window","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/profile-2ba993d682b21487c91b.js","sourcesContent":["// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import { IChangeCommunityInfoReturnData } from 'interfaces';\nimport { IMeet } from 'interfaces/db';\nimport {\n  actionTypesUser,\n  ILogInRequest,\n  ILogOutRequest,\n  ILoadMyInfoRequest,\n  IUploadImageRequest,\n  ISignUpRequest,\n  ILeaveRequest,\n  IChangeProfileRequest,\n  IChangeCountryRequest,\n  ICheckNotificationRequest,\n  IRemoveNotificationRequest,\n  IAddMeetOfMe,\n  IRemoveMeetOfMe,\n  IModifyMeetOfMe,\n  IJoinMeeetOfMe,\n  ILeaveMeetOfMe,\n  ILeaveCommunityOfMe,\n  IChangeCommunityOfMe,\n  SignUpData,\n  LoginData,\n  IRemoveUserImage,\n  ChangeProfileData,\n} from '../interfaces/user/userAction.interfaces';\n\nexport const loginRequestAction = (data: LoginData): ILogInRequest => {\n  return {\n    type: actionTypesUser.LOG_IN_REQUEST,\n    data,\n  };\n};\nexport const logOutRequestAction = (): ILogOutRequest => {\n  return {\n    type: actionTypesUser.LOG_OUT_REQUEST,\n  };\n};\nexport const loadMyInfoRequestAction = (): ILoadMyInfoRequest => {\n  return {\n    type: actionTypesUser.LOAD_MY_INFO_REQUEST,\n  };\n};\nexport const removeImage = (): IRemoveUserImage => {\n  return {\n    type: actionTypesUser.REMOVE_IMAGE,\n  };\n};\nexport const uploadImageRequestAction = (data: FormData): IUploadImageRequest => {\n  return {\n    type: actionTypesUser.UPLOAD_IMAGE_REQUEST,\n    data,\n  };\n};\nexport const signUpRequestAction = (data: SignUpData): ISignUpRequest => {\n  return {\n    type: actionTypesUser.SIGN_UP_REQUEST,\n    data,\n  };\n};\nexport const leaveRequestAction = (data: { userId: number }): ILeaveRequest => {\n  return {\n    type: actionTypesUser.LEAVE_REQUEST,\n    data,\n  };\n};\nexport const changeProfileRequestAction = (\n  data: ChangeProfileData\n): IChangeProfileRequest => {\n  return {\n    type: actionTypesUser.CHANGE_PROFILE_REQUEST,\n    data,\n  };\n};\nexport const changeCountryRequestAction = (data: {\n  country: string;\n}): IChangeCountryRequest => {\n  return {\n    type: actionTypesUser.CHANGE_COUNTRY_REQUEST,\n    data,\n  };\n};\nexport const checkNotificationRequestAction = (): ICheckNotificationRequest => {\n  return {\n    type: actionTypesUser.CHECK_NOTIFICATION_REQUEST,\n  };\n};\nexport const removeNotificationRequestAction = (data: {\n  notificationId: number;\n}): IRemoveNotificationRequest => {\n  return {\n    type: actionTypesUser.REMOVE_NOTIFICATION_REQUEST,\n    data,\n  };\n};\nexport const addMeetOfMe = (data: IMeet): IAddMeetOfMe => {\n  return {\n    type: actionTypesUser.ADD_MEET_OF_ME,\n    data,\n  };\n};\nexport const removeMeetOfMe = (data: { meetId: number }): IRemoveMeetOfMe => {\n  return {\n    type: actionTypesUser.REMOVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const modifyMeetOfMe = (data: IMeet): IModifyMeetOfMe => {\n  return {\n    type: actionTypesUser.MODIFY_MEET_OF_ME,\n    data,\n  };\n};\nexport const joinMeetOfMe = (data: IMeet): IJoinMeeetOfMe => {\n  return {\n    type: actionTypesUser.JOIN_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveMeetOfMe = (data: {\n  meetId: number;\n  userId: number;\n}): ILeaveMeetOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveCommunityOfMe = (data: {\n  communityId: number;\n  userId: number;\n}): ILeaveCommunityOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_COMMUNITY_OF_ME,\n    data,\n  };\n};\nexport const changeCommunityOfMe = (\n  data: IChangeCommunityInfoReturnData\n): IChangeCommunityOfMe => {\n  return {\n    type: actionTypesUser.CHANGE_COMMUNITY_OF_ME,\n    data,\n  };\n};\n","import styled, { keyframes } from 'styled-components';\r\n\r\ninterface ICategoryCard {\r\n  img: string | null;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst btnRotateAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\r\n    url(${(props: ICategoryCard) => props.img && props.img});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  min-width: ${(props: ICategoryCard) => props.width}px;\r\n  min-height: ${(props: ICategoryCard) => props.height}px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 16px 0 rgba(31, 38, 135, 0.37);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),\r\n      url(${(props: ICategoryCard) => props.img && props.img});\r\n\r\n    h2 {\r\n      color: coral;\r\n      animation: ${btnRotateAni} 1s linear infinite;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    z-index: 10;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { CardContainer } from './styles';\r\n\r\ninterface RoundStyleCardProps {\r\n  name: string;\r\n  img: string | null;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nfunction RoundStyleCard({ name, img, width, height }: RoundStyleCardProps) {\r\n  return (\r\n    <CardContainer img={img} width={width} height={height}>\r\n      <h2>{name}</h2>\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default RoundStyleCard;\r\n","import React, { memo, ReactNode, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { createGlobalStyle } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\n\nconst NavBar = dynamic(() => import('components/NavBar'));\nconst SideBar = dynamic(() => import('components/SideBar'));\nconst UserInfoModal = dynamic(() => import('components/Modals/UserInfoModal'));\nconst NotificationModal = dynamic(() => import('components/Modals/NotificationModal'));\n\nconst Global = createGlobalStyle`\n  .ant-row {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .ant-col:first-child {\n    padding-left: 0 !important;\n  }\n  .ant-col:last-child {\n    padding-right: 0 !important;\n  }\n`;\ninterface AppLayoutProps {\n  children: ReactNode;\n}\n\nfunction AppLayout({ children }: AppLayoutProps) {\n  const { me, leaveDone, leaveError } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userInfoModal, setUserInfoModal] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n\n  useEffect(() => {\n    if (leaveDone) {\n      alert('탈퇴처리가 완료되었습니다');\n    }\n  }, [leaveDone]);\n\n  useEffect(() => {\n    if (leaveError) {\n      alert(leaveError);\n    }\n  }, [leaveError]);\n\n  return (\n    <div>\n      <Global />\n      <NavBar\n        notices={me?.Notices}\n        userInfoModal={userInfoModal}\n        setUserInfoModal={setUserInfoModal}\n        setNotificationModal={setNotificationModal}\n      />\n\n      <div style={{ display: 'grid', gridTemplateColumns: '200px auto' }}>\n        <SideBar />\n        <div>{children}</div>\n      </div>\n      {userInfoModal && <UserInfoModal setUserInfoModal={setUserInfoModal} />}\n      {notificationModal && (\n        <NotificationModal\n          setNotificationModal={setNotificationModal}\n          notices={me?.Notices}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(AppLayout);\n","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ProfileLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ProfileHeader = styled.div`\r\n  padding: 1rem;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\r\n  display: grid;\r\n  grid-template-columns: auto 76px;\r\n\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    .header-image {\r\n      width: 150px;\r\n      height: 150px;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #cacaca;\r\n        font-size: 3rem;\r\n      }\r\n    }\r\n    .header-text {\r\n      margin-left: 1rem;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      p {\r\n        font-size: 0.75rem;\r\n        color: #039be5;\r\n        font-weight: bold;\r\n      }\r\n      h1 {\r\n        color: #fff;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n      }\r\n\r\n      .text-country {\r\n        cursor: pointer;\r\n        color: #cdcedf;\r\n        font-size: 0.8rem;\r\n        font-weight: bold;\r\n\r\n        :hover {\r\n          color: #039be5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    button {\r\n      border: none;\r\n      color: #fff;\r\n      background: #039be5;\r\n      height: 28px;\r\n      font-size: 0.75rem;\r\n\r\n      :hover {\r\n        cursor: pointer;\r\n        background: #007bb8;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProfileContent = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n  h1 {\r\n    font-family: 'Black Han Sans', sans-serif;\r\n    font-size: 2rem;\r\n    color: hotpink;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, auto));\r\n  }\r\n`;\r\n\r\nfunction ProfileLayout({ children }: ProfileLayoutProps) {\r\n  return <ProfileContainer>{children}</ProfileContainer>;\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import AppLayout from '../components/Layouts/AppLayout';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport { GetServerSideProps } from 'next';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, {\n  ProfileContent,\n  ProfileHeader,\n} from 'components/Layouts/ProfileLayout';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\n\nconst UserProfileModifyModal = dynamic(\n  () => import('components/Modals/UserProfileModifyModal')\n);\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const { me, changeProfileDone } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userProfileModifyModal, setUserProfileModifyModal] = useState(false);\n  const [showSearchAddressModal, setShowSearchAdressModal] = useState(false);\n  const [modifyCountry, setModifyCountry] = useState('');\n\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({ country: modifyCountry }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  return (\n    <>\n      <Head>\n        <title>프로필 - community</title>\n      </Head>\n      <AppLayout>\n        <ProfileLayout>\n          <ProfileHeader>\n            <div className=\"header-left\">\n              <div className=\"header-image\">\n                {me?.profilePhoto ? (\n                  <img\n                    src={me?.profilePhoto}\n                    width=\"150\"\n                    height=\"150\"\n                    alt=\"profile-image\"\n                  />\n                ) : (\n                  <UserOutlined className=\"header-icon\" />\n                )}\n              </div>\n              <div className=\"header-text\">\n                <p>프로필</p>\n                <h1>{me?.nickname}</h1>\n                <p className=\"text-country\" onClick={openSearchAddressModal}>\n                  {me?.country}\n                </p>\n              </div>\n            </div>\n            <div className=\"header-right\">\n              <button onClick={profileModifyModalTrigger}>수정하기</button>\n            </div>\n          </ProfileHeader>\n          <ProfileContent>\n            <div>\n              <h1>나의 카테고리 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Categories?.map(category => (\n                  <div key={category.name}>\n                    <Link href={`/category/${category.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={category.name}\n                          img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h1>나의 커뮤니티 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Communities?.map(community => (\n                  <div key={community.communityName}>\n                    <Link href={`/community/${community.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={community.communityName}\n                          img={community.profilePhoto ? community.profilePhoto : null}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ProfileContent>\n        </ProfileLayout>\n\n        {userProfileModifyModal && (\n          <UserProfileModifyModal setUserProfileModifyModal={setUserProfileModifyModal} />\n        )}\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setModifyCountry}\n            type=\"village\"\n          />\n        )}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoriesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Profile);\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/profile\",\n      function () {\n        return require(\"private-next-pages/profile.tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}