{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { memo, useCallback, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\nimport { joinMeetRequestAction, leaveMeetRequestAction, removeMeetRequestAction } from 'actions/actionCommunity';\nimport { useDispatch, useSelector } from 'react-redux';\nconst ModifyMeetModal = dynamic(() => import('components/Modals/ModifyMeetModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/ModifyMeetModal')],\n    modules: ['components/Modals/ModifyMeetModal']\n  }\n});\nconst CreateMeetModal = dynamic(() => import('components/Modals/CreateMeetModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/CreateMeetModal')],\n    modules: ['components/Modals/CreateMeetModal']\n  }\n});\nconst Map = dynamic(() => import('components/Map'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Map')],\n    modules: ['components/Map']\n  }\n});\n\nfunction Meet({\n  singleCommunity,\n  communityUser,\n  me\n}) {\n  const dispatch = useDispatch();\n  const {\n    addMeetDone,\n    joinMeetDone,\n    joinMeetError\n  } = useSelector(state => state.community);\n  const {\n    0: showCreateMeetModal,\n    1: setShowCreateMeetModal\n  } = useState(false);\n  const {\n    0: showModifyMeetModal,\n    1: setShowModifyMeetModal\n  } = useState(false);\n  const {\n    0: currentMeet,\n    1: setCurrentMeet\n  } = useState([]);\n  const {\n    0: currentModifyMeet,\n    1: setCurrentModifyMeet\n  } = useState(-9999);\n  const joinedMeetIndex = me === null || me === void 0 ? void 0 : me.Meets.map(meet => meet.id);\n  const joinedMeetList = singleCommunity.Meets.filter(meet => joinedMeetIndex === null || joinedMeetIndex === void 0 ? void 0 : joinedMeetIndex.includes(meet.id));\n  const notJoinedMeetList = singleCommunity.Meets.filter(meet => !(joinedMeetIndex !== null && joinedMeetIndex !== void 0 && joinedMeetIndex.includes(meet.id)));\n  const onClickPlace = useCallback(meetId => () => {\n    if (currentMeet.includes(meetId)) {\n      return;\n    }\n\n    setCurrentMeet([...currentMeet, meetId]);\n  }, [currentMeet]);\n  const onClickMember = useCallback(meetId => () => {\n    setCurrentMeet([...currentMeet].filter(current => current !== meetId));\n  }, [currentMeet]);\n  const onClickCreateMeetButton = useCallback(() => {\n    setShowCreateMeetModal(true);\n  }, []);\n  const onClickDeleteMeetButton = useCallback(meetId => () => {\n    if (confirm('모임을 삭제하시겠습니까?')) {\n      return dispatch(removeMeetRequestAction({\n        meetId,\n        communityId: singleCommunity.id\n      }));\n    }\n  }, [singleCommunity]);\n  const onClickJoinMeetButton = useCallback((meetId, currentMembers, totalMembers) => () => {\n    if (currentMembers >= totalMembers) {\n      return alert('인원 수가 초과되었습니다');\n    }\n\n    if (confirm('모임에 참가하시겠습니까?')) {\n      return dispatch(joinMeetRequestAction({\n        meetId,\n        communityId: singleCommunity.id\n      }));\n    }\n  }, [singleCommunity]);\n  const onClickLeaveMeetButton = useCallback(meetId => () => {\n    if (confirm('모임을 탈퇴하시겠습니까?')) {\n      return dispatch(leaveMeetRequestAction({\n        communityId: singleCommunity.id,\n        meetId\n      }));\n    }\n  }, [singleCommunity]);\n  const onClickModifyMeetButton = useCallback(meetId => () => {\n    setCurrentModifyMeet(meetId);\n    setShowModifyMeetModal(true);\n  }, []);\n  useEffect(() => {\n    if (addMeetDone) {\n      setShowCreateMeetModal(false);\n    }\n  }, [addMeetDone]);\n  useEffect(() => {\n    if (joinMeetDone) {\n      setShowModifyMeetModal(false);\n    }\n  }, [joinMeetDone]);\n  useEffect(() => {\n    if (joinMeetError) {\n      alert(joinMeetError);\n    }\n  }, [joinMeetError]);\n  return /*#__PURE__*/_jsx(MeetContainer, {\n    children: communityUser ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          overflow: 'auto'\n        },\n        children: [joinedMeetList.length ? /*#__PURE__*/_jsxs(\"div\", {\n          className: \"joined-meet\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-name\",\n            children: \"\\uCC38\\uAC00\\uD55C \\uBAA8\\uC784\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-card-grid\",\n            children: joinedMeetList.map((meet, i) => /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsxs(CardContainer, {\n                number: i,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"card-left\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: \"card-header\",\n                    children: /*#__PURE__*/_jsx(\"div\", {\n                      className: \"meet-title\",\n                      children: meet.title\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-date\",\n                      children: [meet.date, \"\\uC2DC\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-fee\",\n                      children: [\"\\uCC38\\uAC00\\uBE44: \", meet.fee, \"\\uC6D0\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-members\",\n                      onClick: onClickMember(meet.id),\n                      children: [\"\\uC778\\uC6D0: \", meet.Users.length, \" / \", meet.members, \"\\uBA85\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-place\",\n                      onClick: onClickPlace(meet.id),\n                      children: [\"\\uC7A5\\uC18C: \", meet.place]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-owner\",\n                      children: [\"\\uBAA8\\uC784\\uB9AC\\uB354:\", ' ', meet.Users.map(user => user.id === meet.MeetOwnerId && user.nickname)]\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: \"meet-button\",\n                      children: meet.MeetOwnerId === (me === null || me === void 0 ? void 0 : me.id) ? /*#__PURE__*/_jsxs(\"div\", {\n                        className: \"owner-buttons\",\n                        children: [/*#__PURE__*/_jsx(\"button\", {\n                          onClick: onClickModifyMeetButton(meet.id),\n                          children: \"\\uC218\\uC815\"\n                        }), /*#__PURE__*/_jsx(\"button\", {\n                          onClick: onClickDeleteMeetButton(meet.id),\n                          children: \"\\uC0AD\\uC81C\"\n                        })]\n                      }) : /*#__PURE__*/_jsx(\"button\", {\n                        onClick: onClickLeaveMeetButton(meet.id),\n                        children: \"\\uD0C8\\uD1F4\"\n                      })\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"card-right\",\n                  children: currentMeet.includes(meet.id) ? /*#__PURE__*/_jsx(Map, {\n                    address: meet.place,\n                    number: meet.id\n                  }, meet.id) : /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"show-members\",\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      children: \"\\uCC38\\uAC00\\uBA64\\uBC84\"\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: \"member-container\",\n                      children: meet.Users.map(user => /*#__PURE__*/_jsx(\"p\", {\n                        children: user.nickname\n                      }, user.id))\n                    })]\n                  })\n                })]\n              })\n            }, meet.id))\n          })]\n        }) : null, /*#__PURE__*/_jsxs(\"div\", {\n          className: \"new-meet\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-name\",\n            children: \"\\uC0C8\\uB85C\\uC6B4 \\uBAA8\\uC784\"\n          }), notJoinedMeetList.length ? notJoinedMeetList.map((meet, i) => /*#__PURE__*/_jsx(\"div\", {\n            children: /*#__PURE__*/_jsxs(CardContainer, {\n              number: i,\n              children: [/*#__PURE__*/_jsxs(\"div\", {\n                className: \"card-left\",\n                children: [/*#__PURE__*/_jsx(\"div\", {\n                  className: \"card-header\",\n                  children: /*#__PURE__*/_jsx(\"div\", {\n                    className: \"meet-title\",\n                    children: meet.title\n                  })\n                }), /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"card-body\",\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"meet-date\",\n                    children: [meet.date, \"\\uC2DC\"]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"meet-fee\",\n                    children: [\"\\uCC38\\uAC00\\uBE44: \", meet.fee, \"\\uC6D0\"]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"meet-members\",\n                    onClick: onClickMember(meet.id),\n                    children: [\"\\uC778\\uC6D0: \", meet.Users.length, \" / \", meet.members, \"\\uBA85\"]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"meet-place\",\n                    onClick: onClickPlace(meet.id),\n                    children: [\"\\uC7A5\\uC18C: \", meet.place]\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"meet-owner\",\n                    children: [\"\\uBAA8\\uC784\\uB9AC\\uB354:\", ' ', meet.Users.map(user => user.id === meet.MeetOwnerId && user.nickname)]\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"meet-button\",\n                    children: meet.Users.length < meet.members ? /*#__PURE__*/_jsx(\"button\", {\n                      onClick: onClickJoinMeetButton(meet.id, meet.Users.length, meet.members),\n                      children: \"\\uCC38\\uAC00\\uD558\\uAE30\"\n                    }) : /*#__PURE__*/_jsx(\"button\", {\n                      children: \"\\uC778\\uC6D0\\uC81C\\uD55C\"\n                    })\n                  })]\n                })]\n              }), /*#__PURE__*/_jsx(\"div\", {\n                className: \"card-right\",\n                children: currentMeet.includes(meet.id) ? /*#__PURE__*/_jsx(Map, {\n                  address: meet.place,\n                  number: meet.id\n                }, meet.id) : /*#__PURE__*/_jsxs(\"div\", {\n                  className: \"show-members\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    children: \"\\uCC38\\uAC00\\uBA64\\uBC84\"\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"member-container\",\n                    children: meet.Users.map(user => /*#__PURE__*/_jsx(\"p\", {\n                      children: user.nickname\n                    }, user.id))\n                  })]\n                })\n              })]\n            })\n          }, meet.id)) : null]\n        })]\n      }), /*#__PURE__*/_jsx(MakeMeetButton, {\n        onClick: onClickCreateMeetButton,\n        children: /*#__PURE__*/_jsx(PlusOutlined, {})\n      }), showCreateMeetModal && /*#__PURE__*/_jsx(CreateMeetModal, {\n        setShowCreateMeetModal: setShowCreateMeetModal,\n        communityId: singleCommunity.id\n      }), showModifyMeetModal && /*#__PURE__*/_jsx(ModifyMeetModal, {\n        setShowModifyMeetModal: setShowModifyMeetModal,\n        communityId: singleCommunity.id,\n        meetInfo: joinedMeetList.find(meet => meet.id === currentModifyMeet)\n      })]\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: \"visitor-post\",\n      children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC720\\uC800\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n    })\n  });\n}\n\nexport default /*#__PURE__*/memo(Meet);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/CommunityBody/Meet/index.tsx"],"names":["PlusOutlined","React","memo","useCallback","useState","useEffect","dynamic","MakeMeetButton","MeetContainer","CardContainer","joinMeetRequestAction","leaveMeetRequestAction","removeMeetRequestAction","useDispatch","useSelector","ModifyMeetModal","CreateMeetModal","Map","Meet","singleCommunity","communityUser","me","dispatch","addMeetDone","joinMeetDone","joinMeetError","state","community","showCreateMeetModal","setShowCreateMeetModal","showModifyMeetModal","setShowModifyMeetModal","currentMeet","setCurrentMeet","currentModifyMeet","setCurrentModifyMeet","joinedMeetIndex","Meets","map","meet","id","joinedMeetList","filter","includes","notJoinedMeetList","onClickPlace","meetId","onClickMember","current","onClickCreateMeetButton","onClickDeleteMeetButton","confirm","communityId","onClickJoinMeetButton","currentMembers","totalMembers","alert","onClickLeaveMeetButton","onClickModifyMeetButton","overflow","length","i","title","date","fee","Users","members","place","user","MeetOwnerId","nickname","find"],"mappings":"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","sourcesContent":["import { PlusOutlined } from '@ant-design/icons';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\nimport React, { memo, useCallback, useState, useEffect } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\r\nimport {\r\n  joinMeetRequestAction,\r\n  leaveMeetRequestAction,\r\n  removeMeetRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\n\r\nconst ModifyMeetModal = dynamic(() => import('components/Modals/ModifyMeetModal'));\r\nconst CreateMeetModal = dynamic(() => import('components/Modals/CreateMeetModal'));\r\nconst Map = dynamic(() => import('components/Map'));\r\n\r\ninterface MeeetProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction Meet({ singleCommunity, communityUser, me }: MeeetProps) {\r\n  const dispatch = useDispatch();\r\n  const { addMeetDone, joinMeetDone, joinMeetError } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [showCreateMeetModal, setShowCreateMeetModal] = useState(false);\r\n  const [showModifyMeetModal, setShowModifyMeetModal] = useState(false);\r\n  const [currentMeet, setCurrentMeet] = useState<number[]>([]);\r\n  const [currentModifyMeet, setCurrentModifyMeet] = useState(-9999);\r\n  const joinedMeetIndex = me?.Meets.map(meet => meet.id);\r\n  const joinedMeetList = singleCommunity.Meets.filter(meet =>\r\n    joinedMeetIndex?.includes(meet.id)\r\n  );\r\n  const notJoinedMeetList = singleCommunity.Meets.filter(\r\n    meet => !joinedMeetIndex?.includes(meet.id)\r\n  );\r\n\r\n  const onClickPlace = useCallback(\r\n    (meetId: number) => () => {\r\n      if (currentMeet.includes(meetId)) {\r\n        return;\r\n      }\r\n      setCurrentMeet([...currentMeet, meetId]);\r\n    },\r\n    [currentMeet]\r\n  );\r\n\r\n  const onClickMember = useCallback(\r\n    (meetId: number) => () => {\r\n      setCurrentMeet([...currentMeet].filter(current => current !== meetId));\r\n    },\r\n    [currentMeet]\r\n  );\r\n\r\n  const onClickCreateMeetButton = useCallback(() => {\r\n    setShowCreateMeetModal(true);\r\n  }, []);\r\n\r\n  const onClickDeleteMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      if (confirm('모임을 삭제하시겠습니까?')) {\r\n        return dispatch(\r\n          removeMeetRequestAction({ meetId, communityId: singleCommunity.id })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickJoinMeetButton = useCallback(\r\n    (meetId: number, currentMembers: number, totalMembers: number) => () => {\r\n      if (currentMembers >= totalMembers) {\r\n        return alert('인원 수가 초과되었습니다');\r\n      }\r\n      if (confirm('모임에 참가하시겠습니까?')) {\r\n        return dispatch(\r\n          joinMeetRequestAction({ meetId, communityId: singleCommunity.id })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickLeaveMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      if (confirm('모임을 탈퇴하시겠습니까?')) {\r\n        return dispatch(\r\n          leaveMeetRequestAction({ communityId: singleCommunity.id, meetId })\r\n        );\r\n      }\r\n    },\r\n    [singleCommunity]\r\n  );\r\n\r\n  const onClickModifyMeetButton = useCallback(\r\n    (meetId: number) => () => {\r\n      setCurrentModifyMeet(meetId);\r\n      setShowModifyMeetModal(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (addMeetDone) {\r\n      setShowCreateMeetModal(false);\r\n    }\r\n  }, [addMeetDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinMeetDone) {\r\n      setShowModifyMeetModal(false);\r\n    }\r\n  }, [joinMeetDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinMeetError) {\r\n      alert(joinMeetError);\r\n    }\r\n  }, [joinMeetError]);\r\n\r\n  return (\r\n    <MeetContainer>\r\n      {communityUser ? (\r\n        <>\r\n          <div style={{ overflow: 'auto' }}>\r\n            {joinedMeetList.length ? (\r\n              <div className=\"joined-meet\">\r\n                <div className=\"meet-name\">참가한 모임</div>\r\n                <div className=\"meet-card-grid\">\r\n                  {joinedMeetList.map((meet, i) => (\r\n                    <div key={meet.id}>\r\n                      <CardContainer number={i}>\r\n                        <div className=\"card-left\">\r\n                          <div className=\"card-header\">\r\n                            <div className=\"meet-title\">{meet.title}</div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"meet-date\">{meet.date}시</div>\r\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\r\n                            <div\r\n                              className=\"meet-members\"\r\n                              onClick={onClickMember(meet.id)}\r\n                            >\r\n                              인원: {meet.Users.length} / {meet.members}명\r\n                            </div>\r\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\r\n                              장소: {meet.place}\r\n                            </div>\r\n                            <div className=\"meet-owner\">\r\n                              모임리더:{' '}\r\n                              {meet.Users.map(\r\n                                user => user.id === meet.MeetOwnerId && user.nickname\r\n                              )}\r\n                            </div>\r\n                            <div className=\"meet-button\">\r\n                              {meet.MeetOwnerId === me?.id ? (\r\n                                <div className=\"owner-buttons\">\r\n                                  <button onClick={onClickModifyMeetButton(meet.id)}>\r\n                                    수정\r\n                                  </button>\r\n                                  <button onClick={onClickDeleteMeetButton(meet.id)}>\r\n                                    삭제\r\n                                  </button>\r\n                                </div>\r\n                              ) : (\r\n                                <button onClick={onClickLeaveMeetButton(meet.id)}>\r\n                                  탈퇴\r\n                                </button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n                        <div className=\"card-right\">\r\n                          {currentMeet.includes(meet.id) ? (\r\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\r\n                          ) : (\r\n                            <div className=\"show-members\">\r\n                              <div>참가멤버</div>\r\n                              <div className=\"member-container\">\r\n                                {meet.Users.map(user => (\r\n                                  <p key={user.id}>{user.nickname}</p>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </CardContainer>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              </div>\r\n            ) : null}\r\n            <div className=\"new-meet\">\r\n              <div className=\"meet-name\">새로운 모임</div>\r\n              {notJoinedMeetList.length\r\n                ? notJoinedMeetList.map((meet, i) => (\r\n                    <div key={meet.id}>\r\n                      <CardContainer number={i}>\r\n                        <div className=\"card-left\">\r\n                          <div className=\"card-header\">\r\n                            <div className=\"meet-title\">{meet.title}</div>\r\n                          </div>\r\n                          <div className=\"card-body\">\r\n                            <div className=\"meet-date\">{meet.date}시</div>\r\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\r\n                            <div\r\n                              className=\"meet-members\"\r\n                              onClick={onClickMember(meet.id)}\r\n                            >\r\n                              인원: {meet.Users.length} / {meet.members}명\r\n                            </div>\r\n\r\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\r\n                              장소: {meet.place}\r\n                            </div>\r\n                            <div className=\"meet-owner\">\r\n                              모임리더:{' '}\r\n                              {meet.Users.map(\r\n                                user => user.id === meet.MeetOwnerId && user.nickname\r\n                              )}\r\n                            </div>\r\n                            <div className=\"meet-button\">\r\n                              {meet.Users.length < meet.members ? (\r\n                                <button\r\n                                  onClick={onClickJoinMeetButton(\r\n                                    meet.id,\r\n                                    meet.Users.length,\r\n                                    meet.members\r\n                                  )}\r\n                                >\r\n                                  참가하기\r\n                                </button>\r\n                              ) : (\r\n                                <button>인원제한</button>\r\n                              )}\r\n                            </div>\r\n                          </div>\r\n                        </div>\r\n\r\n                        <div className=\"card-right\">\r\n                          {currentMeet.includes(meet.id) ? (\r\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\r\n                          ) : (\r\n                            <div className=\"show-members\">\r\n                              <div>참가멤버</div>\r\n                              <div className=\"member-container\">\r\n                                {meet.Users.map(user => (\r\n                                  <p key={user.id}>{user.nickname}</p>\r\n                                ))}\r\n                              </div>\r\n                            </div>\r\n                          )}\r\n                        </div>\r\n                      </CardContainer>\r\n                    </div>\r\n                  ))\r\n                : null}\r\n            </div>\r\n          </div>\r\n\r\n          <MakeMeetButton onClick={onClickCreateMeetButton}>\r\n            <PlusOutlined />\r\n          </MakeMeetButton>\r\n\r\n          {showCreateMeetModal && (\r\n            <CreateMeetModal\r\n              setShowCreateMeetModal={setShowCreateMeetModal}\r\n              communityId={singleCommunity.id}\r\n            />\r\n          )}\r\n\r\n          {showModifyMeetModal && (\r\n            <ModifyMeetModal\r\n              setShowModifyMeetModal={setShowModifyMeetModal}\r\n              communityId={singleCommunity.id}\r\n              meetInfo={joinedMeetList.find(meet => meet.id === currentModifyMeet)}\r\n            />\r\n          )}\r\n        </>\r\n      ) : (\r\n        <div className=\"visitor-post\">커뮤니티 유저만 볼 수 있습니다</div>\r\n      )}\r\n    </MeetContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Meet);\r\n"]},"metadata":{},"sourceType":"module"}