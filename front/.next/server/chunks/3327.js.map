{"version":3,"sources":["webpack://front/./components/NavBar/styles.tsx","webpack://front/./components/NavBar/index.tsx","webpack://front/./hooks/useInput.tsx","webpack://front/ignored|C:\\Users\\wlsdn\\Desktop\\next\\community\\front\\node_modules\\next\\dist\\next-server\\lib\\router|./utils/resolve-rewrites"],"names":["NavWrapper","styled","NavSearch","UserButtons","VisitorButtons","NavBar","setUserInfoModal","userInfoModal","setNotificationModal","notices","dispatch","useDispatch","router","useRouter","me","useSelector","state","user","keyword","onChangeKeword","useInput","newNotification","filter","notice","checked","length","path","asPath","split","notificationModalTrigger","useCallback","prev","checkNotificationRequestAction","userInfoModalTrigger","sumbitKeword","Router","encodeURIComponent","e","key","nickname","memo","initialValue","value","setValue","useState","handler","target"],"mappings":"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","file":"3327.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const NavWrapper = styled.div`\r\n  z-index: 100;\r\n  position: sticky;\r\n  top: 0;\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  height: 44px;\r\n  background: rgba(0, 0, 0, 0.8);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  .nav-logo {\r\n    margin-left: 1rem;\r\n    h1 {\r\n      font-family: 'Luckiest Guy', cursive;\r\n      margin: 0;\r\n      color: #fff;\r\n    }\r\n  }\r\n\r\n  .button-style {\r\n    margin-right: 1rem;\r\n    font-size: 0.5rem;\r\n    cursor: pointer;\r\n    color: #fff;\r\n    font-weight: bold;\r\n\r\n    :hover {\r\n      transform: scale(1.05);\r\n    }\r\n  }\r\n\r\n  .glass-style-button {\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: center;\r\n    width: 100px;\r\n    height: 26px;\r\n    background: rgba(255, 255, 255, 0.2);\r\n    border-radius: 10px;\r\n  }\r\n`;\r\n\r\nexport const NavSearch = styled.div`\r\n  width: 30vw;\r\n  height: 30px;\r\n  display: grid;\r\n  grid-template-columns: auto 44px;\r\n\r\n  input {\r\n    border: none;\r\n    border-top-left-radius: 5px;\r\n    border-bottom-left-radius: 5px;\r\n    padding-left: 4px;\r\n    background: rgba(125, 125, 125, 0.2);\r\n    color: #b3b3b3;\r\n  }\r\n\r\n  button {\r\n    color: #b3b3b3;\r\n    background: rgba(125, 125, 125, 0.3);\r\n    border-top-right-radius: 5px;\r\n    border-bottom-right-radius: 5px;\r\n    cursor: pointer;\r\n    border: none;\r\n\r\n    :hover {\r\n      background: rgba(125, 125, 125, 0.5);\r\n    }\r\n  }\r\n`;\r\n\r\nexport const UserButtons = styled.div`\r\n  display: flex;\r\n\r\n  .notification-button {\r\n    position: relative;\r\n    cursor: pointer;\r\n    margin-right: 1rem;\r\n    color: #fff;\r\n\r\n    :hover {\r\n      opacity: 0.5;\r\n    }\r\n\r\n    .notification-numbers {\r\n      background: hotpink;\r\n      width: 14px;\r\n      height: 14px;\r\n      border-radius: 50%;\r\n      text-align: center;\r\n      font-size: 10px;\r\n      position: absolute;\r\n      top: -4px;\r\n      right: -8px;\r\n    }\r\n  }\r\n\r\n  .info-button {\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nexport const VisitorButtons = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n`;\r\n","import { RootStateInterface } from 'interfaces/RootState';\r\nimport Link from 'next/link';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { NavWrapper, NavSearch, UserButtons, VisitorButtons } from './styles';\r\nimport {\r\n  CaretDownOutlined,\r\n  CaretUpOutlined,\r\n  NotificationOutlined,\r\n  SearchOutlined,\r\n} from '@ant-design/icons';\r\nimport useInput from 'hooks/useInput';\r\nimport { INotice } from 'interfaces/db';\r\nimport { checkNotificationRequestAction } from 'actions/actionUser';\r\nimport Router, { useRouter } from 'next/router';\r\n\r\ninterface NavBarProps {\r\n  setUserInfoModal: Dispatch<SetStateAction<boolean>>;\r\n  setNotificationModal: Dispatch<SetStateAction<boolean>>;\r\n  userInfoModal: boolean;\r\n  notices: INotice[] | undefined;\r\n}\r\n\r\nfunction NavBar({\r\n  setUserInfoModal,\r\n  userInfoModal,\r\n  setNotificationModal,\r\n  notices,\r\n}: NavBarProps) {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const [keyword, onChangeKeword] = useInput<string>('');\r\n  // 새로 온 알림의 수(확인하면 사라짐)\r\n  const newNotification = notices?.filter(notice => notice.checked === false).length;\r\n  const path = router.asPath.split('/')[1];\r\n\r\n  const notificationModalTrigger = useCallback(() => {\r\n    setNotificationModal(prev => !prev);\r\n\r\n    if (newNotification && newNotification > 0) {\r\n      return dispatch(checkNotificationRequestAction());\r\n    }\r\n  }, [newNotification]);\r\n\r\n  const userInfoModalTrigger = useCallback(() => {\r\n    setUserInfoModal(prev => !prev);\r\n  }, [setUserInfoModal]);\r\n\r\n  const sumbitKeword = useCallback(() => {\r\n    if (keyword !== '') {\r\n      return Router.push(`/search/${encodeURIComponent(keyword)}`);\r\n    }\r\n  }, [keyword]);\r\n\r\n  return (\r\n    <>\r\n      <NavWrapper>\r\n        <div className=\"nav-logo\">\r\n          <h1>Community</h1>\r\n        </div>\r\n\r\n        {path === 'search' && (\r\n          <NavSearch>\r\n            <input\r\n              type=\"search\"\r\n              placeholder=\"커뮤니티 검색\"\r\n              onChange={onChangeKeword}\r\n              onKeyPress={e => e.key === 'Enter' && sumbitKeword()}\r\n            />\r\n            <button onClick={sumbitKeword}>\r\n              <SearchOutlined />\r\n            </button>\r\n          </NavSearch>\r\n        )}\r\n        {me ? (\r\n          <UserButtons>\r\n            <div className=\"notification-button\" onClick={notificationModalTrigger}>\r\n              <NotificationOutlined />\r\n              {newNotification && newNotification > 0 ? (\r\n                <div className=\"notification-numbers\">{newNotification}</div>\r\n              ) : null}\r\n            </div>\r\n            <div\r\n              className=\"info-button glass-style-button button-style\"\r\n              onClick={userInfoModalTrigger}\r\n            >\r\n              <div>{me?.nickname}</div>\r\n              <div>{userInfoModal ? <CaretUpOutlined /> : <CaretDownOutlined />}</div>\r\n            </div>\r\n          </UserButtons>\r\n        ) : (\r\n          <VisitorButtons>\r\n            <Link href=\"/signup\" prefetch={false}>\r\n              <a>\r\n                <div className=\"button-style\">가입하기</div>\r\n              </a>\r\n            </Link>\r\n            <Link href=\"/login\" prefetch={false}>\r\n              <a>\r\n                <div className=\"glass-style-button button-style\">로그인하기</div>\r\n              </a>\r\n            </Link>\r\n          </VisitorButtons>\r\n        )}\r\n      </NavWrapper>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default memo(NavBar);\r\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","/* (ignored) */"],"sourceRoot":""}