{"version":3,"sources":["webpack://_N_E/./actions/actionPost.ts","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/MoreOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/MoreOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/MessageOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/MessageOutlined.js","webpack://_N_E/./components/CommunityBody/Post/styles.tsx","webpack://_N_E/./components/CommunityBody/Post/index.tsx"],"names":["addPostRequestAction","data","type","actionTypesPost","removePostRequestAction","updatePostRequestAction","reportRequestAction","loadPostsRequestAction","addCommentRequestAction","updateCommentRequestAction","removeCommentRequestAction","uploadImagesRequestAction","removeImage","props","ref","AntdIcon","Object","assign","icon","displayName","PostContainer","styled","PostSettingModal","dynamic","PostEditModal","CommentSettingModal","CommentEditModal","PostForm","CommentForm","Post","singleCommunity","communityUser","dispatch","useDispatch","useSelector","state","post","mainPosts","hasMorePost","loadPostsLoading","updateCommentDone","useState","editMode","setEditMode","showPostSettingButton","setShowPostSettingButton","CurrentPostSettingButton","setCurrentPostSettingButton","currentModifyPost","setCurrentModifyPost","showCommentSettingButton","setShowCommentSettingButton","currentCommentSettingButton","setCurrentCommentSettingButton","currentModifyComment","setCurrentModifyComment","openPostCommentForm","setOpenPostCommentForm","currentPostCommentForm","setCurrentPostCommentForm","postContainerRef","useRef","onClickPostSettingButton","useCallback","postId","onClickCommentSettingButton","commentId","onTogglePostCommentForm","prev","onCloseSettingModal","useEffect","postContainer","current","addEventListener","onScroll","removeEventListener","e","length","target","scrollTop","scrollHeight","offsetHeight","lastId","id","communityId","onClick","className","map","currentPostText","content","User","profilePhoto","src","alt","nickname","moment","createdAt","locale","format","postOwnerId","communityUserId","Images","replace","style","cursor","marginRight","Comments","comment","currentCommentText","commentOwnerId","memo"],"mappings":"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","file":"static/chunks/9168.a5cc58fa18f03a4019b6.js","sourcesContent":["import {\n  IRemoveImage,\n  CommentData,\n  AddPostData,\n  IReportData,\n  actionTypesPost,\n  IAddPostRequest,\n  IRemovePostRequest,\n  IUpdatePostRequest,\n  IReportRequest,\n  ILoadPostsRequest,\n  IAddCommentRequest,\n  IRemoveCommentRequest,\n  IUpdateCommentRequest,\n  IUploadImagesRequest,\n} from '../interfaces/post/postAction.interfaces';\n\nexport const addPostRequestAction = (data: AddPostData): IAddPostRequest => {\n  return {\n    type: actionTypesPost.ADD_POST_REQUEST,\n    data,\n  };\n};\nexport const removePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n}): IRemovePostRequest => {\n  return {\n    type: actionTypesPost.REMOVE_POST_REQUEST,\n    data,\n  };\n};\nexport const updatePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n  content: string;\n}): IUpdatePostRequest => {\n  return {\n    type: actionTypesPost.UPDATE_POST_REQUEST,\n    data,\n  };\n};\nexport const reportRequestAction = (data: IReportData): IReportRequest => {\n  return {\n    type: actionTypesPost.REPORT_REQUEST,\n    data,\n  };\n};\nexport const loadPostsRequestAction = (data: {\n  communityId: number;\n  postId: number;\n}): ILoadPostsRequest => {\n  return {\n    type: actionTypesPost.LOAD_POSTS_REQUEST,\n    data,\n  };\n};\nexport const addCommentRequestAction = (data: CommentData): IAddCommentRequest => {\n  return {\n    type: actionTypesPost.ADD_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const updateCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n  content: string;\n}): IUpdateCommentRequest => {\n  return {\n    type: actionTypesPost.UPDATE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const removeCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n}): IRemoveCommentRequest => {\n  return {\n    type: actionTypesPost.REMOVE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const uploadImagesRequestAction = (data: FormData): IUploadImagesRequest => {\n  return {\n    type: actionTypesPost.UPLOAD_IMAGES_REQUEST,\n    data,\n  };\n};\nexport const removeImage = (data: number): IRemoveImage => {\n  return {\n    type: actionTypesPost.REMOVE_IMAGE,\n    data,\n  };\n};\n","// This icon file is generated automatically.\nvar MoreOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M456 231a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"more\", \"theme\": \"outlined\" };\nexport default MoreOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MoreOutlinedSvg from \"@ant-design/icons-svg/es/asn/MoreOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MoreOutlined = function MoreOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MoreOutlinedSvg\n  }));\n};\n\nMoreOutlined.displayName = 'MoreOutlined';\nexport default /*#__PURE__*/React.forwardRef(MoreOutlined);","// This icon file is generated automatically.\nvar MessageOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" } }] }, \"name\": \"message\", \"theme\": \"outlined\" };\nexport default MessageOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageOutlinedSvg from \"@ant-design/icons-svg/es/asn/MessageOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageOutlined = function MessageOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MessageOutlinedSvg\n  }));\n};\n\nMessageOutlined.displayName = 'MessageOutlined';\nexport default /*#__PURE__*/React.forwardRef(MessageOutlined);","import styled from 'styled-components';\r\n\r\nexport const PostContainer = styled.div`\r\n  overflow: auto;\r\n  height: 100%;\r\n  backdrop-filter: blur(2px);\r\n  -webkit-backdrop-filter: blur(2px);\r\n  background: rgba(0, 0, 0, 0.4);\r\n\r\n  .post-form-container {\r\n    background: rgba(255, 255, 255, 0.4);\r\n    padding: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .visitor-post {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .header {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .header-left {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .left-profile-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        margin-right: 8px;\r\n      }\r\n      .left-fake-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        text-align: center;\r\n      }\r\n      .left-nickname {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      display: flex;\r\n      align-items: center;\r\n      position: relative;\r\n\r\n      .right-day {\r\n        font-size: 0.75rem;\r\n      }\r\n      .right-buttons {\r\n        margin-left: 8px;\r\n        font-size: 16px;\r\n        cursor: pointer;\r\n\r\n        :hover {\r\n          color: rgba(0, 0, 0, 0.4);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .post-body-container {\r\n    position: relative;\r\n    background: rgba(255, 255, 255, 0.4);\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .post-body-header {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-image {\r\n      width: 100%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .post-text {\r\n      padding: 1rem 0.5rem;\r\n      white-space: pre;\r\n    }\r\n\r\n    .post-comment-info {\r\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-comment-container {\r\n      position: relative;\r\n      margin: 0.5rem 0;\r\n      padding: 0.5rem;\r\n      background: linear-gradient(\r\n        120deg,\r\n        rgba(69, 104, 220, 0.7),\r\n        rgba(176, 106, 179, 0.7)\r\n      );\r\n\r\n      .comment-header {\r\n      }\r\n\r\n      .comment-text {\r\n        margin-top: 0.5rem;\r\n        text-align: justify;\r\n        white-space: pre;\r\n      }\r\n    }\r\n\r\n    .post-comment-form-container {\r\n      text-align: end;\r\n    }\r\n  }\r\n`;\r\n","import { MessageOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport { loadPostsRequestAction } from 'actions/actionPost';\r\nimport { ICommunity, IUserInfo } from 'interfaces/db';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport moment from 'moment';\r\nimport React, { memo, useCallback, useEffect, useState, useRef } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PostContainer } from './styles';\r\n\r\nconst PostSettingModal = dynamic(() => import('components/Modals/PostSettingModal'));\r\nconst PostEditModal = dynamic(() => import('components/Modals/PostEditModal'));\r\nconst CommentSettingModal = dynamic(\r\n  () => import('components/Modals/CommentSettingModal')\r\n);\r\nconst CommentEditModal = dynamic(() => import('components/Modals/CommentEditModal'));\r\nconst PostForm = dynamic(() => import('components/PostForm'));\r\nconst CommentForm = dynamic(() => import('components/CommentForm'));\r\n\r\ninterface PostProps {\r\n  singleCommunity: ICommunity;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction Post({ singleCommunity, communityUser }: PostProps) {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts, hasMorePost, loadPostsLoading, updateCommentDone } = useSelector(\r\n    (state: RootStateInterface) => state.post\r\n  );\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [showPostSettingButton, setShowPostSettingButton] = useState(false); // 포스트설정 모달 보여주기\r\n  const [CurrentPostSettingButton, setCurrentPostSettingButton] = useState(0); // 현재 보여지고 있는 포스트설정 모달\r\n  const [currentModifyPost, setCurrentModifyPost] = useState(0); // 현재 수정중인 포스트\r\n  const [showCommentSettingButton, setShowCommentSettingButton] = useState(false);\r\n  const [currentCommentSettingButton, setCurrentCommentSettingButton] = useState(0);\r\n  const [currentModifyComment, setCurrentModifyComment] = useState(0);\r\n  const [openPostCommentForm, setOpenPostCommentForm] = useState(false);\r\n  const [currentPostCommentForm, setCurrentPostCommentForm] = useState(0);\r\n  const postContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const onClickPostSettingButton = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostSettingButton(postId);\r\n      setShowPostSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onClickCommentSettingButton = useCallback(\r\n    (commentId: number) => () => {\r\n      setCurrentCommentSettingButton(commentId);\r\n      setShowCommentSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onTogglePostCommentForm = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostCommentForm(postId);\r\n      setOpenPostCommentForm(prev => !prev);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onCloseSettingModal = useCallback(() => {\r\n    if (showPostSettingButton || showCommentSettingButton) {\r\n      setShowPostSettingButton(false);\r\n      setShowCommentSettingButton(false);\r\n    }\r\n  }, [showPostSettingButton, showCommentSettingButton]);\r\n\r\n  useEffect(() => {\r\n    if (updateCommentDone) {\r\n      setEditMode(false);\r\n    }\r\n  }, [updateCommentDone]);\r\n\r\n  useEffect(() => {\r\n    const postContainer = postContainerRef.current;\r\n    if (!postContainer) return;\r\n\r\n    function onScroll(e: any) {\r\n      if (communityUser && mainPosts.length) {\r\n        if (e.target.scrollTop >= e.target.scrollHeight - e.target.offsetHeight - 300) {\r\n          if (hasMorePost && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1].id;\r\n            dispatch(\r\n              loadPostsRequestAction({ communityId: singleCommunity.id, postId: lastId })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    postContainer.addEventListener('scroll', onScroll);\r\n\r\n    return () => postContainer.removeEventListener('scroll', onScroll);\r\n  }, [\r\n    communityUser,\r\n    mainPosts,\r\n    hasMorePost,\r\n    loadPostsLoading,\r\n    singleCommunity,\r\n    postContainerRef.current,\r\n  ]);\r\n\r\n  return (\r\n    <PostContainer onClick={onCloseSettingModal} ref={postContainerRef}>\r\n      {communityUser ? (\r\n        <>\r\n          <div className=\"post-form-container\">\r\n            <PostForm />\r\n          </div>\r\n          {mainPosts.length ? (\r\n            <>\r\n              {mainPosts.map(post => (\r\n                <div className=\"post-body-container\" key={post.id}>\r\n                  {editMode && post.id === currentModifyPost && (\r\n                    <PostEditModal\r\n                      setEditMode={setEditMode}\r\n                      setCurrentModifyPost={setCurrentModifyPost}\r\n                      currentPostText={post.content}\r\n                      postId={post.id}\r\n                      communityId={singleCommunity.id}\r\n                    />\r\n                  )}\r\n                  <div className=\"header post-body-header\">\r\n                    <div className=\"header-left\">\r\n                      <span>\r\n                        {post.User.profilePhoto ? (\r\n                          <img\r\n                            className=\"left-profile-image\"\r\n                            src={post.User.profilePhoto}\r\n                            alt=\"profile image\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"left-fake-image\">{post.User.nickname[0]}</div>\r\n                        )}\r\n                      </span>\r\n                      <div className=\"left-nickname\">{post.User.nickname}</div>\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                      <div className=\"right-day\">\r\n                        {moment(post.createdAt).locale('ko').format('LLL')}\r\n                      </div>\r\n                      <div\r\n                        className=\"right-buttons\"\r\n                        onClick={onClickPostSettingButton(post.id)}\r\n                      >\r\n                        <MoreOutlined />\r\n                      </div>\r\n                      {showPostSettingButton && post.id === CurrentPostSettingButton && (\r\n                        <PostSettingModal\r\n                          setCurrentModifyPost={setCurrentModifyPost}\r\n                          setEditMode={setEditMode}\r\n                          postId={post.id}\r\n                          communityId={singleCommunity.id}\r\n                          postOwnerId={post.User.id}\r\n                          communityUserId={communityUser.id}\r\n                          content={post.content}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {post.Images.length ? (\r\n                    <img\r\n                      src={post.Images[0].src.replace(/\\/resize\\//, '/original/')}\r\n                      alt=\"image\"\r\n                      className=\"post-image\"\r\n                    />\r\n                  ) : null}\r\n                  <div className=\"post-text\">{post.content}</div>\r\n                  <div className=\"post-comment-info\">\r\n                    <div\r\n                      onClick={onTogglePostCommentForm(post.id)}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                      }}\r\n                    >\r\n                      <span style={{ marginRight: '4px' }}>\r\n                        <MessageOutlined />\r\n                      </span>\r\n                      {post.Comments.length\r\n                        ? `댓글 ${post.Comments.length}개 모두보기`\r\n                        : '댓글 작성하기'}\r\n                    </div>\r\n                    {openPostCommentForm && currentPostCommentForm === post.id && (\r\n                      <>\r\n                        {post.Comments &&\r\n                          post.Comments.map(comment => (\r\n                            <div className=\"post-comment-container\" key={comment.id}>\r\n                              {editMode && comment.id === currentModifyComment && (\r\n                                <CommentEditModal\r\n                                  setEditMode={setEditMode}\r\n                                  setCurrentModifyComment={setCurrentModifyComment}\r\n                                  currentCommentText={comment.content}\r\n                                  postId={post.id}\r\n                                  commentId={comment.id}\r\n                                />\r\n                              )}\r\n                              <div className=\"header comment-header\">\r\n                                <div className=\"header-left\">\r\n                                  <span>\r\n                                    {comment.User.profilePhoto ? (\r\n                                      <img\r\n                                        className=\"left-profile-image\"\r\n                                        src={comment.User.profilePhoto}\r\n                                        alt=\"profile image\"\r\n                                      />\r\n                                    ) : (\r\n                                      <div className=\"left-fake-image\">\r\n                                        {comment.User.nickname[0]}\r\n                                      </div>\r\n                                    )}\r\n                                  </span>\r\n                                  <div className=\"left-nickname\">\r\n                                    {comment.User.nickname}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"header-right\">\r\n                                  <div className=\"right-day\">\r\n                                    {moment(comment.createdAt).locale('ko').format('LLL')}\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"right-buttons\"\r\n                                    onClick={onClickCommentSettingButton(comment.id)}\r\n                                  >\r\n                                    <MoreOutlined />\r\n                                  </div>\r\n                                </div>\r\n                                {showCommentSettingButton &&\r\n                                  comment.id === currentCommentSettingButton && (\r\n                                    <CommentSettingModal\r\n                                      setCurrentModifyComment={setCurrentModifyComment}\r\n                                      setEditMode={setEditMode}\r\n                                      postId={post.id}\r\n                                      commentId={comment.id}\r\n                                      commentOwnerId={comment.User.id}\r\n                                      communityUserId={communityUser.id}\r\n                                      content={comment.content}\r\n                                    />\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"comment-text\">{comment.content}</div>\r\n                            </div>\r\n                          ))}\r\n                        <div className=\"post-comment-form-container\">\r\n                          <CommentForm postId={post.id} />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <div className=\"visitor-post\">커뮤니티유저만 볼 수 있습니다</div>\r\n      )}\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Post);\r\n"],"sourceRoot":""}