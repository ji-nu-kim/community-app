{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { memo, useCallback } from 'react';\nimport dynamic from 'next/dynamic';\nimport { ModalContainer, ModalHeader, ModalFormContainer, TextAreaContainer } from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Form } from 'antd';\nimport { useDispatch, useSelector } from 'react-redux';\nimport useInput from 'hooks/useInput';\nimport { changeCommunityInfoRequestAction } from 'actions/actionCommunity';\nconst ImageInsert = dynamic(() => import('components/ImageInsert'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/ImageInsert')],\n    modules: ['components/ImageInsert']\n  }\n});\n\nfunction CommunityModal({\n  setShowCommunityModifyModal\n}) {\n  const dispatch = useDispatch();\n  const {\n    singleCommunity,\n    imagePath\n  } = useSelector(state => state.community);\n  const [description, onChangeDescription] = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.description) || '');\n  const [caution, onChangeCaution] = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.caution) || '');\n  const [requirement, onChangeRequirement] = useInput((singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.requirement) || '');\n  const closeCommunityModal = useCallback(() => {\n    setShowCommunityModifyModal(false);\n  }, [setShowCommunityModifyModal]);\n  const onSubmit = useCallback(() => {\n    if (singleCommunity) {\n      dispatch(changeCommunityInfoRequestAction({\n        communityId: singleCommunity.id,\n        caution,\n        requirement,\n        description,\n        profilePhoto: imagePath\n      }));\n    }\n  }, [description, requirement, caution, imagePath, singleCommunity]);\n  return /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"modal-title\",\n        children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC218\\uC815\\uD558\\uAE30\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"close-btn\",\n        onClick: closeCommunityModal,\n        children: /*#__PURE__*/_jsx(CloseCircleOutlined, {})\n      })]\n    }), /*#__PURE__*/_jsx(Form, {\n      className: \"form\",\n      onFinish: onSubmit,\n      children: /*#__PURE__*/_jsxs(ModalFormContainer, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"profile-img\",\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uD504\\uB85C\\uD544\\uC0AC\\uC9C4\"\n          }), /*#__PURE__*/_jsx(ImageInsert, {\n            imagePath: imagePath,\n            profilePhoto: singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.profilePhoto\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC18C\\uAC1C\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: description,\n            name: \"description\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeDescription\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC8FC\\uC758\\uC0AC\\uD56D\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: caution,\n            name: \"caution\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeCaution\n          })]\n        }), /*#__PURE__*/_jsxs(TextAreaContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uAC00\\uC785\\uC870\\uAC74\"\n          }), /*#__PURE__*/_jsx(\"textarea\", {\n            value: requirement,\n            name: \"requirement\",\n            placeholder: \"\\uCD5C\\uB300 140\\uAE00\\uC790\\uAE4C\\uC9C0 \\uC785\\uB825\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4\",\n            onChange: onChangeRequirement\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"create-btn\",\n          children: /*#__PURE__*/_jsx(Button, {\n            ghost: true,\n            htmlType: \"submit\",\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport default /*#__PURE__*/memo(CommunityModal);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/Modals/CommunityModifyModal/index.tsx"],"names":["React","memo","useCallback","dynamic","ModalContainer","ModalHeader","ModalFormContainer","TextAreaContainer","CloseCircleOutlined","Button","Form","useDispatch","useSelector","useInput","changeCommunityInfoRequestAction","ImageInsert","CommunityModal","setShowCommunityModifyModal","dispatch","singleCommunity","imagePath","state","community","description","onChangeDescription","caution","onChangeCaution","requirement","onChangeRequirement","closeCommunityModal","onSubmit","communityId","id","profilePhoto"],"mappings":"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","sourcesContent":["import React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport {\r\n  ModalContainer,\r\n  ModalHeader,\r\n  ModalFormContainer,\r\n  TextAreaContainer,\r\n} from './styles';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Form } from 'antd';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport useInput from 'hooks/useInput';\r\nimport { changeCommunityInfoRequestAction } from 'actions/actionCommunity';\r\n\r\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\r\ninterface CommunityModalProps {\r\n  setShowCommunityModifyModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nfunction CommunityModal({ setShowCommunityModifyModal }: CommunityModalProps) {\r\n  const dispatch = useDispatch();\r\n  const { singleCommunity, imagePath } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [description, onChangeDescription] = useInput<string>(\r\n    singleCommunity?.description || ''\r\n  );\r\n  const [caution, onChangeCaution] = useInput<string>(singleCommunity?.caution || '');\r\n  const [requirement, onChangeRequirement] = useInput<string>(\r\n    singleCommunity?.requirement || ''\r\n  );\r\n\r\n  const closeCommunityModal = useCallback(() => {\r\n    setShowCommunityModifyModal(false);\r\n  }, [setShowCommunityModifyModal]);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (singleCommunity) {\r\n      dispatch(\r\n        changeCommunityInfoRequestAction({\r\n          communityId: singleCommunity.id,\r\n          caution,\r\n          requirement,\r\n          description,\r\n          profilePhoto: imagePath,\r\n        })\r\n      );\r\n    }\r\n  }, [description, requirement, caution, imagePath, singleCommunity]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">커뮤니티 수정하기</div>\r\n        <div className=\"close-btn\" onClick={closeCommunityModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <Form className=\"form\" onFinish={onSubmit}>\r\n        <ModalFormContainer>\r\n          <div className=\"profile-img\">\r\n            <label>프로필사진</label>\r\n            <ImageInsert\r\n              imagePath={imagePath}\r\n              profilePhoto={singleCommunity?.profilePhoto}\r\n            />\r\n          </div>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 소개</label>\r\n            <textarea\r\n              value={description}\r\n              name=\"description\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeDescription}\r\n            />\r\n          </TextAreaContainer>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 주의사항</label>\r\n            <textarea\r\n              value={caution}\r\n              name=\"caution\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeCaution}\r\n            />\r\n          </TextAreaContainer>\r\n          <TextAreaContainer>\r\n            <label>커뮤니티 가입조건</label>\r\n            <textarea\r\n              value={requirement}\r\n              name=\"requirement\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              onChange={onChangeRequirement}\r\n            />\r\n          </TextAreaContainer>\r\n          <div className=\"create-btn\">\r\n            <Button ghost htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </div>\r\n        </ModalFormContainer>\r\n      </Form>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(CommunityModal);\r\n"]},"metadata":{},"sourceType":"module"}