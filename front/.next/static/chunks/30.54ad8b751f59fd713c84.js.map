{"version":3,"sources":["webpack://_N_E/./actions/actionPost.ts","webpack://_N_E/./node_modules/moment/locale/ko.js","webpack://_N_E/./node_modules/moment/locale sync ^\\.\\/ko$","webpack://_N_E/./interfaces/post/postAction.interfaces.ts","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/MoreOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/MoreOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/MessageOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/MessageOutlined.js","webpack://_N_E/./components/CommunityBody/Post/styles.tsx","webpack://_N_E/./components/CommunityBody/Post/index.tsx"],"names":["addPostRequestAction","data","type","actionTypesPost","ADD_POST_REQUEST","removePostRequestAction","REMOVE_POST_REQUEST","updatePostRequestAction","UPDATE_POST_REQUEST","reportRequestAction","REPORT_REQUEST","loadPostsRequestAction","LOAD_POSTS_REQUEST","addCommentRequestAction","ADD_COMMENT_REQUEST","updateCommentRequestAction","UPDATE_COMMENT_REQUEST","removeCommentRequestAction","REMOVE_COMMENT_REQUEST","uploadImagesRequestAction","UPLOAD_IMAGES_REQUEST","removeImage","REMOVE_IMAGE","moment","defineLocale","months","split","monthsShort","weekdays","weekdaysShort","weekdaysMin","longDateFormat","LT","LTS","L","LL","LLL","LLLL","l","ll","lll","llll","calendar","sameDay","nextDay","nextWeek","lastDay","lastWeek","sameElse","relativeTime","future","past","s","ss","m","mm","h","hh","d","dd","M","MM","y","yy","dayOfMonthOrdinalParse","ordinal","number","period","meridiemParse","isPM","token","meridiem","hour","minute","isUpper","factory","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","ADD_POST_SUCCESS","ADD_POST_ERROR","REMOVE_POST_SUCCESS","REMOVE_POST_ERROR","UPDATE_POST_SUCCESS","UPDATE_POST_ERROR","LOAD_POSTS_SUCCESS","LOAD_POSTS_ERROR","ADD_COMMENT_SUCCESS","ADD_COMMENT_ERROR","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_ERROR","UPDATE_COMMENT_SUCCESS","UPDATE_COMMENT_ERROR","UPLOAD_IMAGES_SUCCESS","UPLOAD_IMAGES_ERROR","REPORT_SUCCESS","REPORT_ERROR","props","ref","AntdIcon","assign","icon","displayName","PostContainer","styled","div","PostSettingModal","dynamic","PostEditModal","CommentSettingModal","CommentEditModal","PostForm","CommentForm","Post","singleCommunity","communityUser","dispatch","useDispatch","useSelector","state","post","mainPosts","hasMorePost","loadPostsLoading","updateCommentDone","useState","editMode","setEditMode","showPostSettingButton","setShowPostSettingButton","CurrentPostSettingButton","setCurrentPostSettingButton","currentModifyPost","setCurrentModifyPost","showCommentSettingButton","setShowCommentSettingButton","currentCommentSettingButton","setCurrentCommentSettingButton","currentModifyComment","setCurrentModifyComment","openPostCommentForm","setOpenPostCommentForm","currentPostCommentForm","setCurrentPostCommentForm","postContainerRef","useRef","onClickPostSettingButton","useCallback","postId","onClickCommentSettingButton","commentId","onTogglePostCommentForm","prev","onCloseSettingModal","useEffect","postContainer","current","addEventListener","onScroll","removeEventListener","length","target","scrollTop","scrollHeight","offsetHeight","lastId","communityId","onClick","className","currentPostText","content","User","profilePhoto","src","process","alt","nickname","createdAt","locale","format","postOwnerId","communityUserId","Images","style","cursor","marginRight","Comments","comment","currentCommentText","commentOwnerId","memo"],"mappings":"sGAAA,oWAiBaA,EAAuB,SAACC,GACnC,MAAO,CACLC,KAAMC,IAAgBC,iBACtBH,SAGSI,EAA0B,SAACJ,GAItC,MAAO,CACLC,KAAMC,IAAgBG,oBACtBL,SAGSM,EAA0B,SAACN,GAKtC,MAAO,CACLC,KAAMC,IAAgBK,oBACtBP,SAGSQ,EAAsB,SAACR,GAClC,MAAO,CACLC,KAAMC,IAAgBO,eACtBT,SAGSU,EAAyB,SAACV,GAIrC,MAAO,CACLC,KAAMC,IAAgBS,mBACtBX,SAGSY,EAA0B,SAACZ,GACtC,MAAO,CACLC,KAAMC,IAAgBW,oBACtBb,SAGSc,EAA6B,SAACd,GAKzC,MAAO,CACLC,KAAMC,IAAgBa,uBACtBf,SAGSgB,EAA6B,SAAChB,GAIzC,MAAO,CACLC,KAAMC,IAAgBe,uBACtBjB,SAGSkB,EAA4B,SAAClB,GACxC,MAAO,CACLC,KAAMC,IAAgBiB,sBACtBnB,SAGSoB,EAAc,SAACpB,GAC1B,MAAO,CACLC,KAAMC,IAAgBmB,aACtBrB,U,wBCjFI,SAAWsB,GAAU,aAIhBA,EAAOC,aAAa,KAAM,CAC/BC,OAAQ,qGAAyCC,MAAM,KACvDC,YAAa,qGAAyCD,MAClD,KAEJE,SAAU,uIAA8BF,MAAM,KAC9CG,cAAe,mDAAgBH,MAAM,KACrCI,YAAa,mDAAgBJ,MAAM,KACnCK,eAAgB,CACZC,GAAI,SACJC,IAAK,YACLC,EAAG,cACHC,GAAI,0BACJC,IAAK,iCACLC,KAAM,sCACNC,EAAG,cACHC,GAAI,0BACJC,IAAK,iCACLC,KAAM,uCAEVC,SAAU,CACNC,QAAS,kBACTC,QAAS,kBACTC,SAAU,UACVC,QAAS,kBACTC,SAAU,6BACVC,SAAU,KAEdC,aAAc,CACVC,OAAQ,YACRC,KAAM,YACNC,EAAG,gBACHC,GAAI,WACJC,EAAG,UACHC,GAAI,WACJC,EAAG,sBACHC,GAAI,iBACJC,EAAG,eACHC,GAAI,WACJC,EAAG,gBACHC,GAAI,WACJC,EAAG,gBACHC,GAAI,YAERC,uBAAwB,gCACxBC,QAAS,SAAUC,EAAQC,GACvB,OAAQA,GACJ,IAAK,IACL,IAAK,IACL,IAAK,MACD,OAAOD,EAAS,SACpB,IAAK,IACD,OAAOA,EAAS,SACpB,IAAK,IACL,IAAK,IACD,OAAOA,EAAS,SACpB,QACI,OAAOA,IAGnBE,cAAe,4BACfC,KAAM,SAAUC,GACZ,MAAiB,iBAAVA,GAEXC,SAAU,SAAUC,EAAMC,EAAQC,GAC9B,OAAOF,EAAO,GAAK,eAAO,kBAxEIG,CAAQ,EAAQ,U,qBCP1D,IAAIC,EAAM,CACT,OAAQ,QAIT,SAASC,EAAeC,GACvB,IAAIC,EAAKC,EAAsBF,GAC/B,OAAOG,EAAoBF,GAE5B,SAASC,EAAsBF,GAC9B,IAAIG,EAAoBC,EAAEN,EAAKE,GAAM,CACpC,IAAIK,EAAI,IAAIC,MAAM,uBAAyBN,EAAM,KAEjD,MADAK,EAAEE,KAAO,mBACHF,EAEP,OAAOP,EAAIE,GAEZD,EAAeS,KAAO,WACrB,OAAOC,OAAOD,KAAKV,IAEpBC,EAAeW,QAAUR,EACzBS,EAAOC,QAAUb,EACjBA,EAAeE,GAAK,Q,kCCpBpB,kCAAO,IAAM5E,EAAkB,CAC7BC,iBAAkB,mBAClBuF,iBAAkB,mBAClBC,eAAgB,iBAChBtF,oBAAqB,sBACrBuF,oBAAqB,sBACrBC,kBAAmB,oBACnBtF,oBAAqB,sBACrBuF,oBAAqB,sBACrBC,kBAAmB,oBACnBpF,mBAAoB,qBACpBqF,mBAAoB,qBACpBC,iBAAkB,mBAClBpF,oBAAqB,sBACrBqF,oBAAqB,sBACrBC,kBAAmB,oBACnBlF,uBAAwB,yBACxBmF,uBAAwB,yBACxBC,qBAAsB,uBACtBtF,uBAAwB,yBACxBuF,uBAAwB,yBACxBC,qBAAsB,uBACtBpF,sBAAuB,wBACvBqF,sBAAuB,wBACvBC,oBAAqB,sBACrBpF,aAAc,eACdZ,eAAgB,iBAChBiG,eAAgB,iBAChBC,aAAc,iB,qEC5BD,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,iIAAqI,KAAQ,OAAQ,MAAS,Y,YCKpT,EAAe,SAAsBC,EAAOC,GAC9C,OAAoB,gBAAoBC,EAAA,EAAUxB,OAAOyB,OAAO,GAAIH,EAAO,CACzEC,IAAKA,EACLG,KAAM,MAIV,EAAaC,YAAc,eACC,mBAAiB,GCZ9B,EADO,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,i5BAAq5B,KAAQ,UAAW,MAAS,YCK1kC,EAAkB,SAAyBL,EAAOC,GACpD,OAAoB,gBAAoBC,EAAA,EAAUxB,OAAOyB,OAAO,GAAIH,EAAO,CACzEC,IAAKA,EACLG,KAAM,MAIV,EAAgBC,YAAc,kBACF,mBAAiB,G,kECZhCC,E,UAAgBC,EAAOC,IAAV,wEAAGD,CAAH,+7CCQpBE,EAAmBC,KAAQ,kBAAM,oCAAP,gEAAc,yCACxCC,EAAgBD,KAAQ,kBAAM,oCAAP,gEAAc,sCACrCE,EAAsBF,KAC1B,kBAAM,oCAD2B,gEACpB,4CAETG,EAAmBH,KAAQ,kBAAM,oCAAP,gEAAc,yCACxCI,EAAWJ,KAAQ,kBAAM,iEAAP,gEAAc,0BAChCK,EAAcL,KAAQ,kBAAM,iEAAP,gEAAc,6BAOzC,SAASM,EAAT,GAA6D,IAA7CC,EAA6C,EAA7CA,gBAAiBC,EAA4B,EAA5BA,cACzBC,EAAWC,cAD0C,EAEaC,aACtE,SAACC,GAAD,OAA+BA,EAAMC,QAD/BC,EAFmD,EAEnDA,UAAWC,EAFwC,EAExCA,YAAaC,EAF2B,EAE3BA,iBAAkBC,EAFS,EAETA,kBAFS,EAK3BC,oBAAS,GAAlCC,EALoD,KAK1CC,EAL0C,OAMDF,oBAAS,GAA5DG,EANoD,KAM7BC,EAN6B,OAOKJ,mBAAS,GAAlEK,EAPoD,KAO1BC,EAP0B,OAQTN,mBAAS,GAApDO,EARoD,KAQjCC,EARiC,OASKR,oBAAS,GAAlES,EAToD,KAS1BC,EAT0B,OAUWV,mBAAS,GAAxEW,EAVoD,KAUvBC,EAVuB,OAWHZ,mBAAS,GAA1Da,EAXoD,KAW9BC,EAX8B,OAYLd,oBAAS,GAAxDe,EAZoD,KAY/BC,EAZ+B,OAaChB,mBAAS,GAA9DiB,EAboD,KAa5BC,EAb4B,KAcrDC,EAAmBC,iBAAuB,MAE1CC,EAA2BC,uBAC/B,SAACC,GAAD,OAAoB,WAClBjB,EAA4BiB,GAC5BnB,GAAyB,MAE3B,IAGIoB,EAA8BF,uBAClC,SAACG,GAAD,OAAuB,WACrBb,EAA+Ba,GAC/Bf,GAA4B,MAE9B,IAGIgB,EAA0BJ,uBAC9B,SAACC,GAAD,OAAoB,WAClBL,EAA0BK,GAC1BP,GAAuB,SAAAW,GAAI,OAAKA,QAElC,IAGIC,GAAsBN,uBAAY,YAClCnB,GAAyBM,KAC3BL,GAAyB,GACzBM,GAA4B,MAE7B,CAACP,EAAuBM,IAqC3B,OAnCAoB,qBAAU,WACJ9B,GACFG,GAAY,KAEb,CAACH,IAEJ8B,qBAAU,WACR,IAAMC,EAAgBX,EAAiBY,QACvC,GAAKD,EAiBL,OAFAA,EAAcE,iBAAiB,SAAUC,GAElC,kBAAMH,EAAcI,oBAAoB,SAAUD,IAfzD,SAASA,EAASvF,GAChB,GAAI4C,GAAiBM,EAAUuC,QACzBzF,EAAE0F,OAAOC,WAAa3F,EAAE0F,OAAOE,aAAe5F,EAAE0F,OAAOG,aAAe,KACpE1C,IAAgBC,EAAkB,CACpC,IAAM0C,EAAS5C,EAAUA,EAAUuC,OAAS,GAAG7F,GAC/CiD,EACErH,YAAuB,CAAEuK,YAAapD,EAAgB/C,GAAIiF,OAAQiB,SAU3E,CACDlD,EACAM,EACAC,EACAC,EACAT,EACA8B,EAAiBY,UAIjB,cAACrD,EAAD,CAAegE,QAASd,GAAqBvD,IAAK8C,EAAlD,SACG7B,EACC,qCACE,qBAAKqD,UAAU,sBAAf,SACE,cAACzD,EAAD,MAEDU,EAAUuC,OACT,mCACGvC,EAAUzD,KAAI,SAAAwD,GAAI,OACjB,sBAAKgD,UAAU,sBAAf,UACG1C,GAAYN,EAAKrD,KAAOiE,GACvB,cAACxB,EAAD,CACEmB,YAAaA,EACbM,qBAAsBA,EACtBoC,gBAAiBjD,EAAKkD,QACtBtB,OAAQ5B,EAAKrD,GACbmG,YAAapD,EAAgB/C,KAGjC,sBAAKqG,UAAU,0BAAf,UACE,sBAAKA,UAAU,cAAf,UACE,+BACGhD,EAAKmD,KAAKC,aACT,qBACEJ,UAAU,qBACVK,IAAG,UAAKC,uBAAL,YAA6CtD,EAAKmD,KAAKC,cAC1DG,IAAI,kBAGN,qBAAKP,UAAU,kBAAf,SAAkChD,EAAKmD,KAAKK,SAAS,OAGzD,qBAAKR,UAAU,gBAAf,SAAgChD,EAAKmD,KAAKK,cAE5C,sBAAKR,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACG7J,IAAO6G,EAAKyD,WAAWC,OAAO,MAAMC,OAAO,SAE9C,qBACEX,UAAU,gBACVD,QAASrB,EAAyB1B,EAAKrD,IAFzC,SAIE,cAAC,EAAD,MAED6D,GAAyBR,EAAKrD,KAAO+D,GACpC,cAACxB,EAAD,CACE2B,qBAAsBA,EACtBN,YAAaA,EACbqB,OAAQ5B,EAAKrD,GACbmG,YAAapD,EAAgB/C,GAC7BiH,YAAa5D,EAAKmD,KAAKxG,GACvBkH,gBAAiBlE,EAAchD,GAC/BuG,QAASlD,EAAKkD,gBAKrBlD,EAAK8D,OAAOtB,OACX,qBACEa,IAAG,UAAKC,uBAAL,YAA6CtD,EAAK8D,OAAO,GAAGT,KAC/DE,IAAI,QACJP,UAAU,eAEV,KACJ,qBAAKA,UAAU,YAAf,SAA4BhD,EAAKkD,UACjC,sBAAKF,UAAU,oBAAf,UACE,sBACED,QAAShB,EAAwB/B,EAAKrD,IACtCoH,MAAO,CACLC,OAAQ,WAHZ,UAME,sBAAMD,MAAO,CAAEE,YAAa,OAA5B,SACE,cAAC,EAAD,MAEDjE,EAAKkE,SAAS1B,OAAd,uBACSxC,EAAKkE,SAAS1B,OADvB,mCAEG,2CAELpB,GAAuBE,IAA2BtB,EAAKrD,IACtD,qCACGqD,EAAKkE,UACJlE,EAAKkE,SAAS1H,KAAI,SAAA2H,GAAO,OACvB,sBAAKnB,UAAU,yBAAf,UACG1C,GAAY6D,EAAQxH,KAAOuE,GAC1B,cAAC5B,EAAD,CACEiB,YAAaA,EACbY,wBAAyBA,EACzBiD,mBAAoBD,EAAQjB,QAC5BtB,OAAQ5B,EAAKrD,GACbmF,UAAWqC,EAAQxH,KAGvB,sBAAKqG,UAAU,wBAAf,UACE,sBAAKA,UAAU,cAAf,UACE,+BACGmB,EAAQhB,KAAKC,aACZ,qBACEJ,UAAU,qBACVK,IAAG,UAAKC,uBAAL,YAA6Ca,EAAQhB,KAAKC,cAC7DG,IAAI,kBAGN,qBAAKP,UAAU,kBAAf,SACGmB,EAAQhB,KAAKK,SAAS,OAI7B,qBAAKR,UAAU,gBAAf,SACGmB,EAAQhB,KAAKK,cAGlB,sBAAKR,UAAU,eAAf,UACE,qBAAKA,UAAU,YAAf,SACG7J,IAAOgL,EAAQV,WAAWC,OAAO,MAAMC,OAAO,SAEjD,qBACEX,UAAU,gBACVD,QAASlB,EAA4BsC,EAAQxH,IAF/C,SAIE,cAAC,EAAD,SAGHmE,GACCqD,EAAQxH,KAAOqE,GACb,cAAC3B,EAAD,CACE8B,wBAAyBA,EACzBZ,YAAaA,EACbqB,OAAQ5B,EAAKrD,GACbmF,UAAWqC,EAAQxH,GACnB0H,eAAgBF,EAAQhB,KAAKxG,GAC7BkH,gBAAiBlE,EAAchD,GAC/BuG,QAASiB,EAAQjB,aAIzB,qBAAKF,UAAU,eAAf,SAA+BmB,EAAQjB,YArDIiB,EAAQxH,OAwDzD,qBAAKqG,UAAU,8BAAf,SACE,cAACxD,EAAD,CAAaoC,OAAQ5B,EAAKrD,eAnIMqD,EAAKrD,SA2IjD,QAGN,qBAAKqG,UAAU,eAAf,iGAMOsB,yBAAK7E","file":"static/chunks/30.54ad8b751f59fd713c84.js","sourcesContent":["import {\n  IRemoveImage,\n  CommentData,\n  AddPostData,\n  IReportData,\n  actionTypesPost,\n  IAddPostRequest,\n  IRemovePostRequest,\n  IUpdatePostRequest,\n  IReportRequest,\n  ILoadPostsRequest,\n  IAddCommentRequest,\n  IRemoveCommentRequest,\n  IUpdateCommentRequest,\n  IUploadImagesRequest,\n} from '../interfaces/post/postAction.interfaces';\n\nexport const addPostRequestAction = (data: AddPostData): IAddPostRequest => {\n  return {\n    type: actionTypesPost.ADD_POST_REQUEST,\n    data,\n  };\n};\nexport const removePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n}): IRemovePostRequest => {\n  return {\n    type: actionTypesPost.REMOVE_POST_REQUEST,\n    data,\n  };\n};\nexport const updatePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n  content: string;\n}): IUpdatePostRequest => {\n  return {\n    type: actionTypesPost.UPDATE_POST_REQUEST,\n    data,\n  };\n};\nexport const reportRequestAction = (data: IReportData): IReportRequest => {\n  return {\n    type: actionTypesPost.REPORT_REQUEST,\n    data,\n  };\n};\nexport const loadPostsRequestAction = (data: {\n  communityId: number;\n  postId: number;\n}): ILoadPostsRequest => {\n  return {\n    type: actionTypesPost.LOAD_POSTS_REQUEST,\n    data,\n  };\n};\nexport const addCommentRequestAction = (data: CommentData): IAddCommentRequest => {\n  return {\n    type: actionTypesPost.ADD_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const updateCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n  content: string;\n}): IUpdateCommentRequest => {\n  return {\n    type: actionTypesPost.UPDATE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const removeCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n}): IRemoveCommentRequest => {\n  return {\n    type: actionTypesPost.REMOVE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const uploadImagesRequestAction = (data: FormData): IUploadImagesRequest => {\n  return {\n    type: actionTypesPost.UPLOAD_IMAGES_REQUEST,\n    data,\n  };\n};\nexport const removeImage = (data: number): IRemoveImage => {\n  return {\n    type: actionTypesPost.REMOVE_IMAGE,\n    data,\n  };\n};\n","//! moment.js locale configuration\n//! locale : Korean [ko]\n//! author : Kyungwook, Park : https://github.com/kyungw00k\n//! author : Jeeeyul Lee <jeeeyul@gmail.com>\n\n;(function (global, factory) {\n   typeof exports === 'object' && typeof module !== 'undefined'\n       && typeof require === 'function' ? factory(require('../moment')) :\n   typeof define === 'function' && define.amd ? define(['../moment'], factory) :\n   factory(global.moment)\n}(this, (function (moment) { 'use strict';\n\n    //! moment.js locale configuration\n\n    var ko = moment.defineLocale('ko', {\n        months: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split('_'),\n        monthsShort: '1월_2월_3월_4월_5월_6월_7월_8월_9월_10월_11월_12월'.split(\n            '_'\n        ),\n        weekdays: '일요일_월요일_화요일_수요일_목요일_금요일_토요일'.split('_'),\n        weekdaysShort: '일_월_화_수_목_금_토'.split('_'),\n        weekdaysMin: '일_월_화_수_목_금_토'.split('_'),\n        longDateFormat: {\n            LT: 'A h:mm',\n            LTS: 'A h:mm:ss',\n            L: 'YYYY.MM.DD.',\n            LL: 'YYYY년 MMMM D일',\n            LLL: 'YYYY년 MMMM D일 A h:mm',\n            LLLL: 'YYYY년 MMMM D일 dddd A h:mm',\n            l: 'YYYY.MM.DD.',\n            ll: 'YYYY년 MMMM D일',\n            lll: 'YYYY년 MMMM D일 A h:mm',\n            llll: 'YYYY년 MMMM D일 dddd A h:mm',\n        },\n        calendar: {\n            sameDay: '오늘 LT',\n            nextDay: '내일 LT',\n            nextWeek: 'dddd LT',\n            lastDay: '어제 LT',\n            lastWeek: '지난주 dddd LT',\n            sameElse: 'L',\n        },\n        relativeTime: {\n            future: '%s 후',\n            past: '%s 전',\n            s: '몇 초',\n            ss: '%d초',\n            m: '1분',\n            mm: '%d분',\n            h: '한 시간',\n            hh: '%d시간',\n            d: '하루',\n            dd: '%d일',\n            M: '한 달',\n            MM: '%d달',\n            y: '일 년',\n            yy: '%d년',\n        },\n        dayOfMonthOrdinalParse: /\\d{1,2}(일|월|주)/,\n        ordinal: function (number, period) {\n            switch (period) {\n                case 'd':\n                case 'D':\n                case 'DDD':\n                    return number + '일';\n                case 'M':\n                    return number + '월';\n                case 'w':\n                case 'W':\n                    return number + '주';\n                default:\n                    return number;\n            }\n        },\n        meridiemParse: /오전|오후/,\n        isPM: function (token) {\n            return token === '오후';\n        },\n        meridiem: function (hour, minute, isUpper) {\n            return hour < 12 ? '오전' : '오후';\n        },\n    });\n\n    return ko;\n\n})));\n","var map = {\n\t\"./ko\": \"Ivi+\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"KEd5\";","import { IComment, IPost } from '../db';\n\nexport const actionTypesPost = {\n  ADD_POST_REQUEST: 'ADD_POST_REQUEST',\n  ADD_POST_SUCCESS: 'ADD_POST_SUCCESS',\n  ADD_POST_ERROR: 'ADD_POST_ERROR',\n  REMOVE_POST_REQUEST: 'REMOVE_POST_REQUEST',\n  REMOVE_POST_SUCCESS: 'REMOVE_POST_SUCCESS',\n  REMOVE_POST_ERROR: 'REMOVE_POST_ERROR',\n  UPDATE_POST_REQUEST: 'UPDATE_POST_REQUEST',\n  UPDATE_POST_SUCCESS: 'UPDATE_POST_SUCCESS',\n  UPDATE_POST_ERROR: 'UPDATE_POST_ERROR',\n  LOAD_POSTS_REQUEST: 'LOAD_POSTS_REQUEST',\n  LOAD_POSTS_SUCCESS: 'LOAD_POSTS_SUCCESS',\n  LOAD_POSTS_ERROR: 'LOAD_POSTS_ERROR',\n  ADD_COMMENT_REQUEST: 'ADD_COMMENT_REQUEST',\n  ADD_COMMENT_SUCCESS: 'ADD_COMMENT_SUCCESS',\n  ADD_COMMENT_ERROR: 'ADD_COMMENT_ERROR',\n  REMOVE_COMMENT_REQUEST: 'REMOVE_COMMENT_REQUEST',\n  REMOVE_COMMENT_SUCCESS: 'REMOVE_COMMENT_SUCCESS',\n  REMOVE_COMMENT_ERROR: 'REMOVE_COMMENT_ERROR',\n  UPDATE_COMMENT_REQUEST: 'UPDATE_COMMENT_REQUEST',\n  UPDATE_COMMENT_SUCCESS: 'UPDATE_COMMENT_SUCCESS',\n  UPDATE_COMMENT_ERROR: 'UPDATE_COMMENT_ERROR',\n  UPLOAD_IMAGES_REQUEST: 'UPLOAD_IMAGES_REQUEST',\n  UPLOAD_IMAGES_SUCCESS: 'UPLOAD_IMAGES_SUCCESS',\n  UPLOAD_IMAGES_ERROR: 'UPLOAD_IMAGES_ERROR',\n  REMOVE_IMAGE: 'REMOVE_IMAGE',\n  REPORT_REQUEST: 'REPORT_REQUEST',\n  REPORT_SUCCESS: 'REPORT_SUCCESS',\n  REPORT_ERROR: 'REPORT_ERROR',\n} as const;\n\nexport interface AddPostData {\n  formData: FormData;\n  communityId: number;\n}\nexport interface IAddPostRequest {\n  type: typeof actionTypesPost.ADD_POST_REQUEST;\n  data: AddPostData;\n}\nexport interface IAddPostSuccess {\n  type: typeof actionTypesPost.ADD_POST_SUCCESS;\n  data: IPost;\n}\nexport interface IAddPostError {\n  type: typeof actionTypesPost.ADD_POST_ERROR;\n  error: Error;\n}\nexport interface IRemovePostRequest {\n  type: typeof actionTypesPost.REMOVE_POST_REQUEST;\n  data: { postId: number; communityId: number };\n}\nexport interface IRemovePostSuccess {\n  type: typeof actionTypesPost.REMOVE_POST_SUCCESS;\n  data: { postId: number };\n}\nexport interface IRemovePostError {\n  type: typeof actionTypesPost.REMOVE_POST_ERROR;\n  error: Error;\n}\nexport interface IUpdatePostRequest {\n  type: typeof actionTypesPost.UPDATE_POST_REQUEST;\n  data: { postId: number; communityId: number; content: string };\n}\nexport interface IUpdatePostSuccess {\n  type: typeof actionTypesPost.UPDATE_POST_SUCCESS;\n  data: { postId: number; content: string };\n}\nexport interface IUpdatePostError {\n  type: typeof actionTypesPost.UPDATE_POST_ERROR;\n  error: Error;\n}\nexport interface IReportData {\n  contentId: number;\n  reporter: number;\n  reportedPerson: number;\n  reason: string;\n  content: string;\n  variety: string;\n}\nexport interface IReportRequest {\n  type: typeof actionTypesPost.REPORT_REQUEST;\n  data: IReportData;\n}\nexport interface IReportSuccess {\n  type: typeof actionTypesPost.REPORT_SUCCESS;\n}\nexport interface IReportError {\n  type: typeof actionTypesPost.REPORT_ERROR;\n  error: Error;\n}\nexport interface ILoadPostsRequest {\n  type: typeof actionTypesPost.LOAD_POSTS_REQUEST;\n  data: { communityId: number; postId: number };\n}\nexport interface ILoadPostsSuccess {\n  type: typeof actionTypesPost.LOAD_POSTS_SUCCESS;\n  data: IPost[];\n}\nexport interface ILoadPostsError {\n  type: typeof actionTypesPost.LOAD_POSTS_ERROR;\n  error: Error;\n}\nexport interface CommentData {\n  comment: string;\n  postId: number;\n}\nexport interface IAddCommentRequest {\n  type: typeof actionTypesPost.ADD_COMMENT_REQUEST;\n  data: CommentData;\n}\nexport interface IAddCommentSuccess {\n  type: typeof actionTypesPost.ADD_COMMENT_SUCCESS;\n  data: IComment;\n}\nexport interface IAddCommentError {\n  type: typeof actionTypesPost.ADD_COMMENT_ERROR;\n  error: Error;\n}\nexport interface IUpdateCommentRequest {\n  type: typeof actionTypesPost.UPDATE_COMMENT_REQUEST;\n  data: { commentId: number; postId: number; content: string };\n}\nexport interface IUpdateCommentSuccess {\n  type: typeof actionTypesPost.UPDATE_COMMENT_SUCCESS;\n  data: { commentId: number; postId: number; content: string };\n}\nexport interface IUpdateCommentError {\n  type: typeof actionTypesPost.UPDATE_COMMENT_ERROR;\n  error: Error;\n}\nexport interface IRemoveCommentRequest {\n  type: typeof actionTypesPost.REMOVE_COMMENT_REQUEST;\n  data: { commentId: number; postId: number };\n}\nexport interface IRemoveCommentSuccess {\n  type: typeof actionTypesPost.REMOVE_COMMENT_SUCCESS;\n  data: { commentId: number; postId: number };\n}\nexport interface IRemoveCommentError {\n  type: typeof actionTypesPost.REMOVE_COMMENT_ERROR;\n  error: Error;\n}\nexport interface IUploadImagesRequest {\n  type: typeof actionTypesPost.UPLOAD_IMAGES_REQUEST;\n  data: FormData;\n}\nexport interface IUploadImagesSuccess {\n  type: typeof actionTypesPost.UPLOAD_IMAGES_SUCCESS;\n  data: string[];\n}\nexport interface IUploadImagesError {\n  type: typeof actionTypesPost.UPLOAD_IMAGES_ERROR;\n  error: Error;\n}\nexport interface IRemoveImage {\n  type: typeof actionTypesPost.REMOVE_IMAGE;\n  data: number;\n}\n\nexport type ActionsPost =\n  | IAddPostRequest\n  | IAddPostSuccess\n  | IAddPostError\n  | IRemovePostRequest\n  | IRemovePostSuccess\n  | IRemovePostError\n  | IUpdatePostRequest\n  | IUpdatePostSuccess\n  | IUpdatePostError\n  | IReportRequest\n  | IReportSuccess\n  | IReportError\n  | ILoadPostsRequest\n  | ILoadPostsSuccess\n  | ILoadPostsError\n  | IAddCommentRequest\n  | IAddCommentSuccess\n  | IAddCommentError\n  | IUpdateCommentRequest\n  | IUpdateCommentSuccess\n  | IUpdateCommentError\n  | IRemoveCommentRequest\n  | IRemoveCommentSuccess\n  | IRemoveCommentError\n  | IUploadImagesRequest\n  | IUploadImagesSuccess\n  | IUploadImagesError\n  | IRemoveImage;\n","// This icon file is generated automatically.\nvar MoreOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M456 231a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0zm0 280a56 56 0 10112 0 56 56 0 10-112 0z\" } }] }, \"name\": \"more\", \"theme\": \"outlined\" };\nexport default MoreOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MoreOutlinedSvg from \"@ant-design/icons-svg/es/asn/MoreOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MoreOutlined = function MoreOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MoreOutlinedSvg\n  }));\n};\n\nMoreOutlined.displayName = 'MoreOutlined';\nexport default /*#__PURE__*/React.forwardRef(MoreOutlined);","// This icon file is generated automatically.\nvar MessageOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M464 512a48 48 0 1096 0 48 48 0 10-96 0zm200 0a48 48 0 1096 0 48 48 0 10-96 0zm-400 0a48 48 0 1096 0 48 48 0 10-96 0zm661.2-173.6c-22.6-53.7-55-101.9-96.3-143.3a444.35 444.35 0 00-143.3-96.3C630.6 75.7 572.2 64 512 64h-2c-60.6.3-119.3 12.3-174.5 35.9a445.35 445.35 0 00-142 96.5c-40.9 41.3-73 89.3-95.2 142.8-23 55.4-34.6 114.3-34.3 174.9A449.4 449.4 0 00112 714v152a46 46 0 0046 46h152.1A449.4 449.4 0 00510 960h2.1c59.9 0 118-11.6 172.7-34.3a444.48 444.48 0 00142.8-95.2c41.3-40.9 73.8-88.7 96.5-142 23.6-55.2 35.6-113.9 35.9-174.5.3-60.9-11.5-120-34.8-175.6zm-151.1 438C704 845.8 611 884 512 884h-1.7c-60.3-.3-120.2-15.3-173.1-43.5l-8.4-4.5H188V695.2l-4.5-8.4C155.3 633.9 140.3 574 140 513.7c-.4-99.7 37.7-193.3 107.6-263.8 69.8-70.5 163.1-109.5 262.8-109.9h1.7c50 0 98.5 9.7 144.2 28.9 44.6 18.7 84.6 45.6 119 80 34.3 34.3 61.3 74.4 80 119 19.4 46.2 29.1 95.2 28.9 145.8-.6 99.6-39.7 192.9-110.1 262.7z\" } }] }, \"name\": \"message\", \"theme\": \"outlined\" };\nexport default MessageOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport MessageOutlinedSvg from \"@ant-design/icons-svg/es/asn/MessageOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar MessageOutlined = function MessageOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: MessageOutlinedSvg\n  }));\n};\n\nMessageOutlined.displayName = 'MessageOutlined';\nexport default /*#__PURE__*/React.forwardRef(MessageOutlined);","import styled from 'styled-components';\r\n\r\nexport const PostContainer = styled.div`\r\n  overflow: auto;\r\n  height: 100%;\r\n  backdrop-filter: blur(2px);\r\n  -webkit-backdrop-filter: blur(2px);\r\n  background: rgba(0, 0, 0, 0.4);\r\n\r\n  .post-form-container {\r\n    background: rgba(255, 255, 255, 0.4);\r\n    padding: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .visitor-post {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .header {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .header-left {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .left-profile-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        margin-right: 8px;\r\n      }\r\n      .left-fake-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        text-align: center;\r\n      }\r\n      .left-nickname {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      display: flex;\r\n      align-items: center;\r\n      position: relative;\r\n\r\n      .right-day {\r\n        font-size: 0.75rem;\r\n      }\r\n      .right-buttons {\r\n        margin-left: 8px;\r\n        font-size: 16px;\r\n        cursor: pointer;\r\n\r\n        :hover {\r\n          color: rgba(0, 0, 0, 0.4);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .post-body-container {\r\n    position: relative;\r\n    background: rgba(255, 255, 255, 0.4);\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .post-body-header {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-image {\r\n      width: 100%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .post-text {\r\n      padding: 1rem 0.5rem;\r\n      white-space: pre;\r\n    }\r\n\r\n    .post-comment-info {\r\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-comment-container {\r\n      position: relative;\r\n      margin: 0.5rem 0;\r\n      padding: 0.5rem;\r\n      background: linear-gradient(\r\n        120deg,\r\n        rgba(69, 104, 220, 0.7),\r\n        rgba(176, 106, 179, 0.7)\r\n      );\r\n\r\n      .comment-header {\r\n      }\r\n\r\n      .comment-text {\r\n        margin-top: 0.5rem;\r\n        text-align: justify;\r\n        white-space: pre;\r\n      }\r\n    }\r\n\r\n    .post-comment-form-container {\r\n      text-align: end;\r\n    }\r\n  }\r\n`;\r\n","import { MessageOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport { loadPostsRequestAction } from 'actions/actionPost';\r\nimport { ICommunity, IUserInfo } from 'interfaces/db';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport moment from 'moment';\r\nimport React, { memo, useCallback, useEffect, useState, useRef } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PostContainer } from './styles';\r\n\r\nconst PostSettingModal = dynamic(() => import('components/Modals/PostSettingModal'));\r\nconst PostEditModal = dynamic(() => import('components/Modals/PostEditModal'));\r\nconst CommentSettingModal = dynamic(\r\n  () => import('components/Modals/CommentSettingModal')\r\n);\r\nconst CommentEditModal = dynamic(() => import('components/Modals/CommentEditModal'));\r\nconst PostForm = dynamic(() => import('components/PostForm'));\r\nconst CommentForm = dynamic(() => import('components/CommentForm'));\r\n\r\ninterface PostProps {\r\n  singleCommunity: ICommunity;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction Post({ singleCommunity, communityUser }: PostProps) {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts, hasMorePost, loadPostsLoading, updateCommentDone } = useSelector(\r\n    (state: RootStateInterface) => state.post\r\n  );\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [showPostSettingButton, setShowPostSettingButton] = useState(false); // 포스트설정 모달 보여주기\r\n  const [CurrentPostSettingButton, setCurrentPostSettingButton] = useState(0); // 현재 보여지고 있는 포스트설정 모달\r\n  const [currentModifyPost, setCurrentModifyPost] = useState(0); // 현재 수정중인 포스트\r\n  const [showCommentSettingButton, setShowCommentSettingButton] = useState(false);\r\n  const [currentCommentSettingButton, setCurrentCommentSettingButton] = useState(0);\r\n  const [currentModifyComment, setCurrentModifyComment] = useState(0);\r\n  const [openPostCommentForm, setOpenPostCommentForm] = useState(false);\r\n  const [currentPostCommentForm, setCurrentPostCommentForm] = useState(0);\r\n  const postContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const onClickPostSettingButton = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostSettingButton(postId);\r\n      setShowPostSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onClickCommentSettingButton = useCallback(\r\n    (commentId: number) => () => {\r\n      setCurrentCommentSettingButton(commentId);\r\n      setShowCommentSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onTogglePostCommentForm = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostCommentForm(postId);\r\n      setOpenPostCommentForm(prev => !prev);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onCloseSettingModal = useCallback(() => {\r\n    if (showPostSettingButton || showCommentSettingButton) {\r\n      setShowPostSettingButton(false);\r\n      setShowCommentSettingButton(false);\r\n    }\r\n  }, [showPostSettingButton, showCommentSettingButton]);\r\n\r\n  useEffect(() => {\r\n    if (updateCommentDone) {\r\n      setEditMode(false);\r\n    }\r\n  }, [updateCommentDone]);\r\n\r\n  useEffect(() => {\r\n    const postContainer = postContainerRef.current;\r\n    if (!postContainer) return;\r\n\r\n    function onScroll(e: any) {\r\n      if (communityUser && mainPosts.length) {\r\n        if (e.target.scrollTop >= e.target.scrollHeight - e.target.offsetHeight - 300) {\r\n          if (hasMorePost && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1].id;\r\n            dispatch(\r\n              loadPostsRequestAction({ communityId: singleCommunity.id, postId: lastId })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    postContainer.addEventListener('scroll', onScroll);\r\n\r\n    return () => postContainer.removeEventListener('scroll', onScroll);\r\n  }, [\r\n    communityUser,\r\n    mainPosts,\r\n    hasMorePost,\r\n    loadPostsLoading,\r\n    singleCommunity,\r\n    postContainerRef.current,\r\n  ]);\r\n\r\n  return (\r\n    <PostContainer onClick={onCloseSettingModal} ref={postContainerRef}>\r\n      {communityUser ? (\r\n        <>\r\n          <div className=\"post-form-container\">\r\n            <PostForm />\r\n          </div>\r\n          {mainPosts.length ? (\r\n            <>\r\n              {mainPosts.map(post => (\r\n                <div className=\"post-body-container\" key={post.id}>\r\n                  {editMode && post.id === currentModifyPost && (\r\n                    <PostEditModal\r\n                      setEditMode={setEditMode}\r\n                      setCurrentModifyPost={setCurrentModifyPost}\r\n                      currentPostText={post.content}\r\n                      postId={post.id}\r\n                      communityId={singleCommunity.id}\r\n                    />\r\n                  )}\r\n                  <div className=\"header post-body-header\">\r\n                    <div className=\"header-left\">\r\n                      <span>\r\n                        {post.User.profilePhoto ? (\r\n                          <img\r\n                            className=\"left-profile-image\"\r\n                            src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${post.User.profilePhoto}`}\r\n                            alt=\"profile image\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"left-fake-image\">{post.User.nickname[0]}</div>\r\n                        )}\r\n                      </span>\r\n                      <div className=\"left-nickname\">{post.User.nickname}</div>\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                      <div className=\"right-day\">\r\n                        {moment(post.createdAt).locale('ko').format('LLL')}\r\n                      </div>\r\n                      <div\r\n                        className=\"right-buttons\"\r\n                        onClick={onClickPostSettingButton(post.id)}\r\n                      >\r\n                        <MoreOutlined />\r\n                      </div>\r\n                      {showPostSettingButton && post.id === CurrentPostSettingButton && (\r\n                        <PostSettingModal\r\n                          setCurrentModifyPost={setCurrentModifyPost}\r\n                          setEditMode={setEditMode}\r\n                          postId={post.id}\r\n                          communityId={singleCommunity.id}\r\n                          postOwnerId={post.User.id}\r\n                          communityUserId={communityUser.id}\r\n                          content={post.content}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {post.Images.length ? (\r\n                    <img\r\n                      src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${post.Images[0].src}`}\r\n                      alt=\"image\"\r\n                      className=\"post-image\"\r\n                    />\r\n                  ) : null}\r\n                  <div className=\"post-text\">{post.content}</div>\r\n                  <div className=\"post-comment-info\">\r\n                    <div\r\n                      onClick={onTogglePostCommentForm(post.id)}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                      }}\r\n                    >\r\n                      <span style={{ marginRight: '4px' }}>\r\n                        <MessageOutlined />\r\n                      </span>\r\n                      {post.Comments.length\r\n                        ? `댓글 ${post.Comments.length}개 모두보기`\r\n                        : '댓글 작성하기'}\r\n                    </div>\r\n                    {openPostCommentForm && currentPostCommentForm === post.id && (\r\n                      <>\r\n                        {post.Comments &&\r\n                          post.Comments.map(comment => (\r\n                            <div className=\"post-comment-container\" key={comment.id}>\r\n                              {editMode && comment.id === currentModifyComment && (\r\n                                <CommentEditModal\r\n                                  setEditMode={setEditMode}\r\n                                  setCurrentModifyComment={setCurrentModifyComment}\r\n                                  currentCommentText={comment.content}\r\n                                  postId={post.id}\r\n                                  commentId={comment.id}\r\n                                />\r\n                              )}\r\n                              <div className=\"header comment-header\">\r\n                                <div className=\"header-left\">\r\n                                  <span>\r\n                                    {comment.User.profilePhoto ? (\r\n                                      <img\r\n                                        className=\"left-profile-image\"\r\n                                        src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${comment.User.profilePhoto}`}\r\n                                        alt=\"profile image\"\r\n                                      />\r\n                                    ) : (\r\n                                      <div className=\"left-fake-image\">\r\n                                        {comment.User.nickname[0]}\r\n                                      </div>\r\n                                    )}\r\n                                  </span>\r\n                                  <div className=\"left-nickname\">\r\n                                    {comment.User.nickname}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"header-right\">\r\n                                  <div className=\"right-day\">\r\n                                    {moment(comment.createdAt).locale('ko').format('LLL')}\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"right-buttons\"\r\n                                    onClick={onClickCommentSettingButton(comment.id)}\r\n                                  >\r\n                                    <MoreOutlined />\r\n                                  </div>\r\n                                </div>\r\n                                {showCommentSettingButton &&\r\n                                  comment.id === currentCommentSettingButton && (\r\n                                    <CommentSettingModal\r\n                                      setCurrentModifyComment={setCurrentModifyComment}\r\n                                      setEditMode={setEditMode}\r\n                                      postId={post.id}\r\n                                      commentId={comment.id}\r\n                                      commentOwnerId={comment.User.id}\r\n                                      communityUserId={communityUser.id}\r\n                                      content={comment.content}\r\n                                    />\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"comment-text\">{comment.content}</div>\r\n                            </div>\r\n                          ))}\r\n                        <div className=\"post-comment-form-container\">\r\n                          <CommentForm postId={post.id} />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <div className=\"visitor-post\">커뮤니티유저만 볼 수 있습니다</div>\r\n      )}\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Post);\r\n"],"sourceRoot":""}