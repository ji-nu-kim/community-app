{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"C:/Users/wlsdn/Desktop/next/community/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { PlusOutlined } from '@ant-design/icons';\nimport React, { memo, useCallback, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\nimport { joinMeetRequestAction, leaveMeetRequestAction, removeMeetRequestAction } from 'actions/actionCommunity';\nimport { useDispatch, useSelector } from 'react-redux';\nvar ModifyMeetModal = dynamic(function () {\n  return import('components/Modals/ModifyMeetModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/Modals/ModifyMeetModal')];\n    },\n    modules: ['components/Modals/ModifyMeetModal']\n  }\n});\nvar CreateMeetModal = dynamic(function () {\n  return import('components/Modals/CreateMeetModal');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/Modals/CreateMeetModal')];\n    },\n    modules: ['components/Modals/CreateMeetModal']\n  }\n});\nvar Map = dynamic(function () {\n  return import('components/Map');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/Map')];\n    },\n    modules: ['components/Map']\n  }\n});\n\nfunction Meet(_ref) {\n  var singleCommunity = _ref.singleCommunity,\n      communityUser = _ref.communityUser,\n      me = _ref.me;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.community;\n  }),\n      addMeetDone = _useSelector.addMeetDone,\n      joinMeetDone = _useSelector.joinMeetDone,\n      joinMeetError = _useSelector.joinMeetError;\n\n  var _useState = useState(false),\n      showCreateMeetModal = _useState[0],\n      setShowCreateMeetModal = _useState[1];\n\n  var _useState2 = useState(false),\n      showModifyMeetModal = _useState2[0],\n      setShowModifyMeetModal = _useState2[1];\n\n  var _useState3 = useState([]),\n      currentMeet = _useState3[0],\n      setCurrentMeet = _useState3[1];\n\n  var _useState4 = useState(-9999),\n      currentModifyMeet = _useState4[0],\n      setCurrentModifyMeet = _useState4[1];\n\n  var joinedMeetIndex = me === null || me === void 0 ? void 0 : me.Meets.map(function (meet) {\n    return meet.id;\n  });\n  var joinedMeetList = singleCommunity.Meets.filter(function (meet) {\n    return joinedMeetIndex === null || joinedMeetIndex === void 0 ? void 0 : joinedMeetIndex.includes(meet.id);\n  });\n  var notJoinedMeetList = singleCommunity.Meets.filter(function (meet) {\n    return !(joinedMeetIndex !== null && joinedMeetIndex !== void 0 && joinedMeetIndex.includes(meet.id));\n  });\n  var onClickPlace = useCallback(function (meetId) {\n    return function () {\n      if (currentMeet.includes(meetId)) {\n        return;\n      }\n\n      setCurrentMeet([].concat(_toConsumableArray(currentMeet), [meetId]));\n    };\n  }, [currentMeet]);\n  var onClickMember = useCallback(function (meetId) {\n    return function () {\n      setCurrentMeet(_toConsumableArray(currentMeet).filter(function (current) {\n        return current !== meetId;\n      }));\n    };\n  }, [currentMeet]);\n  var onClickCreateMeetButton = useCallback(function () {\n    setShowCreateMeetModal(true);\n  }, []);\n  var onClickDeleteMeetButton = useCallback(function (meetId) {\n    return function () {\n      if (confirm('모임을 삭제하시겠습니까?')) {\n        return dispatch(removeMeetRequestAction({\n          meetId: meetId,\n          communityId: singleCommunity.id\n        }));\n      }\n    };\n  }, [singleCommunity]);\n  var onClickJoinMeetButton = useCallback(function (meetId, currentMembers, totalMembers) {\n    return function () {\n      if (currentMembers >= totalMembers) {\n        return alert('인원 수가 초과되었습니다');\n      }\n\n      if (confirm('모임에 참가하시겠습니까?')) {\n        return dispatch(joinMeetRequestAction({\n          meetId: meetId,\n          communityId: singleCommunity.id\n        }));\n      }\n    };\n  }, [singleCommunity]);\n  var onClickLeaveMeetButton = useCallback(function (meetId) {\n    return function () {\n      if (confirm('모임을 탈퇴하시겠습니까?')) {\n        return dispatch(leaveMeetRequestAction({\n          communityId: singleCommunity.id,\n          meetId: meetId\n        }));\n      }\n    };\n  }, [singleCommunity]);\n  var onClickModifyMeetButton = useCallback(function (meetId) {\n    return function () {\n      setCurrentModifyMeet(meetId);\n      setShowModifyMeetModal(true);\n    };\n  }, []);\n  useEffect(function () {\n    if (addMeetDone) {\n      setShowCreateMeetModal(false);\n    }\n  }, [addMeetDone]);\n  useEffect(function () {\n    if (joinMeetDone) {\n      setShowModifyMeetModal(false);\n    }\n  }, [joinMeetDone]);\n  useEffect(function () {\n    if (joinMeetError) {\n      alert(joinMeetError);\n    }\n  }, [joinMeetError]);\n  return /*#__PURE__*/_jsx(MeetContainer, {\n    children: communityUser ? /*#__PURE__*/_jsxs(_Fragment, {\n      children: [/*#__PURE__*/_jsxs(\"div\", {\n        style: {\n          overflow: 'auto'\n        },\n        children: [joinedMeetList.length ? /*#__PURE__*/_jsxs(\"div\", {\n          className: \"joined-meet\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-name\",\n            children: \"\\uCC38\\uAC00\\uD55C \\uBAA8\\uC784\"\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-card-grid\",\n            children: joinedMeetList.map(function (meet, i) {\n              return /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsxs(CardContainer, {\n                  number: i,\n                  children: [/*#__PURE__*/_jsxs(\"div\", {\n                    className: \"card-left\",\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      className: \"card-header\",\n                      children: /*#__PURE__*/_jsx(\"div\", {\n                        className: \"meet-title\",\n                        children: meet.title\n                      })\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"card-body\",\n                      children: [/*#__PURE__*/_jsxs(\"div\", {\n                        className: \"meet-date\",\n                        children: [meet.date, \"\\uC2DC\"]\n                      }), /*#__PURE__*/_jsxs(\"div\", {\n                        className: \"meet-fee\",\n                        children: [\"\\uCC38\\uAC00\\uBE44: \", meet.fee, \"\\uC6D0\"]\n                      }), /*#__PURE__*/_jsxs(\"div\", {\n                        className: \"meet-members\",\n                        onClick: onClickMember(meet.id),\n                        children: [\"\\uC778\\uC6D0: \", meet.Users.length, \" / \", meet.members, \"\\uBA85\"]\n                      }), /*#__PURE__*/_jsxs(\"div\", {\n                        className: \"meet-place\",\n                        onClick: onClickPlace(meet.id),\n                        children: [\"\\uC7A5\\uC18C: \", meet.place]\n                      }), /*#__PURE__*/_jsxs(\"div\", {\n                        className: \"meet-owner\",\n                        children: [\"\\uBAA8\\uC784\\uB9AC\\uB354:\", ' ', meet.Users.map(function (user) {\n                          return user.id === meet.MeetOwnerId && user.nickname;\n                        })]\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"meet-button\",\n                        children: meet.MeetOwnerId === (me === null || me === void 0 ? void 0 : me.id) ? /*#__PURE__*/_jsxs(\"div\", {\n                          className: \"owner-buttons\",\n                          children: [/*#__PURE__*/_jsx(\"button\", {\n                            onClick: onClickModifyMeetButton(meet.id),\n                            children: \"\\uC218\\uC815\"\n                          }), /*#__PURE__*/_jsx(\"button\", {\n                            onClick: onClickDeleteMeetButton(meet.id),\n                            children: \"\\uC0AD\\uC81C\"\n                          })]\n                        }) : /*#__PURE__*/_jsx(\"button\", {\n                          onClick: onClickLeaveMeetButton(meet.id),\n                          children: \"\\uD0C8\\uD1F4\"\n                        })\n                      })]\n                    })]\n                  }), /*#__PURE__*/_jsx(\"div\", {\n                    className: \"card-right\",\n                    children: currentMeet.includes(meet.id) ? /*#__PURE__*/_jsx(Map, {\n                      address: meet.place,\n                      number: meet.id\n                    }, meet.id) : /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"show-members\",\n                      children: [/*#__PURE__*/_jsx(\"div\", {\n                        children: \"\\uCC38\\uAC00\\uBA64\\uBC84\"\n                      }), /*#__PURE__*/_jsx(\"div\", {\n                        className: \"member-container\",\n                        children: meet.Users.map(function (user) {\n                          return /*#__PURE__*/_jsx(\"p\", {\n                            children: user.nickname\n                          }, user.id);\n                        })\n                      })]\n                    })\n                  })]\n                })\n              }, meet.id);\n            })\n          })]\n        }) : null, /*#__PURE__*/_jsxs(\"div\", {\n          className: \"new-meet\",\n          children: [/*#__PURE__*/_jsx(\"div\", {\n            className: \"meet-name\",\n            children: \"\\uC0C8\\uB85C\\uC6B4 \\uBAA8\\uC784\"\n          }), notJoinedMeetList.length ? notJoinedMeetList.map(function (meet, i) {\n            return /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsxs(CardContainer, {\n                number: i,\n                children: [/*#__PURE__*/_jsxs(\"div\", {\n                  className: \"card-left\",\n                  children: [/*#__PURE__*/_jsx(\"div\", {\n                    className: \"card-header\",\n                    children: /*#__PURE__*/_jsx(\"div\", {\n                      className: \"meet-title\",\n                      children: meet.title\n                    })\n                  }), /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"card-body\",\n                    children: [/*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-date\",\n                      children: [meet.date, \"\\uC2DC\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-fee\",\n                      children: [\"\\uCC38\\uAC00\\uBE44: \", meet.fee, \"\\uC6D0\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-members\",\n                      onClick: onClickMember(meet.id),\n                      children: [\"\\uC778\\uC6D0: \", meet.Users.length, \" / \", meet.members, \"\\uBA85\"]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-place\",\n                      onClick: onClickPlace(meet.id),\n                      children: [\"\\uC7A5\\uC18C: \", meet.place]\n                    }), /*#__PURE__*/_jsxs(\"div\", {\n                      className: \"meet-owner\",\n                      children: [\"\\uBAA8\\uC784\\uB9AC\\uB354:\", ' ', meet.Users.map(function (user) {\n                        return user.id === meet.MeetOwnerId && user.nickname;\n                      })]\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: \"meet-button\",\n                      children: meet.Users.length < meet.members ? /*#__PURE__*/_jsx(\"button\", {\n                        onClick: onClickJoinMeetButton(meet.id, meet.Users.length, meet.members),\n                        children: \"\\uCC38\\uAC00\\uD558\\uAE30\"\n                      }) : /*#__PURE__*/_jsx(\"button\", {\n                        children: \"\\uC778\\uC6D0\\uC81C\\uD55C\"\n                      })\n                    })]\n                  })]\n                }), /*#__PURE__*/_jsx(\"div\", {\n                  className: \"card-right\",\n                  children: currentMeet.includes(meet.id) ? /*#__PURE__*/_jsx(Map, {\n                    address: meet.place,\n                    number: meet.id\n                  }, meet.id) : /*#__PURE__*/_jsxs(\"div\", {\n                    className: \"show-members\",\n                    children: [/*#__PURE__*/_jsx(\"div\", {\n                      children: \"\\uCC38\\uAC00\\uBA64\\uBC84\"\n                    }), /*#__PURE__*/_jsx(\"div\", {\n                      className: \"member-container\",\n                      children: meet.Users.map(function (user) {\n                        return /*#__PURE__*/_jsx(\"p\", {\n                          children: user.nickname\n                        }, user.id);\n                      })\n                    })]\n                  })\n                })]\n              })\n            }, meet.id);\n          }) : null]\n        })]\n      }), /*#__PURE__*/_jsx(MakeMeetButton, {\n        onClick: onClickCreateMeetButton,\n        children: /*#__PURE__*/_jsx(PlusOutlined, {})\n      }), showCreateMeetModal && /*#__PURE__*/_jsx(CreateMeetModal, {\n        setShowCreateMeetModal: setShowCreateMeetModal,\n        communityId: singleCommunity.id\n      }), showModifyMeetModal && /*#__PURE__*/_jsx(ModifyMeetModal, {\n        setShowModifyMeetModal: setShowModifyMeetModal,\n        communityId: singleCommunity.id,\n        meetInfo: joinedMeetList.find(function (meet) {\n          return meet.id === currentModifyMeet;\n        })\n      })]\n    }) : /*#__PURE__*/_jsx(\"div\", {\n      className: \"visitor-post\",\n      children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uC720\\uC800\\uB9CC \\uBCFC \\uC218 \\uC788\\uC2B5\\uB2C8\\uB2E4\"\n    })\n  });\n}\n\nexport default /*#__PURE__*/memo(Meet);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/CommunityBody/Meet/index.tsx"],"names":["PlusOutlined","React","memo","useCallback","useState","useEffect","dynamic","MakeMeetButton","MeetContainer","CardContainer","joinMeetRequestAction","leaveMeetRequestAction","removeMeetRequestAction","useDispatch","useSelector","ModifyMeetModal","CreateMeetModal","Map","Meet","singleCommunity","communityUser","me","dispatch","state","community","addMeetDone","joinMeetDone","joinMeetError","showCreateMeetModal","setShowCreateMeetModal","showModifyMeetModal","setShowModifyMeetModal","currentMeet","setCurrentMeet","currentModifyMeet","setCurrentModifyMeet","joinedMeetIndex","Meets","map","meet","id","joinedMeetList","filter","includes","notJoinedMeetList","onClickPlace","meetId","onClickMember","current","onClickCreateMeetButton","onClickDeleteMeetButton","confirm","communityId","onClickJoinMeetButton","currentMembers","totalMembers","alert","onClickLeaveMeetButton","onClickModifyMeetButton","overflow","length","i","title","date","fee","Users","members","place","user","MeetOwnerId","nickname","find"],"mappings":"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","sourcesContent":["import { PlusOutlined } from '@ant-design/icons';\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\nimport React, { memo, useCallback, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { MakeMeetButton, MeetContainer, CardContainer } from './styles';\nimport {\n  joinMeetRequestAction,\n  leaveMeetRequestAction,\n  removeMeetRequestAction,\n} from 'actions/actionCommunity';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\n\nconst ModifyMeetModal = dynamic(() => import('components/Modals/ModifyMeetModal'));\nconst CreateMeetModal = dynamic(() => import('components/Modals/CreateMeetModal'));\nconst Map = dynamic(() => import('components/Map'));\n\ninterface MeeetProps {\n  singleCommunity: ICommunity;\n  me: IUser | null;\n  communityUser: IUserInfo | undefined;\n}\n\nfunction Meet({ singleCommunity, communityUser, me }: MeeetProps) {\n  const dispatch = useDispatch();\n  const { addMeetDone, joinMeetDone, joinMeetError } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n  const [showCreateMeetModal, setShowCreateMeetModal] = useState(false);\n  const [showModifyMeetModal, setShowModifyMeetModal] = useState(false);\n  const [currentMeet, setCurrentMeet] = useState<number[]>([]);\n  const [currentModifyMeet, setCurrentModifyMeet] = useState(-9999);\n  const joinedMeetIndex = me?.Meets.map(meet => meet.id);\n  const joinedMeetList = singleCommunity.Meets.filter(meet =>\n    joinedMeetIndex?.includes(meet.id)\n  );\n  const notJoinedMeetList = singleCommunity.Meets.filter(\n    meet => !joinedMeetIndex?.includes(meet.id)\n  );\n\n  const onClickPlace = useCallback(\n    (meetId: number) => () => {\n      if (currentMeet.includes(meetId)) {\n        return;\n      }\n      setCurrentMeet([...currentMeet, meetId]);\n    },\n    [currentMeet]\n  );\n\n  const onClickMember = useCallback(\n    (meetId: number) => () => {\n      setCurrentMeet([...currentMeet].filter(current => current !== meetId));\n    },\n    [currentMeet]\n  );\n\n  const onClickCreateMeetButton = useCallback(() => {\n    setShowCreateMeetModal(true);\n  }, []);\n\n  const onClickDeleteMeetButton = useCallback(\n    (meetId: number) => () => {\n      if (confirm('모임을 삭제하시겠습니까?')) {\n        return dispatch(\n          removeMeetRequestAction({ meetId, communityId: singleCommunity.id })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickJoinMeetButton = useCallback(\n    (meetId: number, currentMembers: number, totalMembers: number) => () => {\n      if (currentMembers >= totalMembers) {\n        return alert('인원 수가 초과되었습니다');\n      }\n      if (confirm('모임에 참가하시겠습니까?')) {\n        return dispatch(\n          joinMeetRequestAction({ meetId, communityId: singleCommunity.id })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickLeaveMeetButton = useCallback(\n    (meetId: number) => () => {\n      if (confirm('모임을 탈퇴하시겠습니까?')) {\n        return dispatch(\n          leaveMeetRequestAction({ communityId: singleCommunity.id, meetId })\n        );\n      }\n    },\n    [singleCommunity]\n  );\n\n  const onClickModifyMeetButton = useCallback(\n    (meetId: number) => () => {\n      setCurrentModifyMeet(meetId);\n      setShowModifyMeetModal(true);\n    },\n    []\n  );\n\n  useEffect(() => {\n    if (addMeetDone) {\n      setShowCreateMeetModal(false);\n    }\n  }, [addMeetDone]);\n\n  useEffect(() => {\n    if (joinMeetDone) {\n      setShowModifyMeetModal(false);\n    }\n  }, [joinMeetDone]);\n\n  useEffect(() => {\n    if (joinMeetError) {\n      alert(joinMeetError);\n    }\n  }, [joinMeetError]);\n\n  return (\n    <MeetContainer>\n      {communityUser ? (\n        <>\n          <div style={{ overflow: 'auto' }}>\n            {joinedMeetList.length ? (\n              <div className=\"joined-meet\">\n                <div className=\"meet-name\">참가한 모임</div>\n                <div className=\"meet-card-grid\">\n                  {joinedMeetList.map((meet, i) => (\n                    <div key={meet.id}>\n                      <CardContainer number={i}>\n                        <div className=\"card-left\">\n                          <div className=\"card-header\">\n                            <div className=\"meet-title\">{meet.title}</div>\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"meet-date\">{meet.date}시</div>\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\n                            <div\n                              className=\"meet-members\"\n                              onClick={onClickMember(meet.id)}\n                            >\n                              인원: {meet.Users.length} / {meet.members}명\n                            </div>\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\n                              장소: {meet.place}\n                            </div>\n                            <div className=\"meet-owner\">\n                              모임리더:{' '}\n                              {meet.Users.map(\n                                user => user.id === meet.MeetOwnerId && user.nickname\n                              )}\n                            </div>\n                            <div className=\"meet-button\">\n                              {meet.MeetOwnerId === me?.id ? (\n                                <div className=\"owner-buttons\">\n                                  <button onClick={onClickModifyMeetButton(meet.id)}>\n                                    수정\n                                  </button>\n                                  <button onClick={onClickDeleteMeetButton(meet.id)}>\n                                    삭제\n                                  </button>\n                                </div>\n                              ) : (\n                                <button onClick={onClickLeaveMeetButton(meet.id)}>\n                                  탈퇴\n                                </button>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n                        <div className=\"card-right\">\n                          {currentMeet.includes(meet.id) ? (\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\n                          ) : (\n                            <div className=\"show-members\">\n                              <div>참가멤버</div>\n                              <div className=\"member-container\">\n                                {meet.Users.map(user => (\n                                  <p key={user.id}>{user.nickname}</p>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </CardContainer>\n                    </div>\n                  ))}\n                </div>\n              </div>\n            ) : null}\n            <div className=\"new-meet\">\n              <div className=\"meet-name\">새로운 모임</div>\n              {notJoinedMeetList.length\n                ? notJoinedMeetList.map((meet, i) => (\n                    <div key={meet.id}>\n                      <CardContainer number={i}>\n                        <div className=\"card-left\">\n                          <div className=\"card-header\">\n                            <div className=\"meet-title\">{meet.title}</div>\n                          </div>\n                          <div className=\"card-body\">\n                            <div className=\"meet-date\">{meet.date}시</div>\n                            <div className=\"meet-fee\">참가비: {meet.fee}원</div>\n                            <div\n                              className=\"meet-members\"\n                              onClick={onClickMember(meet.id)}\n                            >\n                              인원: {meet.Users.length} / {meet.members}명\n                            </div>\n\n                            <div className=\"meet-place\" onClick={onClickPlace(meet.id)}>\n                              장소: {meet.place}\n                            </div>\n                            <div className=\"meet-owner\">\n                              모임리더:{' '}\n                              {meet.Users.map(\n                                user => user.id === meet.MeetOwnerId && user.nickname\n                              )}\n                            </div>\n                            <div className=\"meet-button\">\n                              {meet.Users.length < meet.members ? (\n                                <button\n                                  onClick={onClickJoinMeetButton(\n                                    meet.id,\n                                    meet.Users.length,\n                                    meet.members\n                                  )}\n                                >\n                                  참가하기\n                                </button>\n                              ) : (\n                                <button>인원제한</button>\n                              )}\n                            </div>\n                          </div>\n                        </div>\n\n                        <div className=\"card-right\">\n                          {currentMeet.includes(meet.id) ? (\n                            <Map key={meet.id} address={meet.place} number={meet.id} />\n                          ) : (\n                            <div className=\"show-members\">\n                              <div>참가멤버</div>\n                              <div className=\"member-container\">\n                                {meet.Users.map(user => (\n                                  <p key={user.id}>{user.nickname}</p>\n                                ))}\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </CardContainer>\n                    </div>\n                  ))\n                : null}\n            </div>\n          </div>\n\n          <MakeMeetButton onClick={onClickCreateMeetButton}>\n            <PlusOutlined />\n          </MakeMeetButton>\n\n          {showCreateMeetModal && (\n            <CreateMeetModal\n              setShowCreateMeetModal={setShowCreateMeetModal}\n              communityId={singleCommunity.id}\n            />\n          )}\n\n          {showModifyMeetModal && (\n            <ModifyMeetModal\n              setShowModifyMeetModal={setShowModifyMeetModal}\n              communityId={singleCommunity.id}\n              meetInfo={joinedMeetList.find(meet => meet.id === currentModifyMeet)}\n            />\n          )}\n        </>\n      ) : (\n        <div className=\"visitor-post\">커뮤니티 유저만 볼 수 있습니다</div>\n      )}\n    </MeetContainer>\n  );\n}\n\nexport default memo(Meet);\n"]},"metadata":{},"sourceType":"module"}