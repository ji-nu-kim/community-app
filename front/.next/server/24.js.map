{"version":3,"sources":["webpack:///./hooks/useInput.tsx","webpack:///./components/Modals/UserProfileModifyModal/styles.tsx","webpack:///./components/Modals/UserProfileModifyModal/index.tsx","webpack:///./utils/stylesUtil.tsx"],"names":["useInput","initialValue","value","setValue","useState","handler","useCallback","e","target","ModalContainer","styled","div","ModalHeader","header","ColorAni","ModalBody","ImageInsert","dynamic","CategoryList","UserProfileModifyModal","setUserProfileModifyModal","dispatch","useDispatch","me","imagePath","useSelector","state","user","newNickname","onChangeNewNickname","nickname","mainCategories","community","categories","setCategories","Categories","map","v","name","onCloseUserProfileModifyModal","onSubmit","confirm","setTimeout","changeProfileRequestAction","profilePhoto","category","memo","keyframes"],"mappings":"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","file":"24.js","sourcesContent":["import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100;\r\n  width: 500px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-btn {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form {\r\n    display: grid;\r\n    grid-template-rows: repeat(3, auto);\r\n\r\n    .form-profile {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      margin-bottom: 1rem;\r\n      justify-items: flex-start;\r\n\r\n      .profile-nickname {\r\n        #nickname {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          padding-left: 4px;\r\n          color: #fff;\r\n          margin-top: 0.5rem;\r\n          height: 33px;\r\n          border: none;\r\n\r\n          :hover {\r\n            background: rgba(255, 255, 255, 0.2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-category {\r\n      margin-bottom: 1rem;\r\n      span {\r\n        font-size: 0.75rem;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .create-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Form } from 'antd';\r\nimport dynamic from 'next/dynamic';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\r\nimport useInput from 'hooks/useInput';\r\nimport { changeProfileRequestAction } from 'actions/actionUser';\r\n\r\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\r\nconst CategoryList = dynamic(() => import('components/CategoryList'));\r\n\r\ninterface UserProfileModifyModalProps {\r\n  setUserProfileModifyModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nfunction UserProfileModifyModal({\r\n  setUserProfileModifyModal,\r\n}: UserProfileModifyModalProps) {\r\n  const dispatch = useDispatch();\r\n  const { me, imagePath } = useSelector((state: RootStateInterface) => state.user);\r\n  const [newNickname, onChangeNewNickname] = useInput<string>(me?.nickname || '');\r\n\r\n  const mainCategories = useSelector(\r\n    (state: RootStateInterface) => state.community.mainCategories\r\n  );\r\n\r\n  const [categories, setCategories] = useState<string[]>(\r\n    me?.Categories?.map(v => v.name) || []\r\n  );\r\n\r\n  const onCloseUserProfileModifyModal = useCallback(() => {\r\n    setUserProfileModifyModal(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (confirm('정보를 수정하시겠습니까?')) {\r\n      setTimeout(() => {\r\n        return dispatch(\r\n          changeProfileRequestAction({\r\n            nickname: newNickname,\r\n            profilePhoto: imagePath,\r\n            category: categories,\r\n          })\r\n        );\r\n      }, 3000);\r\n    }\r\n  }, [imagePath, newNickname, categories]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">프로필수정</div>\r\n        <div className=\"close-btn\" onClick={onCloseUserProfileModifyModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form onFinish={onSubmit} className=\"form\">\r\n          <div className=\"form-profile\">\r\n            <div className=\"profile-img\">\r\n              <label>프로필사진</label>\r\n              <ImageInsert imagePath={imagePath} profilePhoto={me?.profilePhoto} />\r\n            </div>\r\n            <div className=\"profile-nickname\">\r\n              <label htmlFor=\"nickname\">닉네임</label>\r\n              <br />\r\n              <input\r\n                id=\"nickname\"\r\n                type=\"text\"\r\n                value={newNickname}\r\n                onChange={onChangeNewNickname}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-category\">\r\n            <label>\r\n              관심사<span> (최대 5개까지 선택가능합니다)</span>\r\n            </label>\r\n            <CategoryList\r\n              mainCategories={mainCategories}\r\n              categories={categories}\r\n              setCategories={setCategories}\r\n            />\r\n          </div>\r\n          <div className=\"create-btn\">\r\n            <Button ghost htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(UserProfileModifyModal);\r\n","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n"],"sourceRoot":""}