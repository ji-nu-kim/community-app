{"version":3,"sources":["webpack:///./components/CommunityBody/Post/styles.tsx","webpack:///./components/CommunityBody/Post/index.tsx"],"names":["PostContainer","styled","div","PostSettingModal","dynamic","PostEditModal","CommentSettingModal","CommentEditModal","PostForm","CommentForm","Post","singleCommunity","communityUser","dispatch","useDispatch","mainPosts","hasMorePost","loadPostsLoading","updateCommentDone","useSelector","state","post","editMode","setEditMode","useState","showPostSettingButton","setShowPostSettingButton","CurrentPostSettingButton","setCurrentPostSettingButton","currentModifyPost","setCurrentModifyPost","showCommentSettingButton","setShowCommentSettingButton","currentCommentSettingButton","setCurrentCommentSettingButton","currentModifyComment","setCurrentModifyComment","openPostCommentForm","setOpenPostCommentForm","currentPostCommentForm","setCurrentPostCommentForm","postContainerRef","useRef","onClickPostSettingButton","useCallback","postId","onClickCommentSettingButton","commentId","onTogglePostCommentForm","prev","onCloseSettingModal","useEffect","postContainer","current","onScroll","e","length","target","scrollTop","scrollHeight","offsetHeight","lastId","id","loadPostsRequestAction","communityId","addEventListener","removeEventListener","map","content","User","profilePhoto","process","nickname","moment","createdAt","locale","format","Images","src","cursor","marginRight","Comments","comment","memo"],"mappings":"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","file":"34.8b528b1703bf50e11ff1.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const PostContainer = styled.div`\r\n  overflow: auto;\r\n  height: 100%;\r\n  backdrop-filter: blur(2px);\r\n  -webkit-backdrop-filter: blur(2px);\r\n  background: rgba(0, 0, 0, 0.4);\r\n\r\n  .post-form-container {\r\n    background: rgba(255, 255, 255, 0.4);\r\n    padding: 1rem;\r\n    margin-bottom: 2rem;\r\n  }\r\n\r\n  .visitor-post {\r\n    height: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n  }\r\n\r\n  .header {\r\n    position: relative;\r\n    display: flex;\r\n    justify-content: space-between;\r\n\r\n    .header-left {\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      .left-profile-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n        margin-right: 8px;\r\n      }\r\n      .left-fake-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        border-radius: 50%;\r\n        margin-right: 8px;\r\n        background: rgba(0, 0, 0, 0.5);\r\n        text-align: center;\r\n      }\r\n      .left-nickname {\r\n        font-weight: bold;\r\n      }\r\n    }\r\n\r\n    .header-right {\r\n      display: flex;\r\n      align-items: center;\r\n      position: relative;\r\n\r\n      .right-day {\r\n        font-size: 0.75rem;\r\n      }\r\n      .right-buttons {\r\n        margin-left: 8px;\r\n        font-size: 16px;\r\n        cursor: pointer;\r\n\r\n        :hover {\r\n          color: rgba(0, 0, 0, 0.4);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  .post-body-container {\r\n    position: relative;\r\n    background: rgba(255, 255, 255, 0.4);\r\n\r\n    :not(:last-child) {\r\n      margin-bottom: 1rem;\r\n    }\r\n\r\n    .post-body-header {\r\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-image {\r\n      width: 100%;\r\n      object-fit: cover;\r\n    }\r\n\r\n    .post-text {\r\n      padding: 1rem 0.5rem;\r\n      white-space: pre;\r\n    }\r\n\r\n    .post-comment-info {\r\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\r\n      padding: 0.5rem;\r\n    }\r\n\r\n    .post-comment-container {\r\n      position: relative;\r\n      margin: 0.5rem 0;\r\n      padding: 0.5rem;\r\n      background: linear-gradient(\r\n        120deg,\r\n        rgba(69, 104, 220, 0.7),\r\n        rgba(176, 106, 179, 0.7)\r\n      );\r\n\r\n      .comment-header {\r\n      }\r\n\r\n      .comment-text {\r\n        margin-top: 0.5rem;\r\n        text-align: justify;\r\n        white-space: pre;\r\n      }\r\n    }\r\n\r\n    .post-comment-form-container {\r\n      text-align: end;\r\n    }\r\n  }\r\n`;\r\n","import { MessageOutlined, MoreOutlined } from '@ant-design/icons';\r\nimport { loadPostsRequestAction } from 'actions/actionPost';\r\nimport { ICommunity, IUserInfo } from 'interfaces/db';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport moment from 'moment';\r\nimport React, { memo, useCallback, useEffect, useState, useRef } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { PostContainer } from './styles';\r\n\r\nconst PostSettingModal = dynamic(() => import('components/Modals/PostSettingModal'));\r\nconst PostEditModal = dynamic(() => import('components/Modals/PostEditModal'));\r\nconst CommentSettingModal = dynamic(\r\n  () => import('components/Modals/CommentSettingModal')\r\n);\r\nconst CommentEditModal = dynamic(() => import('components/Modals/CommentEditModal'));\r\nconst PostForm = dynamic(() => import('components/PostForm'));\r\nconst CommentForm = dynamic(() => import('components/CommentForm'));\r\n\r\ninterface PostProps {\r\n  singleCommunity: ICommunity;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction Post({ singleCommunity, communityUser }: PostProps) {\r\n  const dispatch = useDispatch();\r\n  const { mainPosts, hasMorePost, loadPostsLoading, updateCommentDone } = useSelector(\r\n    (state: RootStateInterface) => state.post\r\n  );\r\n  const [editMode, setEditMode] = useState(false);\r\n  const [showPostSettingButton, setShowPostSettingButton] = useState(false); // 포스트설정 모달 보여주기\r\n  const [CurrentPostSettingButton, setCurrentPostSettingButton] = useState(0); // 현재 보여지고 있는 포스트설정 모달\r\n  const [currentModifyPost, setCurrentModifyPost] = useState(0); // 현재 수정중인 포스트\r\n  const [showCommentSettingButton, setShowCommentSettingButton] = useState(false);\r\n  const [currentCommentSettingButton, setCurrentCommentSettingButton] = useState(0);\r\n  const [currentModifyComment, setCurrentModifyComment] = useState(0);\r\n  const [openPostCommentForm, setOpenPostCommentForm] = useState(false);\r\n  const [currentPostCommentForm, setCurrentPostCommentForm] = useState(0);\r\n  const postContainerRef = useRef<HTMLDivElement>(null);\r\n\r\n  const onClickPostSettingButton = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostSettingButton(postId);\r\n      setShowPostSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onClickCommentSettingButton = useCallback(\r\n    (commentId: number) => () => {\r\n      setCurrentCommentSettingButton(commentId);\r\n      setShowCommentSettingButton(true);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onTogglePostCommentForm = useCallback(\r\n    (postId: number) => () => {\r\n      setCurrentPostCommentForm(postId);\r\n      setOpenPostCommentForm(prev => !prev);\r\n    },\r\n    []\r\n  );\r\n\r\n  const onCloseSettingModal = useCallback(() => {\r\n    if (showPostSettingButton || showCommentSettingButton) {\r\n      setShowPostSettingButton(false);\r\n      setShowCommentSettingButton(false);\r\n    }\r\n  }, [showPostSettingButton, showCommentSettingButton]);\r\n\r\n  useEffect(() => {\r\n    if (updateCommentDone) {\r\n      setEditMode(false);\r\n    }\r\n  }, [updateCommentDone]);\r\n\r\n  useEffect(() => {\r\n    const postContainer = postContainerRef.current;\r\n    if (!postContainer) return;\r\n\r\n    function onScroll(e: any) {\r\n      if (communityUser && mainPosts.length) {\r\n        if (e.target.scrollTop >= e.target.scrollHeight - e.target.offsetHeight - 300) {\r\n          if (hasMorePost && !loadPostsLoading) {\r\n            const lastId = mainPosts[mainPosts.length - 1].id;\r\n            dispatch(\r\n              loadPostsRequestAction({ communityId: singleCommunity.id, postId: lastId })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    postContainer.addEventListener('scroll', onScroll);\r\n\r\n    return () => postContainer.removeEventListener('scroll', onScroll);\r\n  }, [\r\n    communityUser,\r\n    mainPosts,\r\n    hasMorePost,\r\n    loadPostsLoading,\r\n    singleCommunity,\r\n    postContainerRef.current,\r\n  ]);\r\n\r\n  return (\r\n    <PostContainer onClick={onCloseSettingModal} ref={postContainerRef}>\r\n      {communityUser ? (\r\n        <>\r\n          <div className=\"post-form-container\">\r\n            <PostForm />\r\n          </div>\r\n          {mainPosts.length ? (\r\n            <>\r\n              {mainPosts.map(post => (\r\n                <div className=\"post-body-container\" key={post.id}>\r\n                  {editMode && post.id === currentModifyPost && (\r\n                    <PostEditModal\r\n                      setEditMode={setEditMode}\r\n                      setCurrentModifyPost={setCurrentModifyPost}\r\n                      currentPostText={post.content}\r\n                      postId={post.id}\r\n                      communityId={singleCommunity.id}\r\n                    />\r\n                  )}\r\n                  <div className=\"header post-body-header\">\r\n                    <div className=\"header-left\">\r\n                      <span>\r\n                        {post.User.profilePhoto ? (\r\n                          <img\r\n                            className=\"left-profile-image\"\r\n                            src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${post.User.profilePhoto}`}\r\n                            alt=\"profile image\"\r\n                          />\r\n                        ) : (\r\n                          <div className=\"left-fake-image\">{post.User.nickname[0]}</div>\r\n                        )}\r\n                      </span>\r\n                      <div className=\"left-nickname\">{post.User.nickname}</div>\r\n                    </div>\r\n                    <div className=\"header-right\">\r\n                      <div className=\"right-day\">\r\n                        {moment(post.createdAt).locale('ko').format('LLL')}\r\n                      </div>\r\n                      <div\r\n                        className=\"right-buttons\"\r\n                        onClick={onClickPostSettingButton(post.id)}\r\n                      >\r\n                        <MoreOutlined />\r\n                      </div>\r\n                      {showPostSettingButton && post.id === CurrentPostSettingButton && (\r\n                        <PostSettingModal\r\n                          setCurrentModifyPost={setCurrentModifyPost}\r\n                          setEditMode={setEditMode}\r\n                          postId={post.id}\r\n                          communityId={singleCommunity.id}\r\n                          postOwnerId={post.User.id}\r\n                          communityUserId={communityUser.id}\r\n                          content={post.content}\r\n                        />\r\n                      )}\r\n                    </div>\r\n                  </div>\r\n                  {post.Images.length ? (\r\n                    <img\r\n                      src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${post.Images[0].src}`}\r\n                      alt=\"image\"\r\n                      className=\"post-image\"\r\n                    />\r\n                  ) : null}\r\n                  <div className=\"post-text\">{post.content}</div>\r\n                  <div className=\"post-comment-info\">\r\n                    <div\r\n                      onClick={onTogglePostCommentForm(post.id)}\r\n                      style={{\r\n                        cursor: 'pointer',\r\n                      }}\r\n                    >\r\n                      <span style={{ marginRight: '4px' }}>\r\n                        <MessageOutlined />\r\n                      </span>\r\n                      {post.Comments.length\r\n                        ? `댓글 ${post.Comments.length}개 모두보기`\r\n                        : '댓글 작성하기'}\r\n                    </div>\r\n                    {openPostCommentForm && currentPostCommentForm === post.id && (\r\n                      <>\r\n                        {post.Comments &&\r\n                          post.Comments.map(comment => (\r\n                            <div className=\"post-comment-container\" key={comment.id}>\r\n                              {editMode && comment.id === currentModifyComment && (\r\n                                <CommentEditModal\r\n                                  setEditMode={setEditMode}\r\n                                  setCurrentModifyComment={setCurrentModifyComment}\r\n                                  currentCommentText={comment.content}\r\n                                  postId={post.id}\r\n                                  commentId={comment.id}\r\n                                />\r\n                              )}\r\n                              <div className=\"header comment-header\">\r\n                                <div className=\"header-left\">\r\n                                  <span>\r\n                                    {comment.User.profilePhoto ? (\r\n                                      <img\r\n                                        className=\"left-profile-image\"\r\n                                        src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${comment.User.profilePhoto}`}\r\n                                        alt=\"profile image\"\r\n                                      />\r\n                                    ) : (\r\n                                      <div className=\"left-fake-image\">\r\n                                        {comment.User.nickname[0]}\r\n                                      </div>\r\n                                    )}\r\n                                  </span>\r\n                                  <div className=\"left-nickname\">\r\n                                    {comment.User.nickname}\r\n                                  </div>\r\n                                </div>\r\n                                <div className=\"header-right\">\r\n                                  <div className=\"right-day\">\r\n                                    {moment(comment.createdAt).locale('ko').format('LLL')}\r\n                                  </div>\r\n                                  <div\r\n                                    className=\"right-buttons\"\r\n                                    onClick={onClickCommentSettingButton(comment.id)}\r\n                                  >\r\n                                    <MoreOutlined />\r\n                                  </div>\r\n                                </div>\r\n                                {showCommentSettingButton &&\r\n                                  comment.id === currentCommentSettingButton && (\r\n                                    <CommentSettingModal\r\n                                      setCurrentModifyComment={setCurrentModifyComment}\r\n                                      setEditMode={setEditMode}\r\n                                      postId={post.id}\r\n                                      commentId={comment.id}\r\n                                      commentOwnerId={comment.User.id}\r\n                                      communityUserId={communityUser.id}\r\n                                      content={comment.content}\r\n                                    />\r\n                                  )}\r\n                              </div>\r\n                              <div className=\"comment-text\">{comment.content}</div>\r\n                            </div>\r\n                          ))}\r\n                        <div className=\"post-comment-form-container\">\r\n                          <CommentForm postId={post.id} />\r\n                        </div>\r\n                      </>\r\n                    )}\r\n                  </div>\r\n                </div>\r\n              ))}\r\n            </>\r\n          ) : null}\r\n        </>\r\n      ) : (\r\n        <div className=\"visitor-post\">커뮤니티유저만 볼 수 있습니다</div>\r\n      )}\r\n    </PostContainer>\r\n  );\r\n}\r\n\r\nexport default memo(Post);\r\n"],"sourceRoot":""}