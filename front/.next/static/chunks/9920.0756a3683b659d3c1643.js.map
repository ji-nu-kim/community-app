{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./components/Modals/ShowCommunityUserModal/styles.tsx","webpack://_N_E/./components/Modals/ShowCommunityUserModal/index.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","ModalExternal","styled","ModalContainer","ModalHeader","ColorAni","ModalBody","setShowCommunityUserModal","singleCommunity","closeShowCommunityUserModal","useCallback","onClick","e","stopPropagation","className","CloseCircleOutlined","Users","map","user","profilePhoto","width","height","src","alt","nickname","country"],"mappings":"gJAEA,EAD0B,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2RAA8R,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oLAAwL,KAAQ,eAAgB,MAAS,Y,UCKrrB,EAAsB,SAA6BA,EAAOC,GAC5D,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAoBC,YAAc,sBAClC,MAA4B,aAAiB,I,2HCXhCC,EAAgBC,oBAAH,iEAAGA,CAAH,gEAUbC,EAAiBD,oBAAH,kEAAGA,CAAH,uUAqBdE,EAAcF,uBAAH,+DAAGA,CAAH,8SAkBLG,KAKNC,EAAYJ,oBAAH,6DAAGA,CAAH,ksB,UCLtB,MA1CA,YAGgC,IAF9BK,EAE8B,EAF9BA,0BACAC,EAC8B,EAD9BA,gBAEMC,GAA8BC,kBAAY,WAC9CH,GAA0B,KACzB,CAACA,IAEJ,OACE,SAACN,EAAD,CAAeU,QAASF,EAAxB,UACE,UAACN,EAAD,CAAgBQ,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBAAhC,WACE,UAACT,EAAD,YACE,gBAAKU,UAAU,cAAf,oDACA,gBAAKA,UAAU,YAAYH,QAASF,EAApC,UACE,SAACM,EAAA,EAAD,UAGJ,SAACT,EAAD,UACGE,EAAgBQ,MAAMC,KAAI,SAAAC,GAAI,OAC7B,iBAAKJ,UAAU,iBAAf,WACE,iBAAKA,UAAU,YAAf,UACGI,EAAKC,cACJ,gBACEC,MAAM,OACNC,OAAO,OACPC,IAAKJ,EAAKC,aACVI,IAAI,gBAGN,gBAAKT,UAAU,aAAf,SAA6BI,EAAKM,SAAS,MAE7C,gBAAKV,UAAU,gBAAf,SAAgCI,EAAKM,eAEvC,gBAAKV,UAAU,eAAf,SAA+BI,EAAKO,YAdDP,EAAKM","file":"static/chunks/9920.0756a3683b659d3c1643.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import styled from 'styled-components';\r\nimport { ColorAni } from '../../../utils/stylesUtil';\r\n\r\nexport const ModalExternal = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  right: 0;\r\n  bottom: 0;\r\n\r\n  z-index: 1000;\r\n`;\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 10;\r\n  width: 600px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-btn {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  padding: 1rem;\r\n  display: flex;\r\n  flex-wrap: wrap;\r\n  align-content: flex-start;\r\n  overflow: auto;\r\n\r\n  .user-container {\r\n    display: flex;\r\n    flex-direction: column;\r\n    align-items: center;\r\n    border: 2px solid rgba(255, 255, 255, 0.3);\r\n    border-radius: 10px;\r\n    padding: 0.5rem;\r\n    margin-bottom: 1rem;\r\n    margin-right: 1rem;\r\n\r\n    :hover {\r\n      border: 2px solid #039be5;\r\n      background: rgba(0, 0, 0, 0.1);\r\n    }\r\n\r\n    .user-name {\r\n      padding: 0.25rem;\r\n      display: flex;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .fake-image {\r\n        width: 24px;\r\n        height: 24px;\r\n        background: rgba(255, 255, 255, 0.5);\r\n        border-radius: 50%;\r\n        display: flex;\r\n        justify-content: center;\r\n        align-items: center;\r\n        color: #fff;\r\n      }\r\n\r\n      .user-nickname {\r\n        margin-left: 4px;\r\n        font-weight: bold;\r\n        color: #b3b3b3;\r\n      }\r\n    }\r\n\r\n    .user-country {\r\n      padding: 0.25rem;\r\n      color: #039be5;\r\n      font-size: 0.75rem;\r\n    }\r\n  }\r\n`;\r\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { ModalExternal, ModalContainer, ModalBody, ModalHeader } from './styles';\r\nimport { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { ICommunity } from 'interfaces/db';\r\n\r\ninterface ShowCommunityUserModalProps {\r\n  setShowCommunityUserModal: Dispatch<SetStateAction<boolean>>;\r\n  singleCommunity: ICommunity;\r\n}\r\n\r\nfunction ShowCommunityUserModal({\r\n  setShowCommunityUserModal,\r\n  singleCommunity,\r\n}: ShowCommunityUserModalProps) {\r\n  const closeShowCommunityUserModal = useCallback(() => {\r\n    setShowCommunityUserModal(false);\r\n  }, [setShowCommunityUserModal]);\r\n\r\n  return (\r\n    <ModalExternal onClick={closeShowCommunityUserModal}>\r\n      <ModalContainer onClick={e => e.stopPropagation()}>\r\n        <ModalHeader>\r\n          <div className=\"modal-title\">커뮤니티 회원</div>\r\n          <div className=\"close-btn\" onClick={closeShowCommunityUserModal}>\r\n            <CloseCircleOutlined />\r\n          </div>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          {singleCommunity.Users.map(user => (\r\n            <div className=\"user-container\" key={user.nickname}>\r\n              <div className=\"user-name\">\r\n                {user.profilePhoto ? (\r\n                  <img\r\n                    width=\"24px\"\r\n                    height=\"24px\"\r\n                    src={user.profilePhoto}\r\n                    alt=\"user-image\"\r\n                  />\r\n                ) : (\r\n                  <div className=\"fake-image\">{user.nickname[0]}</div>\r\n                )}\r\n                <div className=\"user-nickname\">{user.nickname}</div>\r\n              </div>\r\n              <div className=\"user-country\">{user.country}</div>\r\n            </div>\r\n          ))}\r\n        </ModalBody>\r\n      </ModalContainer>\r\n    </ModalExternal>\r\n  );\r\n}\r\n\r\nexport default ShowCommunityUserModal;\r\n"],"sourceRoot":""}