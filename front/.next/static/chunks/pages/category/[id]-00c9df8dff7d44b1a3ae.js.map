{"version":3,"sources":["webpack://_N_E/./interfaces/community/communityAction.interfaces.ts","webpack://_N_E/./actions/actionCommunity.ts","webpack://_N_E/./pages/category/.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?4e62"],"names":["actionTypesCommunity","REMOVE_COMMUNITY_IMAGE","UPLOAD_COMMUNITY_IMAGE_REQUEST","UPLOAD_COMMUNITY_IMAGE_SUCCESS","UPLOAD_COMMUNITY_IMAGE_ERROR","CHANGE_COMMUNITY_INFO_REQUEST","CHANGE_COMMUNITY_INFO_SUCCESS","CHANGE_COMMUNITY_INFO_ERROR","ADD_COMMUNITY_REQUEST","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","REMOVE_COMMUNITY_REQUEST","REMOVE_COMMUNITY_SUCCESS","REMOVE_COMMUNITY_ERROR","JOIN_COMMUNITY_REQUEST","JOIN_COMMUNITY_SUCCESS","JOIN_COMMUNITY_ERROR","ACCEPT_COMMUNITY_REQUEST","ACCEPT_COMMUNITY_SUCCESS","ACCEPT_COMMUNITY_ERROR","REFUSE_COMMUNITY_REQUEST","REFUSE_COMMUNITY_SUCCESS","REFUSE_COMMUNITY_ERROR","LEAVE_COMMUNITY_REQUEST","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_ERROR","LOAD_COMMUNITY_REQUEST","LOAD_COMMUNITY_SUCCESS","LOAD_COMMUNITY_ERROR","LOAD_COMMUNITIES_REQUEST","LOAD_COMMUNITIES_SUCCESS","LOAD_COMMUNITIES_ERROR","SEARCH_COMMUNITIES_REQUEST","SEARCH_COMMUNITIES_SUCCESS","SEARCH_COMMUNITIES_ERROR","LOAD_COUNTRY_COMMUNITIES_REQUEST","LOAD_COUNTRY_COMMUNITIES_SUCCESS","LOAD_COUNTRY_COMMUNITIES_ERROR","LOAD_CATEGORY_COMMUNITIES_REQUEST","LOAD_CATEGORY_COMMUNITIES_SUCCESS","LOAD_CATEGORY_COMMUNITIES_ERROR","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_ERROR","LOAD_CATEGORIES_REQUEST","LOAD_CATEGORIES_SUCCESS","LOAD_CATEGORIES_ERROR","ADD_MEET_REQUEST","ADD_MEET_SUCCESS","ADD_MEET_ERROR","REMOVE_MEET_REQUEST","REMOVE_MEET_SUCCESS","REMOVE_MEET_ERROR","MODIFY_MEET_REQUEST","MODIFY_MEET_SUCCESS","MODIFY_MEET_ERROR","JOIN_MEET_REQUEST","JOIN_MEET_SUCCESS","JOIN_MEET_ERROR","LEAVE_MEET_REQUEST","LEAVE_MEET_SUCCESS","LEAVE_MEET_ERROR","removeCommunityImage","type","uploadCommunityImageRequestAction","data","changeCommunityInfoRequestAction","addCommunityRequestAction","removeCommunityRequestAction","joinCommunityRequestAction","acceptCommunityRequestAction","refuseCommunityRequestAction","leaveCommunityRequestAction","loadCountryCommunitiesRequestAction","loadCategoryCommunitiesRequestAction","addMeetRequestAction","removeMeetRequestAction","modifyMeetRequestAction","joinMeetRequestAction","leaveMeetRequestAction","Category","dispatch","useDispatch","router","useRouter","useSelector","state","community","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","singleCategory","communityLength","useEffect","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","categoryId","Number","query","id","lastId","communityId","addEventListener","removeEventListener","name","img","profilePhoto","className","map","href","categoryName","Categories","country","communityName","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/category/[id]-00c9df8dff7d44b1a3ae.js","sourcesContent":["import { ICategory, ICommunity, IUser, IMeet } from '../db';\n\nexport const actionTypesCommunity = {\n  REMOVE_COMMUNITY_IMAGE: 'REMOVE_COMMUNITY_IMAGE', // 커뮤니티 프로필 미리보기 이미지 삭제\n  UPLOAD_COMMUNITY_IMAGE_REQUEST: 'UPLOAD_COMMUNITY_IMAGE_REQUEST', // 커뮤니티 프로필 미리보기 이미지 업로드\n  UPLOAD_COMMUNITY_IMAGE_SUCCESS: 'UPLOAD_COMMUNITY_IMAGE_SUCCESS',\n  UPLOAD_COMMUNITY_IMAGE_ERROR: 'UPLOAD_COMMUNITY_IMAGE_ERROR',\n  CHANGE_COMMUNITY_INFO_REQUEST: 'CHANGE_COMMUNITY_INFO_REQUEST', // 커뮤니티 정보 변경\n  CHANGE_COMMUNITY_INFO_SUCCESS: 'CHANGE_COMMUNITY_INFO_SUCCESS',\n  CHANGE_COMMUNITY_INFO_ERROR: 'CHANGE_COMMUNITY_INFO_ERROR',\n  ADD_COMMUNITY_REQUEST: 'ADD_COMMUNITY_REQUEST', // 커뮤니티 생성\n  ADD_COMMUNITY_SUCCESS: 'ADD_COMMUNITY_SUCCESS',\n  ADD_COMMUNITY_ERROR: 'ADD_COMMUNITY_ERROR',\n  REMOVE_COMMUNITY_REQUEST: 'REMOVE_COMMUNITY_REQUEST', // 커뮤니티 제거(유저가 없을 때만)\n  REMOVE_COMMUNITY_SUCCESS: 'REMOVE_COMMUNITY_SUCCESS',\n  REMOVE_COMMUNITY_ERROR: 'REMOVE_COMMUNITY_ERROR',\n  JOIN_COMMUNITY_REQUEST: 'JOIN_COMMUNITY_REQUEST:', // 커뮤니티 가입신청(임시 DB에 저장)\n  JOIN_COMMUNITY_SUCCESS: 'JOIN_COMMUNITY_SUCCESS:',\n  JOIN_COMMUNITY_ERROR: 'JOIN_COMMUNITY_ERROR:',\n  ACCEPT_COMMUNITY_REQUEST: 'ACCEPT_COMMUNITY_REQUEST', // 커뮤니티 가입승인(커뮤니티 DB에 저장)\n  ACCEPT_COMMUNITY_SUCCESS: 'ACCEPT_COMMUNITY_SUCCESS',\n  ACCEPT_COMMUNITY_ERROR: 'ACCEPT_COMMUNITY_ERROR',\n  REFUSE_COMMUNITY_REQUEST: 'REFUSE_COMMUNITY_REQUEST', // 커뮤니티 가입거절(임시 DB에서 삭제)\n  REFUSE_COMMUNITY_SUCCESS: 'REFUSE_COMMUNITY_SUCCESS',\n  REFUSE_COMMUNITY_ERROR: 'REFUSE_COMMUNITY_ERROR',\n  LEAVE_COMMUNITY_REQUEST: 'LEAVE_COMMUNITY_REQUEST', // 커뮤니티 탈퇴\n  LEAVE_COMMUNITY_SUCCESS: 'LEAVE_COMMUNITY_SUCCESS',\n  LEAVE_COMMUNITY_ERROR: 'LEAVE_COMMUNITY_ERROR',\n  LOAD_COMMUNITY_REQUEST: 'LOAD_COMMUNITY_REQUEST', // 특정 커뮤니티 불러오기\n  LOAD_COMMUNITY_SUCCESS: 'LOAD_COMMUNITY_SUCCESS',\n  LOAD_COMMUNITY_ERROR: 'LOAD_COMMUNITY_ERROR',\n  LOAD_COMMUNITIES_REQUEST: 'LOAD_COMMUNITIES_REQUEST', // 모든 커뮤니티 불러오기\n  LOAD_COMMUNITIES_SUCCESS: 'LOAD_COMMUNITIES_SUCCESS',\n  LOAD_COMMUNITIES_ERROR: 'LOAD_COMMUNITIES_ERROR',\n  SEARCH_COMMUNITIES_REQUEST: 'SEARCH_COMMUNITIES_REQUEST', // 커뮤니티 검색\n  SEARCH_COMMUNITIES_SUCCESS: 'SEARCH_COMMUNITIES_SUCCESS',\n  SEARCH_COMMUNITIES_ERROR: 'SEARCH_COMMUNITIES_ERROR',\n  LOAD_COUNTRY_COMMUNITIES_REQUEST: 'LOAD_COUNTRY_COMMUNITIES_REQUEST', // 해당 지역의 모든 커뮤니티 불러오기\n  LOAD_COUNTRY_COMMUNITIES_SUCCESS: 'LOAD_COUNTRY_COMMUNITIES_SUCCESS',\n  LOAD_COUNTRY_COMMUNITIES_ERROR: 'LOAD_COUNTRY_COMMUNITIES_ERROR',\n  LOAD_CATEGORY_COMMUNITIES_REQUEST: 'LOAD_CATEGORY_COMMUNITIES_REQUEST', // 해당 카테고리의 모든 커뮤니티 불러오기\n  LOAD_CATEGORY_COMMUNITIES_SUCCESS: 'LOAD_CATEGORY_COMMUNITIES_SUCCESS',\n  LOAD_CATEGORY_COMMUNITIES_ERROR: 'LOAD_CATEGORY_COMMUNITIES_ERROR',\n  LOAD_CATEGORY_REQUEST: 'LOAD_CATEGORY_REQUEST', // 특정 카테고리 불러오기\n  LOAD_CATEGORY_SUCCESS: 'LOAD_CATEGORY_SUCCESS',\n  LOAD_CATEGORY_ERROR: 'LOAD_CATEGORY_ERROR',\n  LOAD_CATEGORIES_REQUEST: 'LOAD_CATEGORIES_REQUEST', // 모든 카테고리 불러오기\n  LOAD_CATEGORIES_SUCCESS: 'LOAD_CATEGORIES_SUCCESS',\n  LOAD_CATEGORIES_ERROR: 'LOAD_CATEGORIES_ERROR',\n  ADD_MEET_REQUEST: 'ADD_MEET_REQUEST', // 모임 생성\n  ADD_MEET_SUCCESS: 'ADD_MEET_SUCCESS',\n  ADD_MEET_ERROR: 'ADD_MEET_ERROR',\n  REMOVE_MEET_REQUEST: 'REMOVE_MEET_REQUEST', // 모임 제거\n  REMOVE_MEET_SUCCESS: 'REMOVE_MEET_SUCCESS',\n  REMOVE_MEET_ERROR: 'REMOVE_MEET_ERROR',\n  MODIFY_MEET_REQUEST: 'MODIFY_MEET_REQUEST', // 모임 수정\n  MODIFY_MEET_SUCCESS: 'MODIFY_MEET_SUCCESS',\n  MODIFY_MEET_ERROR: 'MODIFY_MEET_ERROR',\n  JOIN_MEET_REQUEST: 'JOIN_MEET_REQUEST', // 모임 가입\n  JOIN_MEET_SUCCESS: 'JOIN_MEET_SUCCESS',\n  JOIN_MEET_ERROR: 'JOIN_MEET_ERROR',\n  LEAVE_MEET_REQUEST: 'LEAVE_MEET_REQUEST', // 모임 탈퇴\n  LEAVE_MEET_SUCCESS: 'LEAVE_MEET_SUCCESS',\n  LEAVE_MEET_ERROR: 'LEAVE_MEET_ERROR',\n} as const;\n\nexport interface IRemoveCommunityImage {\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_IMAGE;\n}\nexport interface IUploadCommunityImageRequest {\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST;\n  data: FormData;\n}\nexport interface IUploadCommunityImageSuccess {\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_SUCCESS;\n  data: string[];\n}\nexport interface IUploadCommunityImageError {\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_ERROR;\n  error: Error;\n}\nexport interface IChangeCommunityInfoData {\n  communityId: number;\n  profilePhoto: string[];\n  description: string;\n  caution: string;\n  requirement: string;\n}\nexport interface IChangeCommunityInfoRequest {\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST;\n  data: IChangeCommunityInfoData;\n}\nexport interface IChangeCommunityInfoReturnData {\n  communityId: number;\n  profilePhoto: string;\n  description: string;\n  caution: string;\n  requirement: string;\n}\nexport interface IChangeCommunityInfoSuccess {\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_SUCCESS;\n  data: IChangeCommunityInfoReturnData;\n}\nexport interface IChangeCommunityInfoError {\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_ERROR;\n  error: Error;\n}\nexport interface ICommunityData {\n  communityName: string;\n  description: string;\n  country: string;\n  category: string;\n}\nexport interface IAddCommunityRequest {\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_REQUEST;\n  data: ICommunityData;\n}\nexport interface IAddCommunitySuccess {\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_SUCCESS;\n}\nexport interface IAddCommunityError {\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface IRemoveCommunityRequest {\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_REQUEST;\n  data: { communityId: number };\n}\nexport interface IRemoveCommunitySuccess {\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_SUCCESS;\n}\nexport interface IRemoveCommunityError {\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface IJoinCommunityRequest {\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_REQUEST;\n  data: { communityId: number };\n}\nexport interface IJoinCommunitySuccess {\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_SUCCESS;\n  data: IUser;\n}\nexport interface IJoinCommunityError {\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface IAcceptCommunityRequest {\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST;\n  data: { communityId: number; userId: number; title: string };\n}\nexport interface IAcceptCommunitySuccess {\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_SUCCESS;\n  data: IUser;\n}\nexport interface IAcceptCommunityError {\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface IRefuseCommunityRequest {\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_REQUEST;\n  data: { communityId: number; userId: number };\n}\nexport interface IRefuseCommunitySuccess {\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_SUCCESS;\n  data: { userId: number };\n}\nexport interface IRefuseCommunityError {\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface ILeaveCommunityRequest {\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_REQUEST;\n  data: { communityId: number };\n}\nexport interface ILeaveCommunitySuccess {\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_SUCCESS;\n  data: { communityId: number; userId: number };\n}\nexport interface ILeaveCommunityError {\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface ILoadCommunityRequest {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_REQUEST;\n  data: { communityId: number };\n}\nexport interface ILoadCommunitySuccess {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_SUCCESS;\n  data: ICommunity;\n}\nexport interface ILoadCommunityError {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_ERROR;\n  error: Error;\n}\nexport interface ILoadCommunitiesRequest {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_REQUEST;\n}\nexport interface ILoadCommunitiesSuccess {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_SUCCESS;\n  data: ICommunity[];\n}\nexport interface ILoadCommunitiesError {\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_ERROR;\n  error: Error;\n}\nexport interface ISearchCommunitiesRequest {\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST;\n  data: { keyword: string };\n}\nexport interface ISearchCommunitiesSuccess {\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_SUCCESS;\n  data: ICommunity[];\n}\nexport interface ISearchCommunitiesError {\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_ERROR;\n  error: Error;\n}\nexport interface ILoadCountryCommunitiesRequest {\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST;\n  data: { country: string; communityId: number };\n}\nexport interface ILoadCountryCommunitiesSuccess {\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_SUCCESS;\n  data: ICommunity[];\n}\nexport interface ILoadCountryCommunitiesError {\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_ERROR;\n  error: Error;\n}\nexport interface ILoadCategoryCommunitiesRequest {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST;\n  data: { categoryId: number; communityId: number };\n}\nexport interface ILoadCategoryCommunitiesSuccess {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_SUCCESS;\n  data: ICommunity[];\n}\nexport interface ILoadCategoryCommunitiesError {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_ERROR;\n  error: Error;\n}\nexport interface ILoadCategoryRequest {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_REQUEST;\n  data: { categoryId: number };\n}\nexport interface ILoadCategorySuccess {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_SUCCESS;\n  data: { category: ICategory; communityLength: number };\n}\nexport interface ILoadCategoryError {\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_ERROR;\n  error: Error;\n}\nexport interface ILoadCategoriesRequest {\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_REQUEST;\n}\nexport interface ILoadCategoriesSuccess {\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_SUCCESS;\n  data: ICategory[];\n}\nexport interface ILoadCategoriesError {\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_ERROR;\n  error: Error;\n}\nexport interface IAddMeetData {\n  place: string;\n  fee: number;\n  members: number;\n  date: string;\n  title: string;\n  communityId: number;\n}\nexport interface IAddMeetRequest {\n  type: typeof actionTypesCommunity.ADD_MEET_REQUEST;\n  data: IAddMeetData;\n}\nexport interface IAddMeetSuccess {\n  type: typeof actionTypesCommunity.ADD_MEET_SUCCESS;\n  data: IMeet;\n}\nexport interface IAddMeetError {\n  type: typeof actionTypesCommunity.ADD_MEET_ERROR;\n  error: Error;\n}\nexport interface IRemoveMeetRequest {\n  type: typeof actionTypesCommunity.REMOVE_MEET_REQUEST;\n  data: { communityId: number; meetId: number };\n}\nexport interface IRemoveMeetSuccess {\n  type: typeof actionTypesCommunity.REMOVE_MEET_SUCCESS;\n  data: { meetId: number };\n}\nexport interface IRemoveMeetError {\n  type: typeof actionTypesCommunity.REMOVE_MEET_ERROR;\n  error: Error;\n}\nexport interface IModifyMeetData extends IAddMeetData {\n  meetId: number;\n}\nexport interface IModifyMeetRequest {\n  type: typeof actionTypesCommunity.MODIFY_MEET_REQUEST;\n  data: IModifyMeetData;\n}\nexport interface IModifyMeetSuccess {\n  type: typeof actionTypesCommunity.MODIFY_MEET_SUCCESS;\n  data: IMeet;\n}\nexport interface IModifyMeetError {\n  type: typeof actionTypesCommunity.MODIFY_MEET_ERROR;\n  error: Error;\n}\nexport interface IJoinMeetRequest {\n  type: typeof actionTypesCommunity.JOIN_MEET_REQUEST;\n  data: { communityId: number; meetId: number };\n}\nexport interface IJoinMeetSuccess {\n  type: typeof actionTypesCommunity.JOIN_MEET_SUCCESS;\n  data: IMeet;\n}\nexport interface IJoinMeetError {\n  type: typeof actionTypesCommunity.JOIN_MEET_ERROR;\n  error: Error;\n}\nexport interface ILeaveMeetRequest {\n  type: typeof actionTypesCommunity.LEAVE_MEET_REQUEST;\n  data: { communityId: number; meetId: number };\n}\nexport interface ILeaveMeetSuccess {\n  type: typeof actionTypesCommunity.LEAVE_MEET_SUCCESS;\n  data: { meetId: number; userId: number };\n}\nexport interface ILeaveMeetError {\n  type: typeof actionTypesCommunity.LEAVE_MEET_ERROR;\n  error: Error;\n}\n\nexport type ActionsCommunity =\n  | IRemoveCommunityImage\n  | IUploadCommunityImageRequest\n  | IUploadCommunityImageSuccess\n  | IUploadCommunityImageError\n  | IChangeCommunityInfoRequest\n  | IChangeCommunityInfoSuccess\n  | IChangeCommunityInfoError\n  | IAddCommunityRequest\n  | IAddCommunitySuccess\n  | IAddCommunityError\n  | IRemoveCommunityRequest\n  | IRemoveCommunitySuccess\n  | IRemoveCommunityError\n  | IJoinCommunityRequest\n  | IJoinCommunitySuccess\n  | IJoinCommunityError\n  | IAcceptCommunityRequest\n  | IAcceptCommunitySuccess\n  | IAcceptCommunityError\n  | IRefuseCommunityRequest\n  | IRefuseCommunitySuccess\n  | IRefuseCommunityError\n  | ILeaveCommunityRequest\n  | ILeaveCommunitySuccess\n  | ILeaveCommunityError\n  | ILoadCommunityRequest\n  | ILoadCommunitySuccess\n  | ILoadCommunityError\n  | ILoadCommunitiesRequest\n  | ILoadCommunitiesSuccess\n  | ILoadCommunitiesError\n  | ISearchCommunitiesRequest\n  | ISearchCommunitiesSuccess\n  | ISearchCommunitiesError\n  | ILoadCountryCommunitiesRequest\n  | ILoadCountryCommunitiesSuccess\n  | ILoadCountryCommunitiesError\n  | ILoadCategoryCommunitiesRequest\n  | ILoadCategoryCommunitiesSuccess\n  | ILoadCategoryCommunitiesError\n  | ILoadCategoryRequest\n  | ILoadCategorySuccess\n  | ILoadCategoryError\n  | ILoadCategoriesRequest\n  | ILoadCategoriesSuccess\n  | ILoadCategoriesError\n  | IAddMeetRequest\n  | IAddMeetSuccess\n  | IAddMeetError\n  | IRemoveMeetRequest\n  | IRemoveMeetSuccess\n  | IRemoveMeetError\n  | IModifyMeetRequest\n  | IModifyMeetSuccess\n  | IModifyMeetError\n  | IJoinMeetRequest\n  | IJoinMeetSuccess\n  | IJoinMeetError\n  | ILeaveMeetRequest\n  | ILeaveMeetSuccess\n  | ILeaveMeetError;\n","import {\n  actionTypesCommunity,\n  IRemoveCommunityImage,\n  IUploadCommunityImageRequest,\n  IChangeCommunityInfoData,\n  IChangeCommunityInfoRequest,\n  IAddCommunityRequest,\n  IRemoveCommunityRequest,\n  IJoinCommunityRequest,\n  IAcceptCommunityRequest,\n  IRefuseCommunityRequest,\n  ILeaveCommunityRequest,\n  ILoadCommunityRequest,\n  ILoadCommunitiesRequest,\n  ISearchCommunitiesRequest,\n  ILoadCountryCommunitiesRequest,\n  ILoadCategoryCommunitiesRequest,\n  ILoadCategoryRequest,\n  ILoadCategoriesRequest,\n  IAddMeetRequest,\n  IRemoveMeetRequest,\n  IModifyMeetRequest,\n  IJoinMeetRequest,\n  ILeaveMeetRequest,\n  IAddMeetData,\n  IModifyMeetData,\n  ICommunityData,\n} from '../interfaces/community/communityAction.interfaces';\n\nexport const removeCommunityImage = (): IRemoveCommunityImage => {\n  return {\n    type: actionTypesCommunity.REMOVE_COMMUNITY_IMAGE,\n  };\n};\nexport const uploadCommunityImageRequestAction = (\n  data: FormData\n): IUploadCommunityImageRequest => {\n  return {\n    type: actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST,\n    data,\n  };\n};\n\nexport const changeCommunityInfoRequestAction = (\n  data: IChangeCommunityInfoData\n): IChangeCommunityInfoRequest => {\n  return {\n    type: actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST,\n    data,\n  };\n};\nexport const addCommunityRequestAction = (data: ICommunityData): IAddCommunityRequest => {\n  return {\n    type: actionTypesCommunity.ADD_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const removeCommunityRequestAction = (data: {\n  communityId: number;\n}): IRemoveCommunityRequest => {\n  return {\n    type: actionTypesCommunity.REMOVE_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const joinCommunityRequestAction = (data: {\n  communityId: number;\n}): IJoinCommunityRequest => {\n  return {\n    type: actionTypesCommunity.JOIN_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const acceptCommunityRequestAction = (data: {\n  communityId: number;\n  userId: number;\n  title: string;\n}): IAcceptCommunityRequest => {\n  return {\n    type: actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const refuseCommunityRequestAction = (data: {\n  communityId: number;\n  userId: number;\n}): IRefuseCommunityRequest => {\n  return {\n    type: actionTypesCommunity.REFUSE_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const leaveCommunityRequestAction = (data: {\n  communityId: number;\n}): ILeaveCommunityRequest => {\n  return {\n    type: actionTypesCommunity.LEAVE_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const loadCommunityRequestAction = (data: {\n  communityId: number;\n}): ILoadCommunityRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_COMMUNITY_REQUEST,\n    data,\n  };\n};\nexport const loadCommunitiesRequestAction = (): ILoadCommunitiesRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_COMMUNITIES_REQUEST,\n  };\n};\nexport const searchCommunitiesRequestAction = (data: {\n  keyword: string;\n}): ISearchCommunitiesRequest => {\n  return {\n    type: actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST,\n    data,\n  };\n};\nexport const loadCountryCommunitiesRequestAction = (data: {\n  country: string;\n  communityId: number;\n}): ILoadCountryCommunitiesRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST,\n    data,\n  };\n};\nexport const loadCategoryCommunitiesRequestAction = (data: {\n  categoryId: number;\n  communityId: number;\n}): ILoadCategoryCommunitiesRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST,\n    data,\n  };\n};\n\nexport const loadCategoryRequestAction = (data: {\n  categoryId: number;\n}): ILoadCategoryRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_CATEGORY_REQUEST,\n    data,\n  };\n};\nexport const loadCategoriesRequestAction = (): ILoadCategoriesRequest => {\n  return {\n    type: actionTypesCommunity.LOAD_CATEGORIES_REQUEST,\n  };\n};\n\nexport const addMeetRequestAction = (data: IAddMeetData): IAddMeetRequest => {\n  return {\n    type: actionTypesCommunity.ADD_MEET_REQUEST,\n    data,\n  };\n};\nexport const removeMeetRequestAction = (data: {\n  communityId: number;\n  meetId: number;\n}): IRemoveMeetRequest => {\n  return {\n    type: actionTypesCommunity.REMOVE_MEET_REQUEST,\n    data,\n  };\n};\nexport const modifyMeetRequestAction = (data: IModifyMeetData): IModifyMeetRequest => {\n  return {\n    type: actionTypesCommunity.MODIFY_MEET_REQUEST,\n    data,\n  };\n};\nexport const joinMeetRequestAction = (data: {\n  communityId: number;\n  meetId: number;\n}): IJoinMeetRequest => {\n  return {\n    type: actionTypesCommunity.JOIN_MEET_REQUEST,\n    data,\n  };\n};\nexport const leaveMeetRequestAction = (data: {\n  communityId: number;\n  meetId: number;\n}): ILeaveMeetRequest => {\n  return {\n    type: actionTypesCommunity.LEAVE_MEET_REQUEST,\n    data,\n  };\n};\n","import { END } from '@redux-saga/core';\nimport {\n  loadCategoryCommunitiesRequestAction,\n  loadCategoryRequestAction,\n} from 'actions/actionCommunity';\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\nimport axios from 'axios';\nimport AppLayout from 'components/Layouts/AppLayout';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport wrapper from 'store/configureStore';\nimport CategoryLayout, {\n  CategoryContent,\n  CategoryHeader,\n} from 'components/Layouts/CategoryLayout';\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\nimport Link from 'next/link';\nimport Head from 'next/head';\n\nfunction Category() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    changableCommunities,\n    hasMoreCommunity,\n    loadCommunitiesLoading,\n    singleCategory,\n    communityLength,\n  } = useSelector((state: RootStateInterface) => state.community);\n\n  useEffect(() => {\n    function onScroll() {\n      if (changableCommunities.length) {\n        if (\n          window.scrollY + document.documentElement.clientHeight >=\n          document.documentElement.scrollHeight - 300\n        ) {\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\n            const categoryId = Number(router.query.id);\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\n            dispatch(\n              loadCategoryCommunitiesRequestAction({\n                categoryId,\n                communityId: lastId,\n              })\n            );\n          }\n        }\n      }\n    }\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\n\n  if (!singleCategory) {\n    return <div>잠시만 기다려주세요</div>;\n  }\n\n  return (\n    <>\n      <Head>\n        <title>community - {singleCategory.name} 카테고리</title>\n      </Head>\n      <AppLayout>\n        <CategoryLayout img={singleCategory.profilePhoto}>\n          <CategoryHeader>\n            <h1>\n              {singleCategory.name}\n              <br />\n              {communityLength}개의 커뮤니티\n            </h1>\n          </CategoryHeader>\n          <CategoryContent>\n            <div className=\"cards-container\">\n              {changableCommunities.map(community => (\n                <div key={community.id}>\n                  <Link href={`/community/${community.id}`}>\n                    <a>\n                      <BoxStyleCard\n                        profilePhoto={community.profilePhoto}\n                        categoryName={community.Categories[0].name}\n                        country={community.country}\n                        communityName={community.communityName}\n                      />\n                    </a>\n                  </Link>\n                </div>\n              ))}\n            </div>\n          </CategoryContent>\n        </CategoryLayout>\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    const categoryId = Number(context.query.id);\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoryRequestAction({ categoryId }));\n    context.store.dispatch(\n      loadCategoryCommunitiesRequestAction({\n        categoryId,\n        communityId: 0,\n      })\n    );\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default Category;\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/category/[id]\",\n      function () {\n        return require(\"private-next-pages/category/[id].tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}