{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { UserOutlined } from '@ant-design/icons';\nimport { joinCommunityRequestAction, leaveCommunityRequestAction, removeCommunityRequestAction } from 'actions/actionCommunity';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeaderContainer } from './styles';\nconst JoinUserModal = dynamic(() => import('components/Modals/JoinUserModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/JoinUserModal')],\n    modules: ['components/Modals/JoinUserModal']\n  }\n});\nconst CommunityModifyModal = dynamic(() => import('components/Modals/CommunityModifyModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/CommunityModifyModal')],\n    modules: ['components/Modals/CommunityModifyModal']\n  }\n});\n\nfunction CommunityHeader({\n  singleCommunity,\n  me,\n  communityUser\n}) {\n  const dispatch = useDispatch();\n  const {\n    joinCommunityDone,\n    changeCommunityInfoDone,\n    removeCommunityDone\n  } = useSelector(state => state.community);\n  const {\n    0: joinUserModal,\n    1: setJoinUserModal\n  } = useState(false);\n  const {\n    0: showCommunityModifyModal,\n    1: setShowCommunityModifyModal\n  } = useState(false);\n  const communityOwner = (me === null || me === void 0 ? void 0 : me.id) === (singleCommunity === null || singleCommunity === void 0 ? void 0 : singleCommunity.OwnerId);\n  const joinUser = singleCommunity.JoinUsers.find(user => user.id === (me === null || me === void 0 ? void 0 : me.id));\n  const communityModifyModalTrigger = useCallback(() => {\n    if (communityOwner) {\n      setShowCommunityModifyModal(prev => !prev);\n    }\n  }, [setShowCommunityModifyModal, communityOwner]);\n  const onClickJoinButton = useCallback(() => {\n    if (!me) {\n      if (confirm('로그인한 유저만 가능합니다. 로그인하시겠습니까?')) {\n        return Router.push('/login');\n      }\n    } else if (!communityUser && confirm('커뮤니티 가입신청을 하시겠습니까?')) {\n      return dispatch(joinCommunityRequestAction({\n        communityId: singleCommunity.id\n      }));\n    }\n  }, [singleCommunity, me, communityUser]);\n  const onClickLeaveButton = useCallback(async () => {\n    if (communityUser && confirm('커뮤니티를 탈퇴하시겠습니까?')) {\n      return dispatch(leaveCommunityRequestAction({\n        communityId: singleCommunity.id\n      }));\n    }\n  }, [singleCommunity, communityUser]);\n  const onClickRemoveButton = useCallback(async () => {\n    if (communityOwner && confirm('커뮤니티를 삭제하시겠습니까?')) {\n      return dispatch(removeCommunityRequestAction({\n        communityId: singleCommunity.id\n      }));\n    }\n  }, [communityOwner, singleCommunity]);\n  const joinUserModalTrigger = useCallback(() => {\n    setJoinUserModal(prev => !prev);\n  }, []);\n  useEffect(() => {\n    if (removeCommunityDone) {\n      Router.push('/');\n    }\n  }, [removeCommunityDone]);\n  useEffect(() => {\n    if (joinCommunityDone) {\n      alert('커뮤니티 가입신청이 완료되었습니다');\n    }\n  }, [joinCommunityDone]);\n  useEffect(() => {\n    if (changeCommunityInfoDone) {\n      setShowCommunityModifyModal(false);\n    }\n  }, [changeCommunityInfoDone]);\n  return /*#__PURE__*/_jsxs(HeaderContainer, {\n    children: [/*#__PURE__*/_jsxs(\"div\", {\n      className: \"header-left\",\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"header-image\",\n        children: singleCommunity.profilePhoto ? /*#__PURE__*/_jsx(\"img\", {\n          src: singleCommunity.profilePhoto,\n          width: \"150\",\n          height: \"150\",\n          alt: \"profile-image\"\n        }) : /*#__PURE__*/_jsx(UserOutlined, {\n          className: \"header-icon\"\n        })\n      }), /*#__PURE__*/_jsxs(\"div\", {\n        className: \"header-text\",\n        children: [/*#__PURE__*/_jsx(\"p\", {\n          children: \"\\uCEE4\\uBBA4\\uB2C8\\uD2F0\\uC815\\uBCF4\"\n        }), /*#__PURE__*/_jsx(\"h1\", {\n          children: singleCommunity.communityName\n        }), /*#__PURE__*/_jsx(\"h2\", {\n          children: singleCommunity.country\n        })]\n      })]\n    }), /*#__PURE__*/_jsxs(\"div\", {\n      className: \"header-right\",\n      children: [communityOwner && /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"join-user-icon\",\n          title: \"\\uAC00\\uC785\\uC2E0\\uCCAD\\uBAA9\\uB85D\",\n          onClick: joinUserModalTrigger,\n          children: [/*#__PURE__*/_jsx(UserOutlined, {}), singleCommunity.JoinUsers.length > 0 && /*#__PURE__*/_jsx(\"div\", {\n            className: \"user-icon-badge\",\n            children: singleCommunity.JoinUsers.length\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"button-container\",\n          children: [/*#__PURE__*/_jsx(\"button\", {\n            title: \"\\uC218\\uC815\\uD558\\uAE30\",\n            className: \"modify-button\",\n            onClick: communityModifyModalTrigger\n          }), /*#__PURE__*/_jsx(\"button\", {\n            title: \"\\uC0AD\\uC81C\\uD558\\uAE30\",\n            className: \"remove-button\",\n            onClick: onClickRemoveButton\n          })]\n        })]\n      }), communityOwner ? null : communityUser ? /*#__PURE__*/_jsx(\"button\", {\n        onClick: onClickLeaveButton,\n        className: \"leave-button\",\n        children: \"\\uD0C8\\uD1F4\\uD558\\uAE30\"\n      }) : joinUser ? /*#__PURE__*/_jsx(\"button\", {\n        className: \"wait-button\",\n        children: \"\\uAC00\\uC785\\uB300\\uAE30\"\n      }) : /*#__PURE__*/_jsx(\"button\", {\n        onClick: onClickJoinButton,\n        className: \"join-button\",\n        children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n      })]\n    }), joinUserModal && /*#__PURE__*/_jsx(JoinUserModal, {\n      setJoinUserModal: setJoinUserModal,\n      singleCommunity: singleCommunity\n    }), showCommunityModifyModal && /*#__PURE__*/_jsx(CommunityModifyModal, {\n      setShowCommunityModifyModal: setShowCommunityModifyModal\n    })]\n  });\n}\n\nexport default CommunityHeader;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/frontend/react/next/community/front/components/CommunityHeader/index.tsx"],"names":["UserOutlined","joinCommunityRequestAction","leaveCommunityRequestAction","removeCommunityRequestAction","Router","dynamic","React","useCallback","useEffect","useState","useDispatch","useSelector","HeaderContainer","JoinUserModal","CommunityModifyModal","CommunityHeader","singleCommunity","me","communityUser","dispatch","joinCommunityDone","changeCommunityInfoDone","removeCommunityDone","state","community","joinUserModal","setJoinUserModal","showCommunityModifyModal","setShowCommunityModifyModal","communityOwner","id","OwnerId","joinUser","JoinUsers","find","user","communityModifyModalTrigger","prev","onClickJoinButton","confirm","push","communityId","onClickLeaveButton","onClickRemoveButton","joinUserModalTrigger","alert","profilePhoto","communityName","country","length"],"mappings":"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","sourcesContent":["import { UserOutlined } from '@ant-design/icons';\nimport {\n  joinCommunityRequestAction,\n  leaveCommunityRequestAction,\n  removeCommunityRequestAction,\n} from 'actions/actionCommunity';\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { HeaderContainer } from './styles';\n\nconst JoinUserModal = dynamic(() => import('components/Modals/JoinUserModal'));\nconst CommunityModifyModal = dynamic(\n  () => import('components/Modals/CommunityModifyModal')\n);\ninterface CommunityHeaderProps {\n  singleCommunity: ICommunity;\n  me: IUser | null;\n  communityUser: IUserInfo | undefined;\n}\n\nfunction CommunityHeader({ singleCommunity, me, communityUser }: CommunityHeaderProps) {\n  const dispatch = useDispatch();\n  const { joinCommunityDone, changeCommunityInfoDone, removeCommunityDone } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n  const [joinUserModal, setJoinUserModal] = useState(false);\n  const [showCommunityModifyModal, setShowCommunityModifyModal] = useState(false);\n  const communityOwner = me?.id === singleCommunity?.OwnerId;\n  const joinUser = singleCommunity.JoinUsers.find(user => user.id === me?.id);\n\n  const communityModifyModalTrigger = useCallback(() => {\n    if (communityOwner) {\n      setShowCommunityModifyModal(prev => !prev);\n    }\n  }, [setShowCommunityModifyModal, communityOwner]);\n\n  const onClickJoinButton = useCallback(() => {\n    if (!me) {\n      if (confirm('로그인한 유저만 가능합니다. 로그인하시겠습니까?')) {\n        return Router.push('/login');\n      }\n    } else if (!communityUser && confirm('커뮤니티 가입신청을 하시겠습니까?')) {\n      return dispatch(joinCommunityRequestAction({ communityId: singleCommunity.id }));\n    }\n  }, [singleCommunity, me, communityUser]);\n\n  const onClickLeaveButton = useCallback(async () => {\n    if (communityUser && confirm('커뮤니티를 탈퇴하시겠습니까?')) {\n      return dispatch(\n        leaveCommunityRequestAction({\n          communityId: singleCommunity.id,\n        })\n      );\n    }\n  }, [singleCommunity, communityUser]);\n\n  const onClickRemoveButton = useCallback(async () => {\n    if (communityOwner && confirm('커뮤니티를 삭제하시겠습니까?')) {\n      return dispatch(removeCommunityRequestAction({ communityId: singleCommunity.id }));\n    }\n  }, [communityOwner, singleCommunity]);\n\n  const joinUserModalTrigger = useCallback(() => {\n    setJoinUserModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (removeCommunityDone) {\n      Router.push('/');\n    }\n  }, [removeCommunityDone]);\n\n  useEffect(() => {\n    if (joinCommunityDone) {\n      alert('커뮤니티 가입신청이 완료되었습니다');\n    }\n  }, [joinCommunityDone]);\n\n  useEffect(() => {\n    if (changeCommunityInfoDone) {\n      setShowCommunityModifyModal(false);\n    }\n  }, [changeCommunityInfoDone]);\n\n  return (\n    <HeaderContainer>\n      <div className=\"header-left\">\n        <div className=\"header-image\">\n          {singleCommunity.profilePhoto ? (\n            <img\n              src={singleCommunity.profilePhoto}\n              width=\"150\"\n              height=\"150\"\n              alt=\"profile-image\"\n            />\n          ) : (\n            <UserOutlined className=\"header-icon\" />\n          )}\n        </div>\n        <div className=\"header-text\">\n          <p>커뮤니티정보</p>\n          <h1>{singleCommunity.communityName}</h1>\n          <h2>{singleCommunity.country}</h2>\n        </div>\n      </div>\n      <div className=\"header-right\">\n        {communityOwner && (\n          <>\n            <div\n              className=\"join-user-icon\"\n              title=\"가입신청목록\"\n              onClick={joinUserModalTrigger}\n            >\n              <UserOutlined />\n              {singleCommunity.JoinUsers.length > 0 && (\n                <div className=\"user-icon-badge\">{singleCommunity.JoinUsers.length}</div>\n              )}\n            </div>\n            <div className=\"button-container\">\n              <button\n                title=\"수정하기\"\n                className=\"modify-button\"\n                onClick={communityModifyModalTrigger}\n              ></button>\n              <button\n                title=\"삭제하기\"\n                className=\"remove-button\"\n                onClick={onClickRemoveButton}\n              ></button>\n            </div>\n          </>\n        )}\n        {communityOwner ? null : communityUser ? (\n          <button onClick={onClickLeaveButton} className=\"leave-button\">\n            탈퇴하기\n          </button>\n        ) : joinUser ? (\n          <button className=\"wait-button\">가입대기</button>\n        ) : (\n          <button onClick={onClickJoinButton} className=\"join-button\">\n            가입하기\n          </button>\n        )}\n      </div>\n      {joinUserModal && (\n        <JoinUserModal\n          setJoinUserModal={setJoinUserModal}\n          singleCommunity={singleCommunity}\n        />\n      )}\n\n      {showCommunityModifyModal && (\n        <CommunityModifyModal setShowCommunityModifyModal={setShowCommunityModifyModal} />\n      )}\n    </HeaderContainer>\n  );\n}\n\nexport default CommunityHeader;\n"]},"metadata":{},"sourceType":"module"}