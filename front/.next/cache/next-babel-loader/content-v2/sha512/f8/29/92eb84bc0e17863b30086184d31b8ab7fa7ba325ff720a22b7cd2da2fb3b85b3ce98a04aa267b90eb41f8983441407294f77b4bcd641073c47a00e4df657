{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _slicedToArray from \"C:/Users/wlsdn/Desktop/frontend/react/next/community/front/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Form } from 'antd';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\nimport useInput from 'hooks/useInput';\nimport { changeProfileRequestAction } from 'actions/actionUser';\nvar ImageInsert = dynamic(function () {\n  return import('components/ImageInsert');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/ImageInsert')];\n    },\n    modules: ['components/ImageInsert']\n  }\n});\nvar CategoryList = dynamic(function () {\n  return import('components/CategoryList');\n}, {\n  loadableGenerated: {\n    webpack: function webpack() {\n      return [require.resolveWeak('components/CategoryList')];\n    },\n    modules: ['components/CategoryList']\n  }\n});\n\nfunction UserProfileModifyModal(_ref) {\n  var _me$Categories;\n\n  var setUserProfileModifyModal = _ref.setUserProfileModifyModal;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      imagePath = _useSelector.imagePath;\n\n  var _useInput = useInput((me === null || me === void 0 ? void 0 : me.nickname) || ''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      newNickname = _useInput2[0],\n      onChangeNewNickname = _useInput2[1];\n\n  var mainCategories = useSelector(function (state) {\n    return state.community.mainCategories;\n  });\n\n  var _useState = useState((me === null || me === void 0 ? void 0 : (_me$Categories = me.Categories) === null || _me$Categories === void 0 ? void 0 : _me$Categories.map(function (v) {\n    return v.name;\n  })) || []),\n      categories = _useState[0],\n      setCategories = _useState[1];\n\n  var onCloseUserProfileModifyModal = useCallback(function () {\n    setUserProfileModifyModal(false);\n  }, []);\n  var onSubmit = useCallback(function () {\n    if (confirm('정보를 수정하시겠습니까?')) {\n      setTimeout(function () {\n        return dispatch(changeProfileRequestAction({\n          nickname: newNickname,\n          profilePhoto: imagePath,\n          category: categories\n        }));\n      }, 3000);\n    }\n  }, [imagePath, newNickname, categories]);\n  return /*#__PURE__*/_jsxs(ModalContainer, {\n    children: [/*#__PURE__*/_jsxs(ModalHeader, {\n      children: [/*#__PURE__*/_jsx(\"div\", {\n        className: \"modal-title\",\n        children: \"\\uD504\\uB85C\\uD544\\uC218\\uC815\"\n      }), /*#__PURE__*/_jsx(\"div\", {\n        className: \"close-btn\",\n        onClick: onCloseUserProfileModifyModal,\n        children: /*#__PURE__*/_jsx(CloseCircleOutlined, {})\n      })]\n    }), /*#__PURE__*/_jsx(ModalBody, {\n      children: /*#__PURE__*/_jsxs(Form, {\n        onFinish: onSubmit,\n        className: \"form\",\n        children: [/*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-profile\",\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"profile-img\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              children: \"\\uD504\\uB85C\\uD544\\uC0AC\\uC9C4\"\n            }), /*#__PURE__*/_jsx(ImageInsert, {\n              imagePath: imagePath,\n              profilePhoto: me === null || me === void 0 ? void 0 : me.profilePhoto\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            className: \"profile-nickname\",\n            children: [/*#__PURE__*/_jsx(\"label\", {\n              htmlFor: \"nickname\",\n              children: \"\\uB2C9\\uB124\\uC784\"\n            }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n              id: \"nickname\",\n              type: \"text\",\n              value: newNickname,\n              onChange: onChangeNewNickname\n            })]\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          className: \"form-category\",\n          children: [/*#__PURE__*/_jsxs(\"label\", {\n            children: [\"\\uAD00\\uC2EC\\uC0AC\", /*#__PURE__*/_jsx(\"span\", {\n              children: \" (\\uCD5C\\uB300 5\\uAC1C\\uAE4C\\uC9C0 \\uC120\\uD0DD\\uAC00\\uB2A5\\uD569\\uB2C8\\uB2E4)\"\n            })]\n          }), /*#__PURE__*/_jsx(CategoryList, {\n            mainCategories: mainCategories,\n            categories: categories,\n            setCategories: setCategories\n          })]\n        }), /*#__PURE__*/_jsx(\"div\", {\n          className: \"create-btn\",\n          children: /*#__PURE__*/_jsx(Button, {\n            ghost: true,\n            htmlType: \"submit\",\n            children: \"\\uC218\\uC815\\uD558\\uAE30\"\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport default /*#__PURE__*/memo(UserProfileModifyModal);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/frontend/react/next/community/front/components/Modals/UserProfileModifyModal/index.tsx"],"names":["CloseCircleOutlined","Button","Form","dynamic","React","memo","useCallback","useState","useDispatch","useSelector","ModalContainer","ModalHeader","ModalBody","useInput","changeProfileRequestAction","ImageInsert","CategoryList","UserProfileModifyModal","setUserProfileModifyModal","dispatch","state","user","me","imagePath","nickname","newNickname","onChangeNewNickname","mainCategories","community","Categories","map","v","name","categories","setCategories","onCloseUserProfileModifyModal","onSubmit","confirm","setTimeout","profilePhoto","category"],"mappings":"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","sourcesContent":["import { CloseCircleOutlined } from '@ant-design/icons';\nimport { Button, Form } from 'antd';\nimport dynamic from 'next/dynamic';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport React, { Dispatch, memo, SetStateAction, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\nimport useInput from 'hooks/useInput';\nimport { changeProfileRequestAction } from 'actions/actionUser';\n\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\nconst CategoryList = dynamic(() => import('components/CategoryList'));\n\ninterface UserProfileModifyModalProps {\n  setUserProfileModifyModal: Dispatch<SetStateAction<boolean>>;\n}\n\nfunction UserProfileModifyModal({\n  setUserProfileModifyModal,\n}: UserProfileModifyModalProps) {\n  const dispatch = useDispatch();\n  const { me, imagePath } = useSelector((state: RootStateInterface) => state.user);\n  const [newNickname, onChangeNewNickname] = useInput<string>(me?.nickname || '');\n\n  const mainCategories = useSelector(\n    (state: RootStateInterface) => state.community.mainCategories\n  );\n\n  const [categories, setCategories] = useState<string[]>(\n    me?.Categories?.map(v => v.name) || []\n  );\n\n  const onCloseUserProfileModifyModal = useCallback(() => {\n    setUserProfileModifyModal(false);\n  }, []);\n\n  const onSubmit = useCallback(() => {\n    if (confirm('정보를 수정하시겠습니까?')) {\n      setTimeout(() => {\n        return dispatch(\n          changeProfileRequestAction({\n            nickname: newNickname,\n            profilePhoto: imagePath,\n            category: categories,\n          })\n        );\n      }, 3000);\n    }\n  }, [imagePath, newNickname, categories]);\n\n  return (\n    <ModalContainer>\n      <ModalHeader>\n        <div className=\"modal-title\">프로필수정</div>\n        <div className=\"close-btn\" onClick={onCloseUserProfileModifyModal}>\n          <CloseCircleOutlined />\n        </div>\n      </ModalHeader>\n      <ModalBody>\n        <Form onFinish={onSubmit} className=\"form\">\n          <div className=\"form-profile\">\n            <div className=\"profile-img\">\n              <label>프로필사진</label>\n              <ImageInsert imagePath={imagePath} profilePhoto={me?.profilePhoto} />\n            </div>\n            <div className=\"profile-nickname\">\n              <label htmlFor=\"nickname\">닉네임</label>\n              <br />\n              <input\n                id=\"nickname\"\n                type=\"text\"\n                value={newNickname}\n                onChange={onChangeNewNickname}\n              />\n            </div>\n          </div>\n          <div className=\"form-category\">\n            <label>\n              관심사<span> (최대 5개까지 선택가능합니다)</span>\n            </label>\n            <CategoryList\n              mainCategories={mainCategories}\n              categories={categories}\n              setCategories={setCategories}\n            />\n          </div>\n          <div className=\"create-btn\">\n            <Button ghost htmlType=\"submit\">\n              수정하기\n            </Button>\n          </div>\n        </Form>\n      </ModalBody>\n    </ModalContainer>\n  );\n}\n\nexport default memo(UserProfileModifyModal);\n"]},"metadata":{},"sourceType":"module"}