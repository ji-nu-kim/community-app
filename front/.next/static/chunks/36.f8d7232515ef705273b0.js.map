{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./components/Modals/ShowCommunityUserModal/styles.tsx","webpack://_N_E/./components/Modals/ShowCommunityUserModal/index.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","ModalExternal","styled","div","ModalContainer","ModalHeader","header","ColorAni","ModalBody","ShowCommunityUserModal","setShowCommunityUserModal","singleCommunity","closeShowCommunityUserModal","useCallback","onClick","e","stopPropagation","className","CloseCircleOutlined","Users","map","user","profilePhoto","width","height","src","alt","nickname","country"],"mappings":"sHAEe,EADW,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,2RAA8R,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,oLAAwL,KAAQ,eAAgB,MAAS,Y,YCKrrB,EAAsB,SAA6BA,EAAOC,GAC5D,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAoBC,YAAc,sBACN,iBAAiB,I,6FCXhCC,EAAgBC,IAAOC,IAAV,4EAAGD,CAAH,gEAUbE,EAAiBF,IAAOC,IAAV,6EAAGD,CAAH,uUAqBdG,EAAcH,IAAOI,OAAV,0EAAGJ,CAAH,8SAkBLK,KAKNC,EAAYN,IAAOC,IAAV,wEAAGD,CAAH,ksB,YCLPO,UA1Cf,YAGgC,IAF9BC,EAE8B,EAF9BA,0BACAC,EAC8B,EAD9BA,gBAEMC,EAA8BC,uBAAY,WAC9CH,GAA0B,KACzB,CAACA,IAEJ,OACE,cAACT,EAAD,CAAea,QAASF,EAAxB,SACE,eAACR,EAAD,CAAgBU,QAAS,SAAAC,GAAC,OAAIA,EAAEC,mBAAhC,UACE,eAACX,EAAD,WACE,qBAAKY,UAAU,cAAf,mDACA,qBAAKA,UAAU,YAAYH,QAASF,EAApC,SACE,cAACM,EAAA,EAAD,SAGJ,cAACV,EAAD,UACGG,EAAgBQ,MAAMC,KAAI,SAAAC,GAAI,OAC7B,sBAAKJ,UAAU,iBAAf,UACE,sBAAKA,UAAU,YAAf,UACGI,EAAKC,aACJ,qBACEC,MAAM,OACNC,OAAO,OACPC,IAAKJ,EAAKC,aACVI,IAAI,eAGN,qBAAKT,UAAU,aAAf,SAA6BI,EAAKM,SAAS,KAE7C,qBAAKV,UAAU,gBAAf,SAAgCI,EAAKM,cAEvC,qBAAKV,UAAU,eAAf,SAA+BI,EAAKO,YAdDP,EAAKM","file":"static/chunks/36.f8d7232515ef705273b0.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import styled from 'styled-components';\nimport { ColorAni } from '../../../utils/stylesUtil';\n\nexport const ModalExternal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  z-index: 1000;\n`;\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n  width: 600px;\n  height: 500px;\n  background: rgba(0, 0, 0, 0.7);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n\n  display: grid;\n  grid-template-rows: 44px auto;\n\n  label {\n    color: #e4e4e4;\n  }\n`;\n\nexport const ModalHeader = styled.header`\n  display: flex;\n  color: #e4e4e4;\n  font-weight: bold;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n  .modal-title {\n    margin-left: 1rem;\n  }\n  .close-btn {\n    margin-right: 1rem;\n    cursor: pointer;\n\n    :hover {\n      color: coral;\n      animation: ${ColorAni} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport const ModalBody = styled.div`\n  padding: 1rem;\n  display: flex;\n  flex-wrap: wrap;\n  align-content: flex-start;\n  overflow: auto;\n\n  .user-container {\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    border: 2px solid rgba(255, 255, 255, 0.3);\n    border-radius: 10px;\n    padding: 0.5rem;\n    margin-bottom: 1rem;\n    margin-right: 1rem;\n\n    :hover {\n      border: 2px solid #039be5;\n      background: rgba(0, 0, 0, 0.1);\n    }\n\n    .user-name {\n      padding: 0.25rem;\n      display: flex;\n      align-items: center;\n\n      img {\n        border-radius: 50%;\n        object-fit: cover;\n      }\n\n      .fake-image {\n        width: 24px;\n        height: 24px;\n        background: rgba(255, 255, 255, 0.5);\n        border-radius: 50%;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n        color: #fff;\n      }\n\n      .user-nickname {\n        margin-left: 4px;\n        font-weight: bold;\n        color: #b3b3b3;\n      }\n    }\n\n    .user-country {\n      padding: 0.25rem;\n      color: #039be5;\n      font-size: 0.75rem;\n    }\n  }\n`;\n","import React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport { ModalExternal, ModalContainer, ModalBody, ModalHeader } from './styles';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport { ICommunity } from 'interfaces/db';\n\ninterface ShowCommunityUserModalProps {\n  setShowCommunityUserModal: Dispatch<SetStateAction<boolean>>;\n  singleCommunity: ICommunity;\n}\n\nfunction ShowCommunityUserModal({\n  setShowCommunityUserModal,\n  singleCommunity,\n}: ShowCommunityUserModalProps) {\n  const closeShowCommunityUserModal = useCallback(() => {\n    setShowCommunityUserModal(false);\n  }, [setShowCommunityUserModal]);\n\n  return (\n    <ModalExternal onClick={closeShowCommunityUserModal}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <div className=\"modal-title\">커뮤니티 회원</div>\n          <div className=\"close-btn\" onClick={closeShowCommunityUserModal}>\n            <CloseCircleOutlined />\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          {singleCommunity.Users.map(user => (\n            <div className=\"user-container\" key={user.nickname}>\n              <div className=\"user-name\">\n                {user.profilePhoto ? (\n                  <img\n                    width=\"24px\"\n                    height=\"24px\"\n                    src={user.profilePhoto}\n                    alt=\"user-image\"\n                  />\n                ) : (\n                  <div className=\"fake-image\">{user.nickname[0]}</div>\n                )}\n                <div className=\"user-nickname\">{user.nickname}</div>\n              </div>\n              <div className=\"user-country\">{user.country}</div>\n            </div>\n          ))}\n        </ModalBody>\n      </ModalContainer>\n    </ModalExternal>\n  );\n}\n\nexport default ShowCommunityUserModal;\n"],"sourceRoot":""}