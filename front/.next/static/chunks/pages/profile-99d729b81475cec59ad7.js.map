{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?8898","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./interfaces/community/communityAction.interfaces.ts","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CameraOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CameraOutlined.js","webpack://_N_E/./components/ImageInsert/styles.tsx","webpack://_N_E/./components/ImageInsert/index.tsx","webpack://_N_E/./components/Cards/RoundStyleCard/styles.tsx","webpack://_N_E/./components/Cards/RoundStyleCard/index.tsx","webpack://_N_E/./actions/actionCommunity.ts","webpack://_N_E/./components/Layouts/ProfileLayout.tsx","webpack://_N_E/./components/Modals/UserProfileModifyModal/styles.tsx","webpack://_N_E/./components/CategoryList/styles.tsx","webpack://_N_E/./components/CategoryList/index.tsx","webpack://_N_E/./components/Modals/UserProfileModifyModal/index.tsx","webpack://_N_E/./pages/profile.tsx","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack://_N_E/./utils/stylesUtil.tsx"],"names":["window","__NEXT_P","push","props","ref","AntdIcon","Object","assign","icon","displayName","actionTypesCommunity","REMOVE_COMMUNITY_IMAGE","UPLOAD_COMMUNITY_IMAGE_REQUEST","UPLOAD_COMMUNITY_IMAGE_SUCCESS","UPLOAD_COMMUNITY_IMAGE_ERROR","CHANGE_COMMUNITY_INFO_REQUEST","CHANGE_COMMUNITY_INFO_SUCCESS","CHANGE_COMMUNITY_INFO_ERROR","ADD_COMMUNITY_REQUEST","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","REMOVE_COMMUNITY_REQUEST","REMOVE_COMMUNITY_SUCCESS","REMOVE_COMMUNITY_ERROR","JOIN_COMMUNITY_REQUEST","JOIN_COMMUNITY_SUCCESS","JOIN_COMMUNITY_ERROR","ACCEPT_COMMUNITY_REQUEST","ACCEPT_COMMUNITY_SUCCESS","ACCEPT_COMMUNITY_ERROR","REFUSE_COMMUNITY_REQUEST","REFUSE_COMMUNITY_SUCCESS","REFUSE_COMMUNITY_ERROR","LEAVE_COMMUNITY_REQUEST","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_ERROR","LOAD_COMMUNITY_REQUEST","LOAD_COMMUNITY_SUCCESS","LOAD_COMMUNITY_ERROR","LOAD_COMMUNITIES_REQUEST","LOAD_COMMUNITIES_SUCCESS","LOAD_COMMUNITIES_ERROR","SEARCH_COMMUNITIES_REQUEST","SEARCH_COMMUNITIES_SUCCESS","SEARCH_COMMUNITIES_ERROR","LOAD_COUNTRY_COMMUNITIES_REQUEST","LOAD_COUNTRY_COMMUNITIES_SUCCESS","LOAD_COUNTRY_COMMUNITIES_ERROR","LOAD_CATEGORY_COMMUNITIES_REQUEST","LOAD_CATEGORY_COMMUNITIES_SUCCESS","LOAD_CATEGORY_COMMUNITIES_ERROR","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_ERROR","LOAD_CATEGORIES_REQUEST","LOAD_CATEGORIES_SUCCESS","LOAD_CATEGORIES_ERROR","ADD_MEET_REQUEST","ADD_MEET_SUCCESS","ADD_MEET_ERROR","REMOVE_MEET_REQUEST","REMOVE_MEET_SUCCESS","REMOVE_MEET_ERROR","MODIFY_MEET_REQUEST","MODIFY_MEET_SUCCESS","MODIFY_MEET_ERROR","JOIN_MEET_REQUEST","JOIN_MEET_SUCCESS","JOIN_MEET_ERROR","LEAVE_MEET_REQUEST","LEAVE_MEET_SUCCESS","LEAVE_MEET_ERROR","ProfileImgContainer","styled","div","ImageInsert","imagePath","profilePhoto","router","useRouter","dispatch","useDispatch","imageInputRef","useRef","uploadImageDone","useSelector","state","user","uploadCommunityImageDone","community","onClickImageUpload","useCallback","route","split","current","click","onChangeImages","e","target","files","length","imageFormData","FormData","forEach","call","f","append","uploadImageRequestAction","uploadCommunityImageRequestAction","onRemoveImage","removeImage","removeCommunityImage","type","name","hidden","onChange","onClick","shape","className","width","height","src","process","alt","memo","btnRotateAni","keyframes","CardContainer","img","RoundStyleCard","data","changeCommunityInfoRequestAction","addCommunityRequestAction","removeCommunityRequestAction","joinCommunityRequestAction","acceptCommunityRequestAction","refuseCommunityRequestAction","leaveCommunityRequestAction","loadCountryCommunitiesRequestAction","loadCategoryCommunitiesRequestAction","addMeetRequestAction","removeMeetRequestAction","modifyMeetRequestAction","joinMeetRequestAction","leaveMeetRequestAction","ProfileContainer","ProfileHeader","ProfileContent","ProfileLayout","children","ModalContainer","ModalHeader","header","ColorAni","ModalBody","CheckBoxContainer","fieldset","CategoryList","mainCategories","setCategories","categories","onChangeCheckBox","checked","prev","filter","v","alert","map","category","includes","id","defaultChecked","htmlFor","UserProfileModifyModal","setUserProfileModifyModal","me","useInput","nickname","newNickname","onChangeNewNickname","useState","Categories","onCloseUserProfileModifyModal","onSubmit","changeProfileRequestAction","CloseCircleOutlined","onFinish","value","ghost","htmlType","Profile","changeProfileDone","userProfileModifyModal","showSearchAddressModal","setShowSearchAdressModal","modifyCountry","setModifyCountry","openSearchAddressModal","closeSearchAddressModal","profileModifyModalTrigger","useEffect","confirm","changeCountryRequestAction","country","Router","AppLayout","UserOutlined","href","Communities","communityName","SearchAddressModal","setCountry"],"mappings":"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","file":"static/chunks/pages/profile-99d729b81475cec59ad7.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/profile\",\n      function () {\n        return require(\"private-next-pages/profile.tsx\");\n      }\n    ]);\n  ","// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import { ICategory, ICommunity, IUser, IMeet } from '../db';\r\n\r\nexport const actionTypesCommunity = {\r\n  REMOVE_COMMUNITY_IMAGE: 'REMOVE_COMMUNITY_IMAGE', // 커뮤니티 프로필 미리보기 이미지 삭제\r\n  UPLOAD_COMMUNITY_IMAGE_REQUEST: 'UPLOAD_COMMUNITY_IMAGE_REQUEST', // 커뮤니티 프로필 미리보기 이미지 업로드\r\n  UPLOAD_COMMUNITY_IMAGE_SUCCESS: 'UPLOAD_COMMUNITY_IMAGE_SUCCESS',\r\n  UPLOAD_COMMUNITY_IMAGE_ERROR: 'UPLOAD_COMMUNITY_IMAGE_ERROR',\r\n  CHANGE_COMMUNITY_INFO_REQUEST: 'CHANGE_COMMUNITY_INFO_REQUEST', // 커뮤니티 정보 변경\r\n  CHANGE_COMMUNITY_INFO_SUCCESS: 'CHANGE_COMMUNITY_INFO_SUCCESS',\r\n  CHANGE_COMMUNITY_INFO_ERROR: 'CHANGE_COMMUNITY_INFO_ERROR',\r\n  ADD_COMMUNITY_REQUEST: 'ADD_COMMUNITY_REQUEST', // 커뮤니티 생성\r\n  ADD_COMMUNITY_SUCCESS: 'ADD_COMMUNITY_SUCCESS',\r\n  ADD_COMMUNITY_ERROR: 'ADD_COMMUNITY_ERROR',\r\n  REMOVE_COMMUNITY_REQUEST: 'REMOVE_COMMUNITY_REQUEST', // 커뮤니티 제거(유저가 없을 때만)\r\n  REMOVE_COMMUNITY_SUCCESS: 'REMOVE_COMMUNITY_SUCCESS',\r\n  REMOVE_COMMUNITY_ERROR: 'REMOVE_COMMUNITY_ERROR',\r\n  JOIN_COMMUNITY_REQUEST: 'JOIN_COMMUNITY_REQUEST:', // 커뮤니티 가입신청(임시 DB에 저장)\r\n  JOIN_COMMUNITY_SUCCESS: 'JOIN_COMMUNITY_SUCCESS:',\r\n  JOIN_COMMUNITY_ERROR: 'JOIN_COMMUNITY_ERROR:',\r\n  ACCEPT_COMMUNITY_REQUEST: 'ACCEPT_COMMUNITY_REQUEST', // 커뮤니티 가입승인(커뮤니티 DB에 저장)\r\n  ACCEPT_COMMUNITY_SUCCESS: 'ACCEPT_COMMUNITY_SUCCESS',\r\n  ACCEPT_COMMUNITY_ERROR: 'ACCEPT_COMMUNITY_ERROR',\r\n  REFUSE_COMMUNITY_REQUEST: 'REFUSE_COMMUNITY_REQUEST', // 커뮤니티 가입거절(임시 DB에서 삭제)\r\n  REFUSE_COMMUNITY_SUCCESS: 'REFUSE_COMMUNITY_SUCCESS',\r\n  REFUSE_COMMUNITY_ERROR: 'REFUSE_COMMUNITY_ERROR',\r\n  LEAVE_COMMUNITY_REQUEST: 'LEAVE_COMMUNITY_REQUEST', // 커뮤니티 탈퇴\r\n  LEAVE_COMMUNITY_SUCCESS: 'LEAVE_COMMUNITY_SUCCESS',\r\n  LEAVE_COMMUNITY_ERROR: 'LEAVE_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITY_REQUEST: 'LOAD_COMMUNITY_REQUEST', // 특정 커뮤니티 불러오기\r\n  LOAD_COMMUNITY_SUCCESS: 'LOAD_COMMUNITY_SUCCESS',\r\n  LOAD_COMMUNITY_ERROR: 'LOAD_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITIES_REQUEST: 'LOAD_COMMUNITIES_REQUEST', // 모든 커뮤니티 불러오기\r\n  LOAD_COMMUNITIES_SUCCESS: 'LOAD_COMMUNITIES_SUCCESS',\r\n  LOAD_COMMUNITIES_ERROR: 'LOAD_COMMUNITIES_ERROR',\r\n  SEARCH_COMMUNITIES_REQUEST: 'SEARCH_COMMUNITIES_REQUEST', // 커뮤니티 검색\r\n  SEARCH_COMMUNITIES_SUCCESS: 'SEARCH_COMMUNITIES_SUCCESS',\r\n  SEARCH_COMMUNITIES_ERROR: 'SEARCH_COMMUNITIES_ERROR',\r\n  LOAD_COUNTRY_COMMUNITIES_REQUEST: 'LOAD_COUNTRY_COMMUNITIES_REQUEST', // 해당 지역의 모든 커뮤니티 불러오기\r\n  LOAD_COUNTRY_COMMUNITIES_SUCCESS: 'LOAD_COUNTRY_COMMUNITIES_SUCCESS',\r\n  LOAD_COUNTRY_COMMUNITIES_ERROR: 'LOAD_COUNTRY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_COMMUNITIES_REQUEST: 'LOAD_CATEGORY_COMMUNITIES_REQUEST', // 해당 카테고리의 모든 커뮤니티 불러오기\r\n  LOAD_CATEGORY_COMMUNITIES_SUCCESS: 'LOAD_CATEGORY_COMMUNITIES_SUCCESS',\r\n  LOAD_CATEGORY_COMMUNITIES_ERROR: 'LOAD_CATEGORY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_REQUEST: 'LOAD_CATEGORY_REQUEST', // 특정 카테고리 불러오기\r\n  LOAD_CATEGORY_SUCCESS: 'LOAD_CATEGORY_SUCCESS',\r\n  LOAD_CATEGORY_ERROR: 'LOAD_CATEGORY_ERROR',\r\n  LOAD_CATEGORIES_REQUEST: 'LOAD_CATEGORIES_REQUEST', // 모든 카테고리 불러오기\r\n  LOAD_CATEGORIES_SUCCESS: 'LOAD_CATEGORIES_SUCCESS',\r\n  LOAD_CATEGORIES_ERROR: 'LOAD_CATEGORIES_ERROR',\r\n  ADD_MEET_REQUEST: 'ADD_MEET_REQUEST', // 모임 생성\r\n  ADD_MEET_SUCCESS: 'ADD_MEET_SUCCESS',\r\n  ADD_MEET_ERROR: 'ADD_MEET_ERROR',\r\n  REMOVE_MEET_REQUEST: 'REMOVE_MEET_REQUEST', // 모임 제거\r\n  REMOVE_MEET_SUCCESS: 'REMOVE_MEET_SUCCESS',\r\n  REMOVE_MEET_ERROR: 'REMOVE_MEET_ERROR',\r\n  MODIFY_MEET_REQUEST: 'MODIFY_MEET_REQUEST', // 모임 수정\r\n  MODIFY_MEET_SUCCESS: 'MODIFY_MEET_SUCCESS',\r\n  MODIFY_MEET_ERROR: 'MODIFY_MEET_ERROR',\r\n  JOIN_MEET_REQUEST: 'JOIN_MEET_REQUEST', // 모임 가입\r\n  JOIN_MEET_SUCCESS: 'JOIN_MEET_SUCCESS',\r\n  JOIN_MEET_ERROR: 'JOIN_MEET_ERROR',\r\n  LEAVE_MEET_REQUEST: 'LEAVE_MEET_REQUEST', // 모임 탈퇴\r\n  LEAVE_MEET_SUCCESS: 'LEAVE_MEET_SUCCESS',\r\n  LEAVE_MEET_ERROR: 'LEAVE_MEET_ERROR',\r\n} as const;\r\n\r\nexport interface IRemoveCommunityImage {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_IMAGE;\r\n}\r\nexport interface IUploadCommunityImageRequest {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST;\r\n  data: FormData;\r\n}\r\nexport interface IUploadCommunityImageSuccess {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_SUCCESS;\r\n  data: string[];\r\n}\r\nexport interface IUploadCommunityImageError {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IChangeCommunityInfoData {\r\n  communityId: number;\r\n  profilePhoto: string[];\r\n  description: string;\r\n  caution: string;\r\n  requirement: string;\r\n}\r\nexport interface IChangeCommunityInfoRequest {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST;\r\n  data: IChangeCommunityInfoData;\r\n}\r\nexport interface IChangeCommunityInfoSuccess {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_SUCCESS;\r\n  data: {\r\n    description: string;\r\n    caution: string;\r\n    requirement: string;\r\n    profilePhoto: string;\r\n  };\r\n}\r\nexport interface IChangeCommunityInfoError {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ICommunityData {\r\n  communityName: string;\r\n  description: string;\r\n  country: string;\r\n  category: string;\r\n}\r\nexport interface IAddCommunityRequest {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_REQUEST;\r\n  data: ICommunityData;\r\n}\r\nexport interface IAddCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IAddCommunityError {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveCommunityRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IRemoveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IRemoveCommunityError {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinCommunityRequest {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IJoinCommunitySuccess {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IJoinCommunityError {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAcceptCommunityRequest {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number; title: string };\r\n}\r\nexport interface IAcceptCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IAcceptCommunityError {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRefuseCommunityRequest {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface IRefuseCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_SUCCESS;\r\n  data: { userId: number };\r\n}\r\nexport interface IRefuseCommunityError {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveCommunityRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILeaveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_SUCCESS;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface ILeaveCommunityError {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunityRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILoadCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_SUCCESS;\r\n  data: ICommunity;\r\n}\r\nexport interface ILoadCommunityError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_REQUEST;\r\n}\r\nexport interface ILoadCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ISearchCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST;\r\n  data: { keyword: string };\r\n}\r\nexport interface ISearchCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ISearchCommunitiesError {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCountryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST;\r\n  data: { country: string; communityId: number };\r\n}\r\nexport interface ILoadCountryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCountryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST;\r\n  data: { categoryId: number; communityId: number };\r\n}\r\nexport interface ILoadCategoryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCategoryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_REQUEST;\r\n  data: { categoryId: number };\r\n}\r\nexport interface ILoadCategorySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_SUCCESS;\r\n  data: { category: ICategory; communityLength: number };\r\n}\r\nexport interface ILoadCategoryError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoriesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_REQUEST;\r\n}\r\nexport interface ILoadCategoriesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_SUCCESS;\r\n  data: ICategory[];\r\n}\r\nexport interface ILoadCategoriesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAddMeetData {\r\n  place: string;\r\n  fee: number;\r\n  members: number;\r\n  date: string;\r\n  title: string;\r\n  communityId: number;\r\n}\r\nexport interface IAddMeetRequest {\r\n  type: typeof actionTypesCommunity.ADD_MEET_REQUEST;\r\n  data: IAddMeetData;\r\n}\r\nexport interface IAddMeetSuccess {\r\n  type: typeof actionTypesCommunity.ADD_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IAddMeetError {\r\n  type: typeof actionTypesCommunity.ADD_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveMeetRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IRemoveMeetSuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_SUCCESS;\r\n  data: { meetId: number };\r\n}\r\nexport interface IRemoveMeetError {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IModifyMeetData extends IAddMeetData {\r\n  meetId: number;\r\n}\r\nexport interface IModifyMeetRequest {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_REQUEST;\r\n  data: IModifyMeetData;\r\n}\r\nexport interface IModifyMeetSuccess {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IModifyMeetError {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinMeetRequest {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IJoinMeetSuccess {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IJoinMeetError {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveMeetRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface ILeaveMeetSuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_SUCCESS;\r\n  data: { meetId: number; userId: number };\r\n}\r\nexport interface ILeaveMeetError {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\n\r\nexport type ActionsCommunity =\r\n  | IRemoveCommunityImage\r\n  | IUploadCommunityImageRequest\r\n  | IUploadCommunityImageSuccess\r\n  | IUploadCommunityImageError\r\n  | IChangeCommunityInfoRequest\r\n  | IChangeCommunityInfoSuccess\r\n  | IChangeCommunityInfoError\r\n  | IAddCommunityRequest\r\n  | IAddCommunitySuccess\r\n  | IAddCommunityError\r\n  | IRemoveCommunityRequest\r\n  | IRemoveCommunitySuccess\r\n  | IRemoveCommunityError\r\n  | IJoinCommunityRequest\r\n  | IJoinCommunitySuccess\r\n  | IJoinCommunityError\r\n  | IAcceptCommunityRequest\r\n  | IAcceptCommunitySuccess\r\n  | IAcceptCommunityError\r\n  | IRefuseCommunityRequest\r\n  | IRefuseCommunitySuccess\r\n  | IRefuseCommunityError\r\n  | ILeaveCommunityRequest\r\n  | ILeaveCommunitySuccess\r\n  | ILeaveCommunityError\r\n  | ILoadCommunityRequest\r\n  | ILoadCommunitySuccess\r\n  | ILoadCommunityError\r\n  | ILoadCommunitiesRequest\r\n  | ILoadCommunitiesSuccess\r\n  | ILoadCommunitiesError\r\n  | ISearchCommunitiesRequest\r\n  | ISearchCommunitiesSuccess\r\n  | ISearchCommunitiesError\r\n  | ILoadCountryCommunitiesRequest\r\n  | ILoadCountryCommunitiesSuccess\r\n  | ILoadCountryCommunitiesError\r\n  | ILoadCategoryCommunitiesRequest\r\n  | ILoadCategoryCommunitiesSuccess\r\n  | ILoadCategoryCommunitiesError\r\n  | ILoadCategoryRequest\r\n  | ILoadCategorySuccess\r\n  | ILoadCategoryError\r\n  | ILoadCategoriesRequest\r\n  | ILoadCategoriesSuccess\r\n  | ILoadCategoriesError\r\n  | IAddMeetRequest\r\n  | IAddMeetSuccess\r\n  | IAddMeetError\r\n  | IRemoveMeetRequest\r\n  | IRemoveMeetSuccess\r\n  | IRemoveMeetError\r\n  | IModifyMeetRequest\r\n  | IModifyMeetSuccess\r\n  | IModifyMeetError\r\n  | IJoinMeetRequest\r\n  | IJoinMeetSuccess\r\n  | IJoinMeetError\r\n  | ILeaveMeetRequest\r\n  | ILeaveMeetSuccess\r\n  | ILeaveMeetError;\r\n","// This icon file is generated automatically.\nvar CameraOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 248H728l-32.4-90.8a32.07 32.07 0 00-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 248H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V328c0-44.2-35.8-80-80-80zm8 536c0 4.4-3.6 8-8 8H160c-4.4 0-8-3.6-8-8V328c0-4.4 3.6-8 8-8h186.7l17.1-47.8 22.9-64.2h250.5l22.9 64.2 17.1 47.8H864c4.4 0 8 3.6 8 8v456zM512 384c-88.4 0-160 71.6-160 160s71.6 160 160 160 160-71.6 160-160-71.6-160-160-160zm0 256c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\" } }] }, \"name\": \"camera\", \"theme\": \"outlined\" };\nexport default CameraOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CameraOutlinedSvg from \"@ant-design/icons-svg/es/asn/CameraOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CameraOutlined = function CameraOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CameraOutlinedSvg\n  }));\n};\n\nCameraOutlined.displayName = 'CameraOutlined';\nexport default /*#__PURE__*/React.forwardRef(CameraOutlined);","import styled from 'styled-components';\r\n\r\nexport const ProfileImgContainer = styled.div`\r\n  position: relative;\r\n\r\n  img {\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: -1px;\r\n    left: -1px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .img-input-btn {\r\n    margin: 0.5rem 0;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 100px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n\r\n    .img-input-icon {\r\n      color: #cacaca;\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n\r\n  .img-delete-btn {\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: opacity 0.3s linear;\r\n    opacity: 0;\r\n\r\n    :hover {\r\n      opacity: 1;\r\n      transition: opacity 0.3s linear;\r\n    }\r\n  }\r\n`;\r\n","import React, { ChangeEvent, memo, useCallback, useRef } from 'react';\r\nimport { CameraOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { removeImage, uploadImageRequestAction } from 'actions/actionUser';\r\nimport { ProfileImgContainer } from './styles';\r\nimport { Button } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  removeCommunityImage,\r\n  uploadCommunityImageRequestAction,\r\n} from 'actions/actionCommunity';\r\n\r\ninterface ImageInsertProps {\r\n  imagePath: string[];\r\n  profilePhoto: string | undefined;\r\n}\r\n\r\nfunction ImageInsert({ imagePath, profilePhoto }: ImageInsertProps) {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const imageInputRef = useRef<HTMLInputElement>(null);\r\n  const { uploadImageDone } = useSelector((state: RootStateInterface) => state.user);\r\n  const { uploadCommunityImageDone } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (route === 'profile' && !uploadImageDone) {\r\n      imageInputRef.current?.click();\r\n    } else if (route === 'community' && !uploadCommunityImageDone) {\r\n      imageInputRef.current?.click();\r\n    }\r\n  }, [imageInputRef.current, uploadImageDone, uploadCommunityImageDone]);\r\n\r\n  const onChangeImages = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      const route = router.route.split('/')[1];\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, f => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      if (route === 'profile') {\r\n        return dispatch(uploadImageRequestAction(imageFormData));\r\n      } else if (route === 'community') {\r\n        return dispatch(uploadCommunityImageRequestAction(imageFormData));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (imagePath.length) {\r\n      if (route === 'profile') {\r\n        return dispatch(removeImage());\r\n      } else if (route === 'community') {\r\n        return dispatch(removeCommunityImage());\r\n      }\r\n    }\r\n  }, [imagePath]);\r\n\r\n  return (\r\n    <ProfileImgContainer>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          hidden\r\n          ref={imageInputRef}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload} shape=\"circle\" className=\"img-input-btn\">\r\n          {imagePath.length ? (\r\n            <>\r\n              <img\r\n                width=\"100\"\r\n                height=\"100\"\r\n                src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${imagePath[0]}`}\r\n                alt=\"profileimage\"\r\n              />\r\n              <div onClick={onRemoveImage} className=\"img-delete-btn\">\r\n                지우기\r\n              </div>\r\n            </>\r\n          ) : profilePhoto ? (\r\n            <img\r\n              width=\"100\"\r\n              height=\"100\"\r\n              src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${profilePhoto}`}\r\n              alt=\"profileimage\"\r\n            />\r\n          ) : (\r\n            <CameraOutlined className=\"img-input-icon\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </ProfileImgContainer>\r\n  );\r\n}\r\n\r\nexport default memo(ImageInsert);\r\n","import styled, { keyframes } from 'styled-components';\r\n\r\ninterface ICategoryCard {\r\n  img: string | null;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nconst btnRotateAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n\r\nexport const CardContainer = styled.div`\r\n  background-image: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\r\n    url(${(props: ICategoryCard) => props.img && props.img});\r\n  background-position: center;\r\n  background-repeat: no-repeat;\r\n  background-size: cover;\r\n  min-width: ${(props: ICategoryCard) => props.width}px;\r\n  min-height: ${(props: ICategoryCard) => props.height}px;\r\n  border-radius: 10px;\r\n  box-shadow: 0 4px 16px 0 rgba(31, 38, 135, 0.37);\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  :hover {\r\n    background-image: linear-gradient(rgba(0, 0, 0, 0.1), rgba(0, 0, 0, 0.1)),\r\n      url(${(props: ICategoryCard) => props.img && props.img});\r\n\r\n    h2 {\r\n      color: coral;\r\n      animation: ${btnRotateAni} 1s linear infinite;\r\n    }\r\n  }\r\n\r\n  h2 {\r\n    z-index: 10;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 1.5rem;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { CardContainer } from './styles';\r\n\r\ninterface RoundStyleCardProps {\r\n  name: string;\r\n  img: string | null;\r\n  width: string;\r\n  height: string;\r\n}\r\n\r\nfunction RoundStyleCard({ name, img, width, height }: RoundStyleCardProps) {\r\n  return (\r\n    <CardContainer img={img} width={width} height={height}>\r\n      <h2>{name}</h2>\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default RoundStyleCard;\r\n","import {\r\n  actionTypesCommunity,\r\n  IRemoveCommunityImage,\r\n  IUploadCommunityImageRequest,\r\n  IChangeCommunityInfoData,\r\n  IChangeCommunityInfoRequest,\r\n  IAddCommunityRequest,\r\n  IRemoveCommunityRequest,\r\n  IJoinCommunityRequest,\r\n  IAcceptCommunityRequest,\r\n  IRefuseCommunityRequest,\r\n  ILeaveCommunityRequest,\r\n  ILoadCommunityRequest,\r\n  ILoadCommunitiesRequest,\r\n  ISearchCommunitiesRequest,\r\n  ILoadCountryCommunitiesRequest,\r\n  ILoadCategoryCommunitiesRequest,\r\n  ILoadCategoryRequest,\r\n  ILoadCategoriesRequest,\r\n  IAddMeetRequest,\r\n  IRemoveMeetRequest,\r\n  IModifyMeetRequest,\r\n  IJoinMeetRequest,\r\n  ILeaveMeetRequest,\r\n  IAddMeetData,\r\n  IModifyMeetData,\r\n  ICommunityData,\r\n} from '../interfaces/community/communityAction.interfaces';\r\n\r\nexport const removeCommunityImage = (): IRemoveCommunityImage => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_IMAGE,\r\n  };\r\n};\r\nexport const uploadCommunityImageRequestAction = (\r\n  data: FormData\r\n): IUploadCommunityImageRequest => {\r\n  return {\r\n    type: actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const changeCommunityInfoRequestAction = (\r\n  data: IChangeCommunityInfoData\r\n): IChangeCommunityInfoRequest => {\r\n  return {\r\n    type: actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const addCommunityRequestAction = (data: ICommunityData): IAddCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IRemoveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IJoinCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const acceptCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n  title: string;\r\n}): IAcceptCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const refuseCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n}): IRefuseCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REFUSE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILeaveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILoadCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunitiesRequestAction = (): ILoadCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITIES_REQUEST,\r\n  };\r\n};\r\nexport const searchCommunitiesRequestAction = (data: {\r\n  keyword: string;\r\n}): ISearchCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCountryCommunitiesRequestAction = (data: {\r\n  country: string;\r\n  communityId: number;\r\n}): ILoadCountryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoryCommunitiesRequestAction = (data: {\r\n  categoryId: number;\r\n  communityId: number;\r\n}): ILoadCategoryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loadCategoryRequestAction = (data: {\r\n  categoryId: number;\r\n}): ILoadCategoryRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoriesRequestAction = (): ILoadCategoriesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORIES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addMeetRequestAction = (data: IAddMeetData): IAddMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IRemoveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const modifyMeetRequestAction = (data: IModifyMeetData): IModifyMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.MODIFY_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IJoinMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): ILeaveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\n","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ProfileLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ProfileHeader = styled.div`\r\n  padding: 1rem;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\r\n  display: grid;\r\n  grid-template-columns: auto 76px;\r\n\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    .header-image {\r\n      width: 150px;\r\n      height: 150px;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #cacaca;\r\n        font-size: 3rem;\r\n      }\r\n    }\r\n    .header-text {\r\n      margin-left: 1rem;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      p {\r\n        font-size: 0.75rem;\r\n        color: #039be5;\r\n        font-weight: bold;\r\n      }\r\n      h1 {\r\n        color: #fff;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n      }\r\n\r\n      .text-country {\r\n        cursor: pointer;\r\n        color: #cdcedf;\r\n        font-size: 0.8rem;\r\n        font-weight: bold;\r\n\r\n        :hover {\r\n          color: #039be5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    button {\r\n      border: none;\r\n      color: #fff;\r\n      background: #039be5;\r\n      height: 28px;\r\n      font-size: 0.75rem;\r\n\r\n      :hover {\r\n        cursor: pointer;\r\n        background: #007bb8;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProfileContent = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n  h1 {\r\n    font-family: 'Black Han Sans', sans-serif;\r\n    font-size: 2rem;\r\n    color: hotpink;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, auto));\r\n  }\r\n`;\r\n\r\nfunction ProfileLayout({ children }: ProfileLayoutProps) {\r\n  return <ProfileContainer>{children}</ProfileContainer>;\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import styled from 'styled-components';\r\nimport { ColorAni } from '../../../utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100;\r\n  width: 500px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-btn {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form {\r\n    display: grid;\r\n    grid-template-rows: repeat(3, auto);\r\n\r\n    .form-profile {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      margin-bottom: 1rem;\r\n      justify-items: flex-start;\r\n\r\n      .profile-nickname {\r\n        #nickname {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          padding-left: 4px;\r\n          color: #fff;\r\n          margin-top: 0.5rem;\r\n          height: 33px;\r\n          border: none;\r\n\r\n          :hover {\r\n            background: rgba(255, 255, 255, 0.2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-category {\r\n      margin-bottom: 1rem;\r\n      span {\r\n        font-size: 0.75rem;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .create-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const CheckBoxContainer = styled.fieldset`\r\n  margin: 0.5rem 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 85px);\r\n  grid-template-rows: auto;\r\n\r\n  div {\r\n    label {\r\n      color: #fff;\r\n      margin-left: 4px;\r\n      :hover {\r\n        color: coral;\r\n        animation: ${ColorAni} 0.5s infinite linear;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { ICategory } from 'interfaces/db';\r\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { CheckBoxContainer } from './styles';\r\n\r\ninterface CategoryListProps {\r\n  mainCategories: ICategory[];\r\n  setCategories: Dispatch<SetStateAction<string[]>>;\r\n  categories: string[];\r\n}\r\n\r\nfunction CategoryList({\r\n  mainCategories,\r\n  setCategories,\r\n  categories,\r\n}: CategoryListProps) {\r\n  const onChangeCheckBox = useCallback(\r\n    (name: string) => (e: any) => {\r\n      if (categories.length < 5) {\r\n        if (e.target.checked) {\r\n          setCategories(prev => [...prev, name]);\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      } else {\r\n        if (e.target.checked) {\r\n          alert('5개만 선택할 수 있습니다');\r\n          e.target.checked = false;\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      }\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  return (\r\n    <CheckBoxContainer>\r\n      {mainCategories &&\r\n        mainCategories.map(category => (\r\n          <div key={category.name}>\r\n            {categories.includes(category.name) ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n                defaultChecked\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n              />\r\n            )}\r\n            <label htmlFor={category.name}>{category.name}</label>\r\n          </div>\r\n        ))}\r\n    </CheckBoxContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Form } from 'antd';\r\nimport ImageInsert from 'components/ImageInsert';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport React, {\r\n  Dispatch,\r\n  memo,\r\n  SetStateAction,\r\n  useCallback,\r\n  useState,\r\n} from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\r\nimport useInput from 'hooks/useInput';\r\nimport CategoryList from 'components/CategoryList';\r\nimport { changeProfileRequestAction } from 'actions/actionUser';\r\n\r\ninterface UserProfileModifyModalProps {\r\n  setUserProfileModifyModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nfunction UserProfileModifyModal({\r\n  setUserProfileModifyModal,\r\n}: UserProfileModifyModalProps) {\r\n  const dispatch = useDispatch();\r\n  const { me, imagePath } = useSelector(\r\n    (state: RootStateInterface) => state.user\r\n  );\r\n  const [newNickname, onChangeNewNickname] = useInput<string>(\r\n    me?.nickname || ''\r\n  );\r\n\r\n  const mainCategories = useSelector(\r\n    (state: RootStateInterface) => state.community.mainCategories\r\n  );\r\n\r\n  const [categories, setCategories] = useState<string[]>(\r\n    me?.Categories?.map(v => v.name) || []\r\n  );\r\n\r\n  const onCloseUserProfileModifyModal = useCallback(() => {\r\n    setUserProfileModifyModal(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    dispatch(\r\n      changeProfileRequestAction({\r\n        nickname: newNickname,\r\n        profilePhoto: imagePath,\r\n        category: categories,\r\n      })\r\n    );\r\n  }, [imagePath, newNickname, categories]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">프로필수정</div>\r\n        <div className=\"close-btn\" onClick={onCloseUserProfileModifyModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form onFinish={onSubmit} className=\"form\">\r\n          <div className=\"form-profile\">\r\n            <div className=\"profile-img\">\r\n              <label>프로필사진</label>\r\n              <ImageInsert\r\n                imagePath={imagePath}\r\n                profilePhoto={me?.profilePhoto}\r\n              />\r\n            </div>\r\n            <div className=\"profile-nickname\">\r\n              <label htmlFor=\"nickname\">닉네임</label>\r\n              <br />\r\n              <input\r\n                id=\"nickname\"\r\n                type=\"text\"\r\n                value={newNickname}\r\n                onChange={onChangeNewNickname}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-category\">\r\n            <label>\r\n              관심사<span> (최대 5개까지 선택가능합니다)</span>\r\n            </label>\r\n            <CategoryList\r\n              mainCategories={mainCategories}\r\n              categories={categories}\r\n              setCategories={setCategories}\r\n            />\r\n          </div>\r\n          <div className=\"create-btn\">\r\n            <Button ghost htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(UserProfileModifyModal);\r\n","import AppLayout from '../components/Layouts/AppLayout';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport { GetServerSideProps } from 'next';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, {\n  ProfileContent,\n  ProfileHeader,\n} from 'components/Layouts/ProfileLayout';\nimport UserProfileModifyModal from 'components/Modals/UserProfileModifyModal';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\nimport SearchAddressModal from 'components/Modals/SearchAddressModal';\nimport Link from 'next/link';\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const { me, changeProfileDone } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userProfileModifyModal, setUserProfileModifyModal] = useState(false);\n  const [showSearchAddressModal, setShowSearchAdressModal] = useState(false);\n  const [modifyCountry, setModifyCountry] = useState('');\n\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({ country: modifyCountry }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  return (\n    <>\n      <Head>\n        <title>프로필 - community</title>\n      </Head>\n      <AppLayout>\n        <ProfileLayout>\n          <ProfileHeader>\n            <div className=\"header-left\">\n              <div className=\"header-image\">\n                {me?.profilePhoto ? (\n                  <img\n                    src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${me?.profilePhoto}`}\n                    width=\"150\"\n                    height=\"150\"\n                    alt=\"profile-image\"\n                  />\n                ) : (\n                  <UserOutlined className=\"header-icon\" />\n                )}\n              </div>\n              <div className=\"header-text\">\n                <p>프로필</p>\n                <h1>{me?.nickname}</h1>\n                <p className=\"text-country\" onClick={openSearchAddressModal}>\n                  {me?.country}\n                </p>\n              </div>\n            </div>\n            <div className=\"header-right\">\n              <button onClick={profileModifyModalTrigger}>수정하기</button>\n            </div>\n          </ProfileHeader>\n          <ProfileContent>\n            <div>\n              <h1>나의 카테고리 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Categories?.map(category => (\n                  <div key={category.name}>\n                    <Link href={`/category/${category.id}`}>\n                      <a>\n                        <RoundStyleCard\n                          name={category.name}\n                          img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h1>나의 커뮤니티 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Communities?.map(community => (\n                  <div key={community.communityName}>\n                    <Link href={`/community/${community.id}`}>\n                      <a>\n                        <RoundStyleCard\n                          name={community.communityName}\n                          img={\n                            community.profilePhoto\n                              ? `${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${community.profilePhoto}`\n                              : null\n                          }\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ProfileContent>\n        </ProfileLayout>\n\n        {userProfileModifyModal && (\n          <UserProfileModifyModal setUserProfileModifyModal={setUserProfileModifyModal} />\n        )}\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setModifyCountry}\n            type=\"village\"\n          />\n        )}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoriesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Profile);\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n"],"sourceRoot":""}