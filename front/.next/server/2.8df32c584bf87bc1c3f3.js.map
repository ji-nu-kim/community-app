{"version":3,"sources":["webpack:///./components/ImageInsert/styles.tsx","webpack:///./components/ImageInsert/index.tsx"],"names":["ProfileImgContainer","styled","div","ImageInsert","imagePath","profilePhoto","router","useRouter","dispatch","useDispatch","imageInputRef","useRef","uploadImageDone","useSelector","state","user","uploadCommunityImageDone","community","onClickImageUpload","useCallback","route","split","current","click","onChangeImages","e","target","files","length","imageFormData","FormData","forEach","call","f","append","uploadImageRequestAction","uploadCommunityImageRequestAction","onRemoveImage","removeImage","removeCommunityImage","replace","memo"],"mappings":"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","file":"2.8df32c584bf87bc1c3f3.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ProfileImgContainer = styled.div`\r\n  position: relative;\r\n\r\n  img {\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: -1px;\r\n    left: -1px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .img-input-btn {\r\n    margin: 0.5rem 0;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 100px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n\r\n    .img-input-icon {\r\n      color: #cacaca;\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n\r\n  .img-delete-btn {\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: opacity 0.3s linear;\r\n    opacity: 0;\r\n\r\n    :hover {\r\n      opacity: 1;\r\n      transition: opacity 0.3s linear;\r\n    }\r\n  }\r\n`;\r\n","import React, { ChangeEvent, memo, useCallback, useRef } from 'react';\r\nimport { CameraOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { removeImage, uploadImageRequestAction } from 'actions/actionUser';\r\nimport { ProfileImgContainer } from './styles';\r\nimport { Button } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  removeCommunityImage,\r\n  uploadCommunityImageRequestAction,\r\n} from 'actions/actionCommunity';\r\n\r\ninterface ImageInsertProps {\r\n  imagePath: string[];\r\n  profilePhoto: string | undefined;\r\n}\r\n\r\nfunction ImageInsert({ imagePath, profilePhoto }: ImageInsertProps) {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const imageInputRef = useRef<HTMLInputElement>(null);\r\n  const { uploadImageDone } = useSelector((state: RootStateInterface) => state.user);\r\n  const { uploadCommunityImageDone } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (route === 'profile' && !uploadImageDone) {\r\n      imageInputRef.current?.click();\r\n    } else if (route === 'community' && !uploadCommunityImageDone) {\r\n      imageInputRef.current?.click();\r\n    }\r\n  }, [imageInputRef.current, uploadImageDone, uploadCommunityImageDone]);\r\n\r\n  const onChangeImages = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      const route = router.route.split('/')[1];\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, f => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      if (route === 'profile') {\r\n        return dispatch(uploadImageRequestAction(imageFormData));\r\n      } else if (route === 'community') {\r\n        return dispatch(uploadCommunityImageRequestAction(imageFormData));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (imagePath.length) {\r\n      if (route === 'profile') {\r\n        return dispatch(removeImage());\r\n      } else if (route === 'community') {\r\n        return dispatch(removeCommunityImage());\r\n      }\r\n    }\r\n  }, [imagePath]);\r\n\r\n  return (\r\n    <ProfileImgContainer>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          hidden\r\n          ref={imageInputRef}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload} shape=\"circle\" className=\"img-input-btn\">\r\n          {imagePath.length ? (\r\n            <>\r\n              <img\r\n                width=\"100\"\r\n                height=\"100\"\r\n                src={imagePath[0].replace(/\\/resize\\//, 'original')}\r\n                alt=\"profileimage\"\r\n              />\r\n              <div onClick={onRemoveImage} className=\"img-delete-btn\">\r\n                지우기\r\n              </div>\r\n            </>\r\n          ) : profilePhoto ? (\r\n            <img width=\"100\" height=\"100\" src={profilePhoto} alt=\"profileimage\" />\r\n          ) : (\r\n            <CameraOutlined className=\"img-input-icon\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </ProfileImgContainer>\r\n  );\r\n}\r\n\r\nexport default memo(ImageInsert);\r\n"],"sourceRoot":""}