{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { loginRequestAction } from 'actions/actionUser';\nimport { Button } from 'antd';\nimport Form from 'antd/lib/form/Form';\nimport FormLayout, { ButtonContainer, InputContainer } from 'components/Layouts/FormLayout';\nimport useInput from 'hooks/useInput';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction login() {\n  const dispatch = useDispatch();\n  const {\n    me,\n    logInError,\n    logInDone,\n    logInLoading\n  } = useSelector(state => state.user);\n  const [email, onChangeEmail] = useInput('');\n  const [password, onChangePassword] = useInput('');\n  useEffect(() => {\n    if (me && me.id) {\n      Router.push('/');\n    }\n  }, [me]);\n  useEffect(() => {\n    if (logInDone) {\n      Router.push('/');\n    }\n  }, [logInDone]);\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n  const onSubmit = useCallback(() => {\n    dispatch(loginRequestAction({\n      email,\n      password\n    }));\n  }, [email, password]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"community - \\uB85C\\uADF8\\uC778\"\n      })\n    }), /*#__PURE__*/_jsxs(FormLayout, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }), /*#__PURE__*/_jsxs(Form, {\n        onFinish: onSubmit,\n        children: [/*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            name: \"user-email\",\n            value: email,\n            onChange: onChangeEmail,\n            type: \"email\",\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            name: \"user-password\",\n            value: password,\n            onChange: onChangePassword,\n            type: \"password\",\n            required: true\n          })]\n        }), /*#__PURE__*/_jsxs(ButtonContainer, {\n          children: [/*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            size: \"large\",\n            htmlType: \"submit\",\n            loading: logInLoading,\n            children: \"\\uB85C\\uADF8\\uC778\"\n          }), /*#__PURE__*/_jsx(Link, {\n            href: \"/signup\",\n            prefetch: false,\n            children: /*#__PURE__*/_jsx(\"a\", {\n              children: /*#__PURE__*/_jsx(Button, {\n                size: \"large\",\n                htmlType: \"submit\",\n                children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n              })\n            })\n          })]\n        })]\n      })]\n    })]\n  });\n}\n\nexport default login;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/pages/login.tsx"],"names":["loginRequestAction","Button","Form","FormLayout","ButtonContainer","InputContainer","useInput","Head","Link","Router","React","useCallback","useEffect","useDispatch","useSelector","login","dispatch","me","logInError","logInDone","logInLoading","state","user","email","onChangeEmail","password","onChangePassword","id","push","alert","onSubmit"],"mappings":";;;AAAA,SAASA,kBAAT,QAAmC,oBAAnC;AACA,SAASC,MAAT,QAAuB,MAAvB;AACA,OAAOC,IAAP,MAAiB,oBAAjB;AACA,OAAOC,UAAP,IACEC,eADF,EAEEC,cAFF,QAGO,+BAHP;AAIA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,IAAgBC,WAAhB,EAA6BC,SAA7B,QAA8C,OAA9C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;;AAEA,SAASC,KAAT,GAAiB;AACf,QAAMC,QAAQ,GAAGH,WAAW,EAA5B;AACA,QAAM;AAAEI,IAAAA,EAAF;AAAMC,IAAAA,UAAN;AAAkBC,IAAAA,SAAlB;AAA6BC,IAAAA;AAA7B,MAA8CN,WAAW,CAC5DO,KAAD,IAA+BA,KAAK,CAACC,IADwB,CAA/D;AAGA,QAAM,CAACC,KAAD,EAAQC,aAAR,IAAyBlB,QAAQ,CAAS,EAAT,CAAvC;AACA,QAAM,CAACmB,QAAD,EAAWC,gBAAX,IAA+BpB,QAAQ,CAAS,EAAT,CAA7C;AAEAM,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIK,EAAE,IAAIA,EAAE,CAACU,EAAb,EAAiB;AACflB,MAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACX,EAAD,CAJM,CAAT;AAMAL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIO,SAAJ,EAAe;AACbV,MAAAA,MAAM,CAACmB,IAAP,CAAY,GAAZ;AACD;AACF,GAJQ,EAIN,CAACT,SAAD,CAJM,CAAT;AAMAP,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,UAAJ,EAAgB;AACdW,MAAAA,KAAK,CAACX,UAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACA,UAAD,CAJM,CAAT;AAMA,QAAMY,QAAQ,GAAGnB,WAAW,CAAC,MAAM;AACjCK,IAAAA,QAAQ,CAAChB,kBAAkB,CAAC;AAAEuB,MAAAA,KAAF;AAASE,MAAAA;AAAT,KAAD,CAAnB,CAAR;AACD,GAF2B,EAEzB,CAACF,KAAD,EAAQE,QAAR,CAFyB,CAA5B;AAGA,sBACE;AAAA,4BACE,KAAC,IAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,eAIE,MAAC,UAAD;AAAA,8BACE;AAAA;AAAA,QADF,eAEE,MAAC,IAAD;AAAM,QAAA,QAAQ,EAAEK,QAAhB;AAAA,gCACE,MAAC,cAAD;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,OAAf;AAAA;AAAA,YADF,eAEE,cAFF,eAGE;AACE,YAAA,IAAI,EAAC,YADP;AAEE,YAAA,KAAK,EAAEP,KAFT;AAGE,YAAA,QAAQ,EAAEC,aAHZ;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,QAAQ;AALV,YAHF;AAAA,UADF,eAaE,MAAC,cAAD;AAAA,kCACE;AAAO,YAAA,OAAO,EAAC,UAAf;AAAA;AAAA,YADF,eAEE,cAFF,eAGE;AACE,YAAA,IAAI,EAAC,eADP;AAEE,YAAA,KAAK,EAAEC,QAFT;AAGE,YAAA,QAAQ,EAAEC,gBAHZ;AAIE,YAAA,IAAI,EAAC,UAJP;AAKE,YAAA,QAAQ;AALV,YAHF;AAAA,UAbF,eAyBE,MAAC,eAAD;AAAA,kCACE,KAAC,MAAD;AAAQ,YAAA,IAAI,EAAC,SAAb;AAAuB,YAAA,IAAI,EAAC,OAA5B;AAAoC,YAAA,QAAQ,EAAC,QAA7C;AAAsD,YAAA,OAAO,EAAEN,YAA/D;AAAA;AAAA,YADF,eAIE,KAAC,IAAD;AAAM,YAAA,IAAI,EAAC,SAAX;AAAqB,YAAA,QAAQ,EAAE,KAA/B;AAAA,mCACE;AAAA,qCACE,KAAC,MAAD;AAAQ,gBAAA,IAAI,EAAC,OAAb;AAAqB,gBAAA,QAAQ,EAAC,QAA9B;AAAA;AAAA;AADF;AADF,YAJF;AAAA,UAzBF;AAAA,QAFF;AAAA,MAJF;AAAA,IADF;AAgDD;;AAED,eAAeL,KAAf","sourcesContent":["import { loginRequestAction } from 'actions/actionUser';\nimport { Button } from 'antd';\nimport Form from 'antd/lib/form/Form';\nimport FormLayout, {\n  ButtonContainer,\n  InputContainer,\n} from 'components/Layouts/FormLayout';\nimport useInput from 'hooks/useInput';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport Head from 'next/head';\nimport Link from 'next/link';\nimport Router from 'next/router';\nimport React, { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nfunction login() {\n  const dispatch = useDispatch();\n  const { me, logInError, logInDone, logInLoading } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [email, onChangeEmail] = useInput<string>('');\n  const [password, onChangePassword] = useInput<string>('');\n\n  useEffect(() => {\n    if (me && me.id) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  useEffect(() => {\n    if (logInDone) {\n      Router.push('/');\n    }\n  }, [logInDone]);\n\n  useEffect(() => {\n    if (logInError) {\n      alert(logInError);\n    }\n  }, [logInError]);\n\n  const onSubmit = useCallback(() => {\n    dispatch(loginRequestAction({ email, password }));\n  }, [email, password]);\n  return (\n    <>\n      <Head>\n        <title>community - 로그인</title>\n      </Head>\n      <FormLayout>\n        <h1>로그인</h1>\n        <Form onFinish={onSubmit}>\n          <InputContainer>\n            <label htmlFor=\"email\">이메일</label>\n            <br />\n            <input\n              name=\"user-email\"\n              value={email}\n              onChange={onChangeEmail}\n              type=\"email\"\n              required\n            />\n          </InputContainer>\n\n          <InputContainer>\n            <label htmlFor=\"password\">비밀번호</label>\n            <br />\n            <input\n              name=\"user-password\"\n              value={password}\n              onChange={onChangePassword}\n              type=\"password\"\n              required\n            />\n          </InputContainer>\n\n          <ButtonContainer>\n            <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={logInLoading}>\n              로그인\n            </Button>\n            <Link href=\"/signup\" prefetch={false}>\n              <a>\n                <Button size=\"large\" htmlType=\"submit\">\n                  회원가입\n                </Button>\n              </a>\n            </Link>\n          </ButtonContainer>\n        </Form>\n      </FormLayout>\n    </>\n  );\n}\n\nexport default login;\n"]},"metadata":{},"sourceType":"module"}