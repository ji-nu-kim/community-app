{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/./components/Cards/BoxStyleCard/styles.tsx","webpack://_N_E/./components/Cards/BoxStyleCard/index.tsx","webpack://_N_E/./interfaces/community/communityAction.interfaces.ts","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/iterableToArray.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./actions/actionCommunity.ts","webpack://_N_E/./pages/category/.tsx","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/defineProperty.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?4e62","webpack://_N_E/./components/Layouts/CategoryLayout.tsx"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","CardContainer","styled","div","BoxStyleCard","profilePhoto","communityName","categoryName","country","width","height","src","process","alt","className","actionTypesCommunity","REMOVE_COMMUNITY_IMAGE","UPLOAD_COMMUNITY_IMAGE_REQUEST","UPLOAD_COMMUNITY_IMAGE_SUCCESS","UPLOAD_COMMUNITY_IMAGE_ERROR","CHANGE_COMMUNITY_INFO_REQUEST","CHANGE_COMMUNITY_INFO_SUCCESS","CHANGE_COMMUNITY_INFO_ERROR","ADD_COMMUNITY_REQUEST","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","REMOVE_COMMUNITY_REQUEST","REMOVE_COMMUNITY_SUCCESS","REMOVE_COMMUNITY_ERROR","JOIN_COMMUNITY_REQUEST","JOIN_COMMUNITY_SUCCESS","JOIN_COMMUNITY_ERROR","ACCEPT_COMMUNITY_REQUEST","ACCEPT_COMMUNITY_SUCCESS","ACCEPT_COMMUNITY_ERROR","REFUSE_COMMUNITY_REQUEST","REFUSE_COMMUNITY_SUCCESS","REFUSE_COMMUNITY_ERROR","LEAVE_COMMUNITY_REQUEST","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_ERROR","LOAD_COMMUNITY_REQUEST","LOAD_COMMUNITY_SUCCESS","LOAD_COMMUNITY_ERROR","LOAD_COMMUNITIES_REQUEST","LOAD_COMMUNITIES_SUCCESS","LOAD_COMMUNITIES_ERROR","SEARCH_COMMUNITIES_REQUEST","SEARCH_COMMUNITIES_SUCCESS","SEARCH_COMMUNITIES_ERROR","LOAD_COUNTRY_COMMUNITIES_REQUEST","LOAD_COUNTRY_COMMUNITIES_SUCCESS","LOAD_COUNTRY_COMMUNITIES_ERROR","LOAD_CATEGORY_COMMUNITIES_REQUEST","LOAD_CATEGORY_COMMUNITIES_SUCCESS","LOAD_CATEGORY_COMMUNITIES_ERROR","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_ERROR","LOAD_CATEGORIES_REQUEST","LOAD_CATEGORIES_SUCCESS","LOAD_CATEGORIES_ERROR","ADD_MEET_REQUEST","ADD_MEET_SUCCESS","ADD_MEET_ERROR","REMOVE_MEET_REQUEST","REMOVE_MEET_SUCCESS","REMOVE_MEET_ERROR","MODIFY_MEET_REQUEST","MODIFY_MEET_SUCCESS","MODIFY_MEET_ERROR","JOIN_MEET_REQUEST","JOIN_MEET_SUCCESS","JOIN_MEET_ERROR","LEAVE_MEET_REQUEST","LEAVE_MEET_SUCCESS","LEAVE_MEET_ERROR","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","props","keys","tags","metaTypes","metaCategories","h","isUnique","hasKey","key","i","len","metatype","category","categories","unique","c","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","module","exports","TypeError","iter","Symbol","iterator","Object","Array","from","arrayLikeToArray","arr","isArray","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","constructor","_hasHeadManager","emitChange","this","Component","removeCommunityImage","type","uploadCommunityImageRequestAction","data","changeCommunityInfoRequestAction","addCommunityRequestAction","removeCommunityRequestAction","joinCommunityRequestAction","acceptCommunityRequestAction","refuseCommunityRequestAction","leaveCommunityRequestAction","loadCountryCommunitiesRequestAction","loadCategoryCommunitiesRequestAction","addMeetRequestAction","removeMeetRequestAction","modifyMeetRequestAction","joinMeetRequestAction","leaveMeetRequestAction","Category","dispatch","useDispatch","router","useRouter","useSelector","state","community","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","singleCategory","communityLength","useEffect","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","categoryId","Number","query","id","lastId","communityId","addEventListener","removeEventListener","img","map","href","Categories","obj","value","defineProperty","enumerable","configurable","writable","__NEXT_P","push","CategoryContainer","CategoryHeader","CategoryContent","CategoryLayout","children"],"mappings":"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","file":"static/chunks/pages/category/[id]-ee38cdc0c965eace66c7.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  width: 240px;\r\n  height: 260px;\r\n  cursor: pointer;\r\n  background: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0.7));\r\n  box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.4);\r\n\r\n  :hover {\r\n    outline: 4px solid hotpink;\r\n  }\r\n\r\n  img {\r\n    filter: saturate(120%);\r\n    object-fit: cover;\r\n  }\r\n\r\n  .fake-image {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    height: 166px;\r\n  }\r\n\r\n  .card-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    .info-title {\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n    }\r\n    .info-country {\r\n      color: #aaabaf;\r\n      font-size: 0.75rem;\r\n    }\r\n    .info-category {\r\n      font-weight: bold;\r\n      color: #ff5edc;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { CardContainer } from './styles';\r\n\r\ninterface BoxStyleCardProps {\r\n  profilePhoto: string;\r\n  communityName: string;\r\n  categoryName: string;\r\n  country: string;\r\n}\r\n\r\nfunction BoxStyleCard({\r\n  profilePhoto,\r\n  communityName,\r\n  categoryName,\r\n  country,\r\n}: BoxStyleCardProps) {\r\n  return (\r\n    <CardContainer>\r\n      {profilePhoto ? (\r\n        <img\r\n          width=\"240\"\r\n          height=\"166\"\r\n          src={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${profilePhoto}`}\r\n          alt=\"사진\"\r\n        />\r\n      ) : (\r\n        <div className=\"fake-image\"></div>\r\n      )}\r\n      <div className=\"card-info\">\r\n        <div className=\"info-title\">{communityName}</div>\r\n        <p className=\"info-category\">{categoryName}</p>\r\n        <p className=\"info-country\">{country}</p>\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default BoxStyleCard;\r\n","import { ICategory, ICommunity, IUser, IMeet } from '../db';\r\n\r\nexport const actionTypesCommunity = {\r\n  REMOVE_COMMUNITY_IMAGE: 'REMOVE_COMMUNITY_IMAGE', // 커뮤니티 프로필 미리보기 이미지 삭제\r\n  UPLOAD_COMMUNITY_IMAGE_REQUEST: 'UPLOAD_COMMUNITY_IMAGE_REQUEST', // 커뮤니티 프로필 미리보기 이미지 업로드\r\n  UPLOAD_COMMUNITY_IMAGE_SUCCESS: 'UPLOAD_COMMUNITY_IMAGE_SUCCESS',\r\n  UPLOAD_COMMUNITY_IMAGE_ERROR: 'UPLOAD_COMMUNITY_IMAGE_ERROR',\r\n  CHANGE_COMMUNITY_INFO_REQUEST: 'CHANGE_COMMUNITY_INFO_REQUEST', // 커뮤니티 정보 변경\r\n  CHANGE_COMMUNITY_INFO_SUCCESS: 'CHANGE_COMMUNITY_INFO_SUCCESS',\r\n  CHANGE_COMMUNITY_INFO_ERROR: 'CHANGE_COMMUNITY_INFO_ERROR',\r\n  ADD_COMMUNITY_REQUEST: 'ADD_COMMUNITY_REQUEST', // 커뮤니티 생성\r\n  ADD_COMMUNITY_SUCCESS: 'ADD_COMMUNITY_SUCCESS',\r\n  ADD_COMMUNITY_ERROR: 'ADD_COMMUNITY_ERROR',\r\n  REMOVE_COMMUNITY_REQUEST: 'REMOVE_COMMUNITY_REQUEST', // 커뮤니티 제거(유저가 없을 때만)\r\n  REMOVE_COMMUNITY_SUCCESS: 'REMOVE_COMMUNITY_SUCCESS',\r\n  REMOVE_COMMUNITY_ERROR: 'REMOVE_COMMUNITY_ERROR',\r\n  JOIN_COMMUNITY_REQUEST: 'JOIN_COMMUNITY_REQUEST:', // 커뮤니티 가입신청(임시 DB에 저장)\r\n  JOIN_COMMUNITY_SUCCESS: 'JOIN_COMMUNITY_SUCCESS:',\r\n  JOIN_COMMUNITY_ERROR: 'JOIN_COMMUNITY_ERROR:',\r\n  ACCEPT_COMMUNITY_REQUEST: 'ACCEPT_COMMUNITY_REQUEST', // 커뮤니티 가입승인(커뮤니티 DB에 저장)\r\n  ACCEPT_COMMUNITY_SUCCESS: 'ACCEPT_COMMUNITY_SUCCESS',\r\n  ACCEPT_COMMUNITY_ERROR: 'ACCEPT_COMMUNITY_ERROR',\r\n  REFUSE_COMMUNITY_REQUEST: 'REFUSE_COMMUNITY_REQUEST', // 커뮤니티 가입거절(임시 DB에서 삭제)\r\n  REFUSE_COMMUNITY_SUCCESS: 'REFUSE_COMMUNITY_SUCCESS',\r\n  REFUSE_COMMUNITY_ERROR: 'REFUSE_COMMUNITY_ERROR',\r\n  LEAVE_COMMUNITY_REQUEST: 'LEAVE_COMMUNITY_REQUEST', // 커뮤니티 탈퇴\r\n  LEAVE_COMMUNITY_SUCCESS: 'LEAVE_COMMUNITY_SUCCESS',\r\n  LEAVE_COMMUNITY_ERROR: 'LEAVE_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITY_REQUEST: 'LOAD_COMMUNITY_REQUEST', // 특정 커뮤니티 불러오기\r\n  LOAD_COMMUNITY_SUCCESS: 'LOAD_COMMUNITY_SUCCESS',\r\n  LOAD_COMMUNITY_ERROR: 'LOAD_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITIES_REQUEST: 'LOAD_COMMUNITIES_REQUEST', // 모든 커뮤니티 불러오기\r\n  LOAD_COMMUNITIES_SUCCESS: 'LOAD_COMMUNITIES_SUCCESS',\r\n  LOAD_COMMUNITIES_ERROR: 'LOAD_COMMUNITIES_ERROR',\r\n  SEARCH_COMMUNITIES_REQUEST: 'SEARCH_COMMUNITIES_REQUEST', // 커뮤니티 검색\r\n  SEARCH_COMMUNITIES_SUCCESS: 'SEARCH_COMMUNITIES_SUCCESS',\r\n  SEARCH_COMMUNITIES_ERROR: 'SEARCH_COMMUNITIES_ERROR',\r\n  LOAD_COUNTRY_COMMUNITIES_REQUEST: 'LOAD_COUNTRY_COMMUNITIES_REQUEST', // 해당 지역의 모든 커뮤니티 불러오기\r\n  LOAD_COUNTRY_COMMUNITIES_SUCCESS: 'LOAD_COUNTRY_COMMUNITIES_SUCCESS',\r\n  LOAD_COUNTRY_COMMUNITIES_ERROR: 'LOAD_COUNTRY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_COMMUNITIES_REQUEST: 'LOAD_CATEGORY_COMMUNITIES_REQUEST', // 해당 카테고리의 모든 커뮤니티 불러오기\r\n  LOAD_CATEGORY_COMMUNITIES_SUCCESS: 'LOAD_CATEGORY_COMMUNITIES_SUCCESS',\r\n  LOAD_CATEGORY_COMMUNITIES_ERROR: 'LOAD_CATEGORY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_REQUEST: 'LOAD_CATEGORY_REQUEST', // 특정 카테고리 불러오기\r\n  LOAD_CATEGORY_SUCCESS: 'LOAD_CATEGORY_SUCCESS',\r\n  LOAD_CATEGORY_ERROR: 'LOAD_CATEGORY_ERROR',\r\n  LOAD_CATEGORIES_REQUEST: 'LOAD_CATEGORIES_REQUEST', // 모든 카테고리 불러오기\r\n  LOAD_CATEGORIES_SUCCESS: 'LOAD_CATEGORIES_SUCCESS',\r\n  LOAD_CATEGORIES_ERROR: 'LOAD_CATEGORIES_ERROR',\r\n  ADD_MEET_REQUEST: 'ADD_MEET_REQUEST', // 모임 생성\r\n  ADD_MEET_SUCCESS: 'ADD_MEET_SUCCESS',\r\n  ADD_MEET_ERROR: 'ADD_MEET_ERROR',\r\n  REMOVE_MEET_REQUEST: 'REMOVE_MEET_REQUEST', // 모임 제거\r\n  REMOVE_MEET_SUCCESS: 'REMOVE_MEET_SUCCESS',\r\n  REMOVE_MEET_ERROR: 'REMOVE_MEET_ERROR',\r\n  MODIFY_MEET_REQUEST: 'MODIFY_MEET_REQUEST', // 모임 수정\r\n  MODIFY_MEET_SUCCESS: 'MODIFY_MEET_SUCCESS',\r\n  MODIFY_MEET_ERROR: 'MODIFY_MEET_ERROR',\r\n  JOIN_MEET_REQUEST: 'JOIN_MEET_REQUEST', // 모임 가입\r\n  JOIN_MEET_SUCCESS: 'JOIN_MEET_SUCCESS',\r\n  JOIN_MEET_ERROR: 'JOIN_MEET_ERROR',\r\n  LEAVE_MEET_REQUEST: 'LEAVE_MEET_REQUEST', // 모임 탈퇴\r\n  LEAVE_MEET_SUCCESS: 'LEAVE_MEET_SUCCESS',\r\n  LEAVE_MEET_ERROR: 'LEAVE_MEET_ERROR',\r\n} as const;\r\n\r\nexport interface IRemoveCommunityImage {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_IMAGE;\r\n}\r\nexport interface IUploadCommunityImageRequest {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST;\r\n  data: FormData;\r\n}\r\nexport interface IUploadCommunityImageSuccess {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_SUCCESS;\r\n  data: string[];\r\n}\r\nexport interface IUploadCommunityImageError {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IChangeCommunityInfoData {\r\n  communityId: number;\r\n  profilePhoto: string[];\r\n  description: string;\r\n  caution: string;\r\n  requirement: string;\r\n}\r\nexport interface IChangeCommunityInfoRequest {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST;\r\n  data: IChangeCommunityInfoData;\r\n}\r\nexport interface IChangeCommunityInfoSuccess {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_SUCCESS;\r\n  data: {\r\n    description: string;\r\n    caution: string;\r\n    requirement: string;\r\n    profilePhoto: string;\r\n  };\r\n}\r\nexport interface IChangeCommunityInfoError {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ICommunityData {\r\n  communityName: string;\r\n  description: string;\r\n  country: string;\r\n  category: string;\r\n}\r\nexport interface IAddCommunityRequest {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_REQUEST;\r\n  data: ICommunityData;\r\n}\r\nexport interface IAddCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IAddCommunityError {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveCommunityRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IRemoveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IRemoveCommunityError {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinCommunityRequest {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IJoinCommunitySuccess {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IJoinCommunityError {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAcceptCommunityRequest {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number; title: string };\r\n}\r\nexport interface IAcceptCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IAcceptCommunityError {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRefuseCommunityRequest {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface IRefuseCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_SUCCESS;\r\n  data: { userId: number };\r\n}\r\nexport interface IRefuseCommunityError {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveCommunityRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILeaveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_SUCCESS;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface ILeaveCommunityError {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunityRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILoadCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_SUCCESS;\r\n  data: ICommunity;\r\n}\r\nexport interface ILoadCommunityError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_REQUEST;\r\n}\r\nexport interface ILoadCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ISearchCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST;\r\n  data: { keyword: string };\r\n}\r\nexport interface ISearchCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ISearchCommunitiesError {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCountryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST;\r\n  data: { country: string; communityId: number };\r\n}\r\nexport interface ILoadCountryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCountryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST;\r\n  data: { categoryId: number; communityId: number };\r\n}\r\nexport interface ILoadCategoryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCategoryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_REQUEST;\r\n  data: { categoryId: number };\r\n}\r\nexport interface ILoadCategorySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_SUCCESS;\r\n  data: { category: ICategory; communityLength: number };\r\n}\r\nexport interface ILoadCategoryError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoriesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_REQUEST;\r\n}\r\nexport interface ILoadCategoriesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_SUCCESS;\r\n  data: ICategory[];\r\n}\r\nexport interface ILoadCategoriesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAddMeetData {\r\n  place: string;\r\n  fee: number;\r\n  members: number;\r\n  date: string;\r\n  title: string;\r\n  communityId: number;\r\n}\r\nexport interface IAddMeetRequest {\r\n  type: typeof actionTypesCommunity.ADD_MEET_REQUEST;\r\n  data: IAddMeetData;\r\n}\r\nexport interface IAddMeetSuccess {\r\n  type: typeof actionTypesCommunity.ADD_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IAddMeetError {\r\n  type: typeof actionTypesCommunity.ADD_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveMeetRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IRemoveMeetSuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_SUCCESS;\r\n  data: { meetId: number };\r\n}\r\nexport interface IRemoveMeetError {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IModifyMeetData extends IAddMeetData {\r\n  meetId: number;\r\n}\r\nexport interface IModifyMeetRequest {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_REQUEST;\r\n  data: IModifyMeetData;\r\n}\r\nexport interface IModifyMeetSuccess {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IModifyMeetError {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinMeetRequest {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IJoinMeetSuccess {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IJoinMeetError {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveMeetRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface ILeaveMeetSuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_SUCCESS;\r\n  data: { meetId: number; userId: number };\r\n}\r\nexport interface ILeaveMeetError {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\n\r\nexport type ActionsCommunity =\r\n  | IRemoveCommunityImage\r\n  | IUploadCommunityImageRequest\r\n  | IUploadCommunityImageSuccess\r\n  | IUploadCommunityImageError\r\n  | IChangeCommunityInfoRequest\r\n  | IChangeCommunityInfoSuccess\r\n  | IChangeCommunityInfoError\r\n  | IAddCommunityRequest\r\n  | IAddCommunitySuccess\r\n  | IAddCommunityError\r\n  | IRemoveCommunityRequest\r\n  | IRemoveCommunitySuccess\r\n  | IRemoveCommunityError\r\n  | IJoinCommunityRequest\r\n  | IJoinCommunitySuccess\r\n  | IJoinCommunityError\r\n  | IAcceptCommunityRequest\r\n  | IAcceptCommunitySuccess\r\n  | IAcceptCommunityError\r\n  | IRefuseCommunityRequest\r\n  | IRefuseCommunitySuccess\r\n  | IRefuseCommunityError\r\n  | ILeaveCommunityRequest\r\n  | ILeaveCommunitySuccess\r\n  | ILeaveCommunityError\r\n  | ILoadCommunityRequest\r\n  | ILoadCommunitySuccess\r\n  | ILoadCommunityError\r\n  | ILoadCommunitiesRequest\r\n  | ILoadCommunitiesSuccess\r\n  | ILoadCommunitiesError\r\n  | ISearchCommunitiesRequest\r\n  | ISearchCommunitiesSuccess\r\n  | ISearchCommunitiesError\r\n  | ILoadCountryCommunitiesRequest\r\n  | ILoadCountryCommunitiesSuccess\r\n  | ILoadCountryCommunitiesError\r\n  | ILoadCategoryCommunitiesRequest\r\n  | ILoadCategoryCommunitiesSuccess\r\n  | ILoadCategoryCommunitiesError\r\n  | ILoadCategoryRequest\r\n  | ILoadCategorySuccess\r\n  | ILoadCategoryError\r\n  | ILoadCategoriesRequest\r\n  | ILoadCategoriesSuccess\r\n  | ILoadCategoriesError\r\n  | IAddMeetRequest\r\n  | IAddMeetSuccess\r\n  | IAddMeetError\r\n  | IRemoveMeetRequest\r\n  | IRemoveMeetSuccess\r\n  | IRemoveMeetError\r\n  | IModifyMeetRequest\r\n  | IModifyMeetSuccess\r\n  | IModifyMeetError\r\n  | IJoinMeetRequest\r\n  | IJoinMeetSuccess\r\n  | IJoinMeetError\r\n  | ILeaveMeetRequest\r\n  | ILeaveMeetSuccess\r\n  | ILeaveMeetError;\r\n","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          ['https://fonts.googleapis.com/css'].some((url) =>\n            c.props['href'].startsWith(url)\n          )\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","import {\r\n  actionTypesCommunity,\r\n  IRemoveCommunityImage,\r\n  IUploadCommunityImageRequest,\r\n  IChangeCommunityInfoData,\r\n  IChangeCommunityInfoRequest,\r\n  IAddCommunityRequest,\r\n  IRemoveCommunityRequest,\r\n  IJoinCommunityRequest,\r\n  IAcceptCommunityRequest,\r\n  IRefuseCommunityRequest,\r\n  ILeaveCommunityRequest,\r\n  ILoadCommunityRequest,\r\n  ILoadCommunitiesRequest,\r\n  ISearchCommunitiesRequest,\r\n  ILoadCountryCommunitiesRequest,\r\n  ILoadCategoryCommunitiesRequest,\r\n  ILoadCategoryRequest,\r\n  ILoadCategoriesRequest,\r\n  IAddMeetRequest,\r\n  IRemoveMeetRequest,\r\n  IModifyMeetRequest,\r\n  IJoinMeetRequest,\r\n  ILeaveMeetRequest,\r\n  IAddMeetData,\r\n  IModifyMeetData,\r\n  ICommunityData,\r\n} from '../interfaces/community/communityAction.interfaces';\r\n\r\nexport const removeCommunityImage = (): IRemoveCommunityImage => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_IMAGE,\r\n  };\r\n};\r\nexport const uploadCommunityImageRequestAction = (\r\n  data: FormData\r\n): IUploadCommunityImageRequest => {\r\n  return {\r\n    type: actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const changeCommunityInfoRequestAction = (\r\n  data: IChangeCommunityInfoData\r\n): IChangeCommunityInfoRequest => {\r\n  return {\r\n    type: actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const addCommunityRequestAction = (data: ICommunityData): IAddCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IRemoveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IJoinCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const acceptCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n  title: string;\r\n}): IAcceptCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const refuseCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n}): IRefuseCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REFUSE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILeaveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILoadCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunitiesRequestAction = (): ILoadCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITIES_REQUEST,\r\n  };\r\n};\r\nexport const searchCommunitiesRequestAction = (data: {\r\n  keyword: string;\r\n}): ISearchCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCountryCommunitiesRequestAction = (data: {\r\n  country: string;\r\n  communityId: number;\r\n}): ILoadCountryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoryCommunitiesRequestAction = (data: {\r\n  categoryId: number;\r\n  communityId: number;\r\n}): ILoadCategoryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loadCategoryRequestAction = (data: {\r\n  categoryId: number;\r\n}): ILoadCategoryRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoriesRequestAction = (): ILoadCategoriesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORIES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addMeetRequestAction = (data: IAddMeetData): IAddMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IRemoveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const modifyMeetRequestAction = (data: IModifyMeetData): IModifyMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.MODIFY_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IJoinMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): ILeaveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\n","import { END } from '@redux-saga/core';\r\nimport {\r\n  loadCategoryCommunitiesRequestAction,\r\n  loadCategoryRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport CategoryLayout, {\r\n  CategoryContent,\r\n  CategoryHeader,\r\n} from 'components/Layouts/CategoryLayout';\r\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nfunction Category() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const {\r\n    changableCommunities,\r\n    hasMoreCommunity,\r\n    loadCommunitiesLoading,\r\n    singleCategory,\r\n    communityLength,\r\n  } = useSelector((state: RootStateInterface) => state.community);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (changableCommunities.length) {\r\n        if (\r\n          window.scrollY + document.documentElement.clientHeight >=\r\n          document.documentElement.scrollHeight - 300\r\n        ) {\r\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\r\n            const categoryId = Number(router.query.id);\r\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\r\n            dispatch(\r\n              loadCategoryCommunitiesRequestAction({\r\n                categoryId,\r\n                communityId: lastId,\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\r\n\r\n  if (!singleCategory) {\r\n    return <div>잠시만 기다려주세요</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {singleCategory.name} 카테고리</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CategoryLayout img={singleCategory.profilePhoto}>\r\n          <CategoryHeader>\r\n            <h1>\r\n              {singleCategory.name}\r\n              <br />\r\n              {communityLength}개의 커뮤니티\r\n            </h1>\r\n          </CategoryHeader>\r\n          <CategoryContent>\r\n            <div className=\"cards-container\">\r\n              {changableCommunities.map(community => (\r\n                <div key={community.id}>\r\n                  <Link href={`/community/${community.id}`}>\r\n                    <a>\r\n                      <BoxStyleCard\r\n                        profilePhoto={community.profilePhoto}\r\n                        categoryName={community.Categories[0].name}\r\n                        country={community.country}\r\n                        communityName={community.communityName}\r\n                      />\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CategoryContent>\r\n        </CategoryLayout>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const categoryId = Number(context.query.id);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoryRequestAction({ categoryId }));\r\n    context.store.dispatch(\r\n      loadCategoryCommunitiesRequestAction({\r\n        categoryId,\r\n        communityId: 0,\r\n      })\r\n    );\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Category;\r\n","module.exports = require('./dist/next-server/lib/head')\n","function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nmodule.exports = _defineProperty;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/category/[id]\",\n      function () {\n        return require(\"private-next-pages/category/[id].tsx\");\n      }\n    ]);\n  ","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CategoryLayoutProps {\r\n  children: ReactNode;\r\n  img?: string;\r\n}\r\n\r\ninterface IBackgroundProps {\r\n  img: string | null;\r\n}\r\n\r\nconst CategoryContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\r\n    url(${(props: IBackgroundProps) => props.img && props.img});\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const CategoryHeader = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\r\n  position: relative;\r\n\r\n  h1 {\r\n    white-space: pre-line;\r\n    position: absolute;\r\n    bottom: 50px;\r\n    left: 50px;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n    vertical-align: bottom;\r\n  }\r\n`;\r\n\r\nexport const CategoryContent = styled.div`\r\n  padding: 1rem;\r\n\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, 240px);\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nfunction CategoryLayout({ children, img }: CategoryLayoutProps) {\r\n  return (\r\n    <CategoryContainer\r\n      img={img ? `${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${img}` : null}\r\n    >\r\n      {children}\r\n    </CategoryContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryLayout;\r\n"],"sourceRoot":""}