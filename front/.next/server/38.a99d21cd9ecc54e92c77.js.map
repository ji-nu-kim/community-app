{"version":3,"sources":["webpack:///./components/Modals/CommentSettingModal/styles.tsx","webpack:///./components/Modals/CommentSettingModal/index.tsx"],"names":["ModalContainer","styled","div","CommentSettingModal","setCurrentModifyComment","setEditMode","postId","commentId","commentOwnerId","communityUserId","content","dispatch","useDispatch","commentOwner","onClickModifyButton","useCallback","prev","onClickDeleteButton","confirm","removeCommentRequestAction","onClickReportButton","reason","prompt","reportRequestAction","contentId","reporter","reportedPerson","variety","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEO,MAAMA,cAAc,gBAAGC,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,ujBAApB,C;;;;;ACFP;AACA;AACA;AACA;;AAYA,SAASC,mBAAT,CAA6B;AAC3BC,yBAD2B;AAE3BC,aAF2B;AAG3BC,QAH2B;AAI3BC,WAJ2B;AAK3BC,gBAL2B;AAM3BC,iBAN2B;AAO3BC;AAP2B,CAA7B,EAQ6B;AAC3B,QAAMC,QAAQ,GAAGC,4CAAW,EAA5B;AACA,QAAMC,YAAY,GAAGL,cAAc,KAAKC,eAAxC;AAEA,QAAMK,mBAAmB,GAAGC,sCAAW,CAAC,MAAM;AAC5CX,2BAAuB,CAACG,SAAD,CAAvB;AACAF,eAAW,CAACW,IAAI,IAAI,CAACA,IAAV,CAAX;AACD,GAHsC,EAGpC,CAACT,SAAD,CAHoC,CAAvC;AAKA,QAAMU,mBAAmB,GAAGF,sCAAW,CAAC,MAAM;AAC5C,QAAIG,OAAO,CAAC,cAAD,CAAX,EAA6B;AAC3B,aAAOP,QAAQ,CAACQ,wDAA0B,CAAC;AAAEb,cAAF;AAAUC;AAAV,OAAD,CAA3B,CAAf;AACD;AACF,GAJsC,EAIpC,CAACD,MAAD,EAASC,SAAT,CAJoC,CAAvC;AAMA,QAAMa,mBAAmB,GAAGL,sCAAW,CAAC,MAAM;AAC5C,UAAMM,MAAM,GAAGC,MAAM,CAAC,gBAAD,CAArB;;AAEA,QAAID,MAAM,IAAIZ,eAAd,EAA+B;AAC7BE,cAAQ,CACNY,iDAAmB,CAAC;AAClBC,iBAAS,EAAEjB,SADO;AAElBkB,gBAAQ,EAAEhB,eAFQ;AAGlBiB,sBAAc,EAAElB,cAHE;AAIlBa,cAJkB;AAKlBM,eAAO,EAAE,SALS;AAMlBjB;AANkB,OAAD,CADb,CAAR;AAUD;AACF,GAfsC,EAepC,CAACF,cAAD,EAAiBC,eAAjB,EAAkCF,SAAlC,EAA6CG,OAA7C,CAfoC,CAAvC;AAiBA,sBACE,4BAAC,cAAD;AAAA,2BACE;AAAA,gBACGG,YAAY,gBACX;AAAA,gCACE;AAAI,iBAAO,EAAEC,mBAAb;AAAA;AAAA,UADF,eAEE;AAAI,iBAAO,EAAEG,mBAAb;AAAA;AAAA,UAFF;AAAA,QADW,gBAMX;AAAI,eAAO,EAAEG,mBAAb;AAAA;AAAA;AAPJ;AADF,IADF;AAcD;;AAEcQ,4IAAI,CAACzB,mBAAD,CAAnB,E","file":"38.a99d21cd9ecc54e92c77.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  z-index: 2000;\n  top: 0;\n  right: -5px;\n  width: 60px;\n  background: rgba(0, 0, 0, 0.7);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n  cursor: pointer;\n\n  ul {\n    height: inherit;\n    list-style: none;\n    padding: 0;\n    display: grid;\n    grid-template-rows: auto;\n    margin-bottom: 0;\n\n    li {\n      height: 30px;\n      font-size: 0.5rem;\n      position: relative;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n\n      :last-child {\n        border-bottom: none;\n      }\n      :hover {\n        background: rgba(0, 0, 0, 0.3);\n      }\n    }\n  }\n`;\n","import { removeCommentRequestAction, reportRequestAction } from 'actions/actionPost';\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalContainer } from './styles';\n\ninterface CommentSettingModalProps {\n  setCurrentModifyComment: Dispatch<SetStateAction<number>>;\n  setEditMode: Dispatch<SetStateAction<boolean>>;\n  postId: number;\n  commentId: number;\n  commentOwnerId: number;\n  communityUserId: number;\n  content: string;\n}\n\nfunction CommentSettingModal({\n  setCurrentModifyComment,\n  setEditMode,\n  postId,\n  commentId,\n  commentOwnerId,\n  communityUserId,\n  content,\n}: CommentSettingModalProps) {\n  const dispatch = useDispatch();\n  const commentOwner = commentOwnerId === communityUserId;\n\n  const onClickModifyButton = useCallback(() => {\n    setCurrentModifyComment(commentId);\n    setEditMode(prev => !prev);\n  }, [commentId]);\n\n  const onClickDeleteButton = useCallback(() => {\n    if (confirm('댓글을 지우시겠습니까?')) {\n      return dispatch(removeCommentRequestAction({ postId, commentId }));\n    }\n  }, [postId, commentId]);\n\n  const onClickReportButton = useCallback(() => {\n    const reason = prompt('신고하는 이유를 적어주세요');\n\n    if (reason && communityUserId) {\n      dispatch(\n        reportRequestAction({\n          contentId: commentId,\n          reporter: communityUserId,\n          reportedPerson: commentOwnerId,\n          reason,\n          variety: 'comment',\n          content,\n        })\n      );\n    }\n  }, [commentOwnerId, communityUserId, commentId, content]);\n\n  return (\n    <ModalContainer>\n      <ul>\n        {commentOwner ? (\n          <>\n            <li onClick={onClickModifyButton}>수정</li>\n            <li onClick={onClickDeleteButton}>삭제</li>\n          </>\n        ) : (\n          <li onClick={onClickReportButton}>신고하기</li>\n        )}\n      </ul>\n    </ModalContainer>\n  );\n}\n\nexport default memo(CommentSettingModal);\n"],"sourceRoot":""}