{"version":3,"sources":["webpack://front/./pages/category/index.tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"@redux-saga/core\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\""],"names":["StyleContainer","styled","Category","mainCategories","useSelector","state","community","map","category","id","name","process","profilePhoto","getServerSideProps","wrapper","context","cookie","req","headers","axios","store","dispatch","loadMyInfoRequestAction","loadCategoriesRequestAction","END","sagaTask","toPromise"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AAEA,MAAMA,cAAc,gBAAGC,wEAAH;AAAA;AAAA;AAAA,iMAApB;;AAcA,SAASC,QAAT,GAAoB;AAClB,QAAMC,cAAc,GAAGC,wDAAW,CAC/BC,KAAD,IAA+BA,KAAK,CAACC,SAAN,CAAgBH,cADf,CAAlC;AAIA,sBACE;AAAA,4BACE,mDAAC,mDAAD;AAAA,6BACE;AAAA;AAAA;AADF,MADF,eAIE,mDAAC,iEAAD;AAAA,6BACE,wDAAC,cAAD;AAAA,gCACE;AAAA;AAAA,UADF,eAEE;AAAK,mBAAS,EAAC,iBAAf;AAAA,oBACGA,cAAc,CAACI,GAAf,CAAmBC,QAAQ,iBAC1B;AAAA,mCACE,mDAAC,8CAAD;AAAM,kBAAI,EAAG,aAAYA,QAAQ,CAACC,EAAG,EAArC;AAAwC,sBAAQ,EAAE,KAAlD;AAAA,qCACE;AAAA,uCACE,mDAAC,6EAAD;AACE,sBAAI,EAAED,QAAQ,CAACE,IADjB;AAEE,qBAAG,EAAG,GAAEC,iCAAqC,IAAGH,QAAQ,CAACI,YAAa,EAFxE;AAGE,uBAAK,EAAC,KAHR;AAIE,wBAAM,EAAC;AAJT;AADF;AADF;AADF,aAAUJ,QAAQ,CAACE,IAAnB,CADD;AADH,UAFF;AAAA;AADF,MAJF;AAAA,IADF;AA4BD;;AAEM,MAAMG,kBAAsC,GAAGC,yGAAA,CACpD,MAAMC,OAAN,IAAiB;AACf,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACAG,wEAAA,GAAgC,EAAhC;;AACA,MAAIJ,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBG,0EAAA,GAAgCH,MAAhC;AACD;;AACDD,SAAO,CAACK,KAAR,CAAcC,QAAd,CAAuBC,qFAAuB,EAA9C;AACAP,SAAO,CAACK,KAAR,CAAcC,QAAd,CAAuBE,8FAA2B,EAAlD;AACAR,SAAO,CAACK,KAAR,CAAcC,QAAd,CAAuBG,iDAAvB;AACA,QAAMT,OAAO,CAACK,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAXmD,CAA/C;AAcP,+DAAexB,QAAf,E;;;;;;;;AC9EA,+C;;;;;;;;ACAA,8C;;;;;;;;ACAA,mC;;;;;;;;ACAA,mC;;;;;;;;ACAA,oC;;;;;;;;ACAA,gD;;;;;;;;ACAA,yE;;;;;;;;ACAA,iG;;;;;;;;ACAA,0C;;;;;;;;ACAA,uC;;;;;;;;ACAA,yC;;;;;;;;ACAA,mC;;;;;;;;ACAA,yC;;;;;;;;ACAA,+C;;;;;;;;ACAA,mC;;;;;;;;ACAA,sD;;;;;;;;ACAA,wC;;;;;;;;ACAA,gD;;;;;;;;ACAA,+C","file":"../pages/category.js","sourcesContent":["import { END } from '@redux-saga/core';\r\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport Link from 'next/link';\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport styled from 'styled-components';\r\nimport Head from 'next/head';\r\n\r\nconst StyleContainer = styled.div`\r\n  padding: 1rem;\r\n  h1 {\r\n    font-family: 'Black Han Sans', sans-serif;\r\n    font-size: 2rem;\r\n    color: hotpink;\r\n  }\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, auto));\r\n  }\r\n`;\r\n\r\nfunction Category() {\r\n  const mainCategories = useSelector(\r\n    (state: RootStateInterface) => state.community.mainCategories\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - 카테고리</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <StyleContainer>\r\n          <h1>취미 찾아보기</h1>\r\n          <div className=\"cards-container\">\r\n            {mainCategories.map(category => (\r\n              <div key={category.name}>\r\n                <Link href={`/category/${category.id}`} prefetch={false}>\r\n                  <a>\r\n                    <RoundStyleCard\r\n                      name={category.name}\r\n                      img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\r\n                      width=\"240\"\r\n                      height=\"220\"\r\n                    />\r\n                  </a>\r\n                </Link>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </StyleContainer>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoriesRequestAction());\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Category;\r\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"@redux-saga/core\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;"],"sourceRoot":""}