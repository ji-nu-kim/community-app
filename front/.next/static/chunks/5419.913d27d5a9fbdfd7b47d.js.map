{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./components/Message/FormErrorMessage.tsx","webpack://_N_E/./components/Modals/CreateMeetModal/styles.tsx","webpack://_N_E/./components/Modals/CreateMeetModal/index.tsx","webpack://_N_E/./utils/day.ts","webpack://_N_E/./utils/stylesUtil.tsx","webpack://_N_E/./utils/yup.ts"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","ErrorMessageStyle","styled","errorMessage","ModalContainer","ModalHeader","ColorAni","ModalBody","InputContainer","SearchAddressModal","dynamic","setShowCreateMeetModal","communityId","dispatch","useDispatch","useState","place","setPlace","placeError","setPlaceError","showSearchAddressModal","setShowSearchAddressModal","useForm","resolver","yupResolver","createMeetValidation","mode","handleSubmit","errors","control","closeCreateMeetModal","useCallback","openSearchAddressModal","closeSearchAddressModal","onSubmit","data","d","Date","date","moment","locale","format","addMeetRequestAction","title","fee","members","className","onClick","CloseCircleOutlined","onFinish","htmlFor","as","type","name","placeholder","defaultValue","maxLength","message","FormErrorMessage","style","display","gridTemplateColumns","day","cursor","value","readOnly","ghost","htmlType","setCountry","getFullYear","getMonth","getDate","getHours","getMinutes","fromMomentToDate","momentDate","split","year","slice","month","length","d2","hour","apHour","minute","keyframes","signUpValidation","yup","email","required","nickname","max","password","min","passwordCheck","oneOf","term","addCommunityValidation","communityName","description"],"mappings":"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","file":"static/chunks/5419.913d27d5a9fbdfd7b47d.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface FormErrorMessageProps {\r\n  errorMessage: string;\r\n}\r\n\r\nconst ErrorMessageStyle = styled.div`\r\n  padding-left: 5px;\r\n  color: red;\r\n`;\r\n\r\nfunction FormErrorMessage({ errorMessage }: FormErrorMessageProps) {\r\n  return <ErrorMessageStyle>{errorMessage}</ErrorMessageStyle>;\r\n}\r\n\r\nexport default FormErrorMessage;\r\n","import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100;\r\n  width: 500px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-button {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form {\r\n    display: grid;\r\n    grid-template-rows: 1fr 1fr 1fr 44px;\r\n  }\r\n\r\n  .create-button {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n\r\nexport const InputContainer = styled.div`\r\n  padding: 0.5rem;\r\n  margin-bottom: 1rem;\r\n  input {\r\n    width: 100%;\r\n    height: 44px;\r\n    border: none;\r\n    border-bottom: 1px solid rgba(255, 255, 255, 0.4);\r\n    background: transparent;\r\n    color: #fff;\r\n  }\r\n`;\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { Button, Form } from 'antd';\r\nimport FormErrorMessage from 'components/Message/FormErrorMessage';\r\nimport React, { Dispatch, SetStateAction, useCallback, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { Controller, useForm } from 'react-hook-form';\r\nimport { createMeetValidation } from 'utils/yup';\r\nimport { ModalContainer, ModalHeader, ModalBody, InputContainer } from './styles';\r\nimport { day } from 'utils/day';\r\nimport moment from 'moment';\r\nimport { useDispatch } from 'react-redux';\r\nimport { addMeetRequestAction } from 'actions/actionCommunity';\r\n\r\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\r\n\r\ntype CreateMeetType = {\r\n  title: string;\r\n  fee: number;\r\n  members: number;\r\n  date: Date;\r\n};\r\n\r\ninterface CreateMeetModalProps {\r\n  setShowCreateMeetModal: Dispatch<SetStateAction<boolean>>;\r\n  communityId: number;\r\n}\r\n\r\nfunction CreateMeetModal({ setShowCreateMeetModal, communityId }: CreateMeetModalProps) {\r\n  const dispatch = useDispatch();\r\n  const [place, setPlace] = useState('');\r\n  const [placeError, setPlaceError] = useState(false);\r\n  const [showSearchAddressModal, setShowSearchAddressModal] = useState(false);\r\n  const { handleSubmit, errors, control } = useForm<CreateMeetType>({\r\n    resolver: yupResolver(createMeetValidation),\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const closeCreateMeetModal = useCallback(() => {\r\n    setShowCreateMeetModal(false);\r\n  }, []);\r\n\r\n  const openSearchAddressModal = useCallback(() => {\r\n    setPlaceError(false);\r\n    setShowSearchAddressModal(true);\r\n  }, []);\r\n\r\n  const closeSearchAddressModal = useCallback(() => {\r\n    setShowSearchAddressModal(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    handleSubmit((data: CreateMeetType) => {\r\n      if (place === '') {\r\n        return setPlaceError(true);\r\n      }\r\n      const d = new Date(data.date);\r\n      const date = moment(d).locale('ko').format('LLL');\r\n\r\n      dispatch(\r\n        addMeetRequestAction({\r\n          title: data.title,\r\n          fee: data.fee,\r\n          members: data.members,\r\n          date,\r\n          place,\r\n          communityId,\r\n        })\r\n      );\r\n\r\n      setShowSearchAddressModal(false);\r\n    }),\r\n    [place]\r\n  );\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">모임만들기</div>\r\n        <div className=\"close-button\" onClick={closeCreateMeetModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form onFinish={onSubmit} className=\"form\">\r\n          <InputContainer>\r\n            <label htmlFor=\"title\">모임명</label>\r\n            <br />\r\n            <Controller\r\n              as={<input />}\r\n              type=\"text\"\r\n              name=\"title\"\r\n              control={control}\r\n              placeholder=\"모임 이름을 입력하세요\"\r\n              defaultValue=\"\"\r\n              maxLength=\"15\"\r\n            />\r\n            {errors.title?.message && (\r\n              <FormErrorMessage errorMessage={errors.title.message} />\r\n            )}\r\n          </InputContainer>\r\n\r\n          <div style={{ display: 'grid', gridTemplateColumns: '50% 50%' }}>\r\n            <InputContainer>\r\n              <label htmlFor=\"fee\">참가비</label>\r\n              <br />\r\n              <Controller\r\n                as={<input />}\r\n                type=\"number\"\r\n                name=\"fee\"\r\n                control={control}\r\n                defaultValue=\"0\"\r\n              />\r\n              {errors.fee?.message && (\r\n                <FormErrorMessage errorMessage={errors.fee.message} />\r\n              )}\r\n            </InputContainer>\r\n\r\n            <InputContainer>\r\n              <label htmlFor=\"members\">멤버수</label>\r\n              <br />\r\n              <Controller\r\n                as={<input />}\r\n                type=\"number\"\r\n                name=\"members\"\r\n                defaultValue=\"1\"\r\n                control={control}\r\n              />\r\n              {errors.members?.message && (\r\n                <FormErrorMessage errorMessage={errors.members.message} />\r\n              )}\r\n            </InputContainer>\r\n          </div>\r\n\r\n          <div style={{ display: 'grid', gridTemplateColumns: '1fr 1fr' }}>\r\n            <InputContainer>\r\n              <label htmlFor=\"date\">모임날짜</label>\r\n              <br />\r\n              <Controller\r\n                as={<input />}\r\n                type=\"datetime-local\"\r\n                name=\"date\"\r\n                control={control}\r\n                defaultValue={day}\r\n                style={{ cursor: 'pointer' }}\r\n              />\r\n              {errors.date?.message && (\r\n                <FormErrorMessage errorMessage={errors.date.message} />\r\n              )}\r\n            </InputContainer>\r\n\r\n            <InputContainer>\r\n              <label htmlFor=\"country\">모임장소</label>\r\n              <br />\r\n              <input\r\n                style={{ cursor: 'pointer' }}\r\n                value={place}\r\n                readOnly\r\n                placeholder=\"도로명 주소를 입력하세요\"\r\n                onClick={openSearchAddressModal}\r\n              />\r\n              {placeError && <FormErrorMessage errorMessage=\"주소를 입력하세요\" />}\r\n            </InputContainer>\r\n          </div>\r\n\r\n          <div className=\"create-button\">\r\n            <Button ghost htmlType=\"submit\">\r\n              만들기\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </ModalBody>\r\n      {showSearchAddressModal && (\r\n        <SearchAddressModal\r\n          closeSearchAddressModal={closeSearchAddressModal}\r\n          setCountry={setPlace}\r\n          type=\"road\"\r\n        />\r\n      )}\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default CreateMeetModal;\r\n","export function day() {\r\n  const date = new Date();\r\n  const today = `${date.getFullYear()}-${\r\n    date.getMonth() + 1 < 10 ? `0${date.getMonth() + 1}` : date.getMonth() + 1\r\n  }-${date.getDate()}T${date.getHours() < 10 ? `0${date.getHours()}` : date.getHours()}:${\r\n    date.getMinutes() < 10 ? `0${date.getMinutes()}` : date.getMinutes()\r\n  }`;\r\n\r\n  return today;\r\n}\r\n\r\nexport function fromMomentToDate(momentDate: string) {\r\n  const d = momentDate.split(' ');\r\n  const year = d[0].slice(0, 4);\r\n  const month = d[1].length === 2 ? `0${d[1][0]}` : d[1].slice(0, 2);\r\n  const date = d[2].length === 2 ? `0${d[2][0]}` : d[2].slice(0, 2);\r\n  const d2 = d[4].split(':');\r\n  const hour = d2[0].length === 1 ? `0${d2[0]}` : d2[0];\r\n  const apHour = d[3] === '오후' ? +hour + 12 : hour;\r\n  const minute = d2[1].length === 1 ? `0${d2[1][0]}` : d2[1];\r\n  return `${year}-${month}-${date}T${apHour}:${minute}`;\r\n}\r\n","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n","import * as yup from 'yup';\r\n\r\nexport const signUpValidation = yup.object({\r\n  email: yup.string().required('아이디를 입력하세요'),\r\n  nickname: yup\r\n    .string()\r\n    .required('닉네임을 입력하세요')\r\n    .max(10, '닉네임은 10글자 이하여야 합니다'),\r\n  password: yup\r\n    .string()\r\n    .required('비밀번호를 입력하세요')\r\n    .max(20, '비밀번호는 20자리 이하여야 합니다')\r\n    .min(8, '비밀번호는 8자리 이상이어야 합니다'),\r\n  passwordCheck: yup\r\n    .string()\r\n    .oneOf([yup.ref('password'), null], '비밀번호가 일치하지 않습니다'),\r\n  term: yup.boolean().oneOf([true], '약관에 동의해주세요'),\r\n});\r\n\r\nexport const addCommunityValidation = yup.object({\r\n  communityName: yup\r\n    .string()\r\n    .required('커뮤니티이름을 입력하세요')\r\n    .max(10, '커뮤니티 이름은 10글자 이하여야 합니다'),\r\n  description: yup\r\n    .string()\r\n    .required('커뮤니티를 소개하세요')\r\n    .max(140, '최대 140글자까지 입력가능합니다'),\r\n});\r\n\r\nexport const createMeetValidation = yup.object({\r\n  title: yup\r\n    .string()\r\n    .required('모임 이름을 입력하세요')\r\n    .max(15, '최대 15자리까지 가능합니다'),\r\n  fee: yup.number().min(0).required('참가비를 입력하세요(없으면 0)'),\r\n  members: yup\r\n    .number()\r\n    .min(1, '최소 1명이상이여야 합니다')\r\n    .required('인원 수를 입력하세요'),\r\n  date: yup.date().required('날짜를 입력하세요'),\r\n});\r\n"],"sourceRoot":""}