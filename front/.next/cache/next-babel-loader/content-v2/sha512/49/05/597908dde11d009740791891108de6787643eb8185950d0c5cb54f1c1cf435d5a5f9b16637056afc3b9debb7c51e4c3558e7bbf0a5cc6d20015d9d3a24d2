{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { removePostRequestAction, reportRequestAction } from 'actions/actionPost';\nimport React, { useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalContainer } from './styles';\n\nfunction PostSettingModal(_ref) {\n  var setCurrentModifyPost = _ref.setCurrentModifyPost,\n      setEditMode = _ref.setEditMode,\n      postId = _ref.postId,\n      communityId = _ref.communityId,\n      postOwnerId = _ref.postOwnerId,\n      communityUserId = _ref.communityUserId,\n      content = _ref.content;\n  var dispatch = useDispatch();\n  var postOwner = postOwnerId === communityUserId;\n  var onClickModifyButton = useCallback(function () {\n    setCurrentModifyPost(postId);\n    setEditMode(function (prev) {\n      return !prev;\n    });\n  }, [postId]);\n  var onClickDeleteButton = useCallback(function () {\n    if (confirm('게시글을 지우시겠습니까?')) {\n      return dispatch(removePostRequestAction({\n        postId: postId,\n        communityId: communityId\n      }));\n    }\n  }, []);\n  var onClickReportButton = useCallback(function () {\n    var reason = prompt('신고하는 이유를 적어주세요');\n\n    if (reason && communityUserId) {\n      dispatch(reportRequestAction({\n        contentId: postId,\n        reporter: communityUserId,\n        reportedPerson: postOwnerId,\n        reason: reason,\n        variety: 'post',\n        content: content\n      }));\n    }\n  }, [postOwnerId, communityUserId, postId, content]);\n  return /*#__PURE__*/_jsx(ModalContainer, {\n    children: /*#__PURE__*/_jsx(\"ul\", {\n      children: postOwner ? /*#__PURE__*/_jsxs(_Fragment, {\n        children: [/*#__PURE__*/_jsx(\"li\", {\n          onClick: onClickModifyButton,\n          children: \"\\uC218\\uC815\"\n        }), /*#__PURE__*/_jsx(\"li\", {\n          onClick: onClickDeleteButton,\n          children: \"\\uC0AD\\uC81C\"\n        })]\n      }) : /*#__PURE__*/_jsx(\"li\", {\n        onClick: onClickReportButton,\n        children: \"\\uC2E0\\uACE0\\uD558\\uAE30\"\n      })\n    })\n  });\n}\n\nexport default PostSettingModal;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/Modals/PostSettingModal/index.tsx"],"names":["removePostRequestAction","reportRequestAction","React","useCallback","useDispatch","ModalContainer","PostSettingModal","setCurrentModifyPost","setEditMode","postId","communityId","postOwnerId","communityUserId","content","dispatch","postOwner","onClickModifyButton","prev","onClickDeleteButton","confirm","onClickReportButton","reason","prompt","contentId","reporter","reportedPerson","variety"],"mappings":";;;AAAA,SAASA,uBAAT,EAAkCC,mBAAlC,QAA6D,oBAA7D;AACA,OAAOC,KAAP,IAA0CC,WAA1C,QAA6D,OAA7D;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,cAAT,QAA+B,UAA/B;;AAYA,SAASC,gBAAT,OAQ0B;AAAA,MAPxBC,oBAOwB,QAPxBA,oBAOwB;AAAA,MANxBC,WAMwB,QANxBA,WAMwB;AAAA,MALxBC,MAKwB,QALxBA,MAKwB;AAAA,MAJxBC,WAIwB,QAJxBA,WAIwB;AAAA,MAHxBC,WAGwB,QAHxBA,WAGwB;AAAA,MAFxBC,eAEwB,QAFxBA,eAEwB;AAAA,MADxBC,OACwB,QADxBA,OACwB;AACxB,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,SAAS,GAAGJ,WAAW,KAAKC,eAAlC;AAEA,MAAMI,mBAAmB,GAAGb,WAAW,CAAC,YAAM;AAC5CI,IAAAA,oBAAoB,CAACE,MAAD,CAApB;AACAD,IAAAA,WAAW,CAAC,UAAAS,IAAI;AAAA,aAAI,CAACA,IAAL;AAAA,KAAL,CAAX;AACD,GAHsC,EAGpC,CAACR,MAAD,CAHoC,CAAvC;AAKA,MAAMS,mBAAmB,GAAGf,WAAW,CAAC,YAAM;AAC5C,QAAIgB,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5B,aAAOL,QAAQ,CAACd,uBAAuB,CAAC;AAAES,QAAAA,MAAM,EAANA,MAAF;AAAUC,QAAAA,WAAW,EAAXA;AAAV,OAAD,CAAxB,CAAf;AACD;AACF,GAJsC,EAIpC,EAJoC,CAAvC;AAMA,MAAMU,mBAAmB,GAAGjB,WAAW,CAAC,YAAM;AAC5C,QAAMkB,MAAM,GAAGC,MAAM,CAAC,gBAAD,CAArB;;AAEA,QAAID,MAAM,IAAIT,eAAd,EAA+B;AAC7BE,MAAAA,QAAQ,CACNb,mBAAmB,CAAC;AAClBsB,QAAAA,SAAS,EAAEd,MADO;AAElBe,QAAAA,QAAQ,EAAEZ,eAFQ;AAGlBa,QAAAA,cAAc,EAAEd,WAHE;AAIlBU,QAAAA,MAAM,EAANA,MAJkB;AAKlBK,QAAAA,OAAO,EAAE,MALS;AAMlBb,QAAAA,OAAO,EAAPA;AANkB,OAAD,CADb,CAAR;AAUD;AACF,GAfsC,EAepC,CAACF,WAAD,EAAcC,eAAd,EAA+BH,MAA/B,EAAuCI,OAAvC,CAfoC,CAAvC;AAiBA,sBACE,KAAC,cAAD;AAAA,2BACE;AAAA,gBACGE,SAAS,gBACR;AAAA,gCACE;AAAI,UAAA,OAAO,EAAEC,mBAAb;AAAA;AAAA,UADF,eAEE;AAAI,UAAA,OAAO,EAAEE,mBAAb;AAAA;AAAA,UAFF;AAAA,QADQ,gBAMR;AAAI,QAAA,OAAO,EAAEE,mBAAb;AAAA;AAAA;AAPJ;AADF,IADF;AAcD;;AAED,eAAed,gBAAf","sourcesContent":["import { removePostRequestAction, reportRequestAction } from 'actions/actionPost';\r\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ModalContainer } from './styles';\r\n\r\ninterface PostSettingModalProps {\r\n  setCurrentModifyPost: Dispatch<SetStateAction<number>>;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>;\r\n  postId: number;\r\n  communityId: number;\r\n  postOwnerId: number;\r\n  communityUserId: number;\r\n  content: string;\r\n}\r\n\r\nfunction PostSettingModal({\r\n  setCurrentModifyPost,\r\n  setEditMode,\r\n  postId,\r\n  communityId,\r\n  postOwnerId,\r\n  communityUserId,\r\n  content,\r\n}: PostSettingModalProps) {\r\n  const dispatch = useDispatch();\r\n  const postOwner = postOwnerId === communityUserId;\r\n\r\n  const onClickModifyButton = useCallback(() => {\r\n    setCurrentModifyPost(postId);\r\n    setEditMode(prev => !prev);\r\n  }, [postId]);\r\n\r\n  const onClickDeleteButton = useCallback(() => {\r\n    if (confirm('게시글을 지우시겠습니까?')) {\r\n      return dispatch(removePostRequestAction({ postId, communityId }));\r\n    }\r\n  }, []);\r\n\r\n  const onClickReportButton = useCallback(() => {\r\n    const reason = prompt('신고하는 이유를 적어주세요');\r\n\r\n    if (reason && communityUserId) {\r\n      dispatch(\r\n        reportRequestAction({\r\n          contentId: postId,\r\n          reporter: communityUserId,\r\n          reportedPerson: postOwnerId,\r\n          reason,\r\n          variety: 'post',\r\n          content,\r\n        })\r\n      );\r\n    }\r\n  }, [postOwnerId, communityUserId, postId, content]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ul>\r\n        {postOwner ? (\r\n          <>\r\n            <li onClick={onClickModifyButton}>수정</li>\r\n            <li onClick={onClickDeleteButton}>삭제</li>\r\n          </>\r\n        ) : (\r\n          <li onClick={onClickReportButton}>신고하기</li>\r\n        )}\r\n      </ul>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default PostSettingModal;\r\n"]},"metadata":{},"sourceType":"module"}