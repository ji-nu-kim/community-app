{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://_N_E/./components/Modals/UserProfileModifyModal/styles.tsx","webpack://_N_E/./components/Modals/UserProfileModifyModal/index.tsx","webpack://_N_E/./hooks/useInput.tsx","webpack://_N_E/./utils/stylesUtil.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","ModalContainer","styled","ModalHeader","ColorAni","ModalBody","ImageInsert","dynamic","CategoryList","UserProfileModifyModal","setUserProfileModifyModal","dispatch","useDispatch","useSelector","state","user","me","imagePath","useInput","nickname","newNickname","onChangeNewNickname","mainCategories","community","useState","Categories","map","v","name","categories","setCategories","onCloseUserProfileModifyModal","useCallback","onSubmit","confirm","setTimeout","changeProfileRequestAction","profilePhoto","category","className","onClick","CloseCircleOutlined","onFinish","htmlFor","id","type","onChange","ghost","htmlType","memo","initialValue","setValue","e","target","keyframes"],"mappings":"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","file":"static/chunks/5495.1046e91f4e0e3f0f1005.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  top: 50%;\r\n  left: 50%;\r\n  transform: translate(-50%, -50%);\r\n  z-index: 100;\r\n  width: 500px;\r\n  height: 500px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n\r\n  display: grid;\r\n  grid-template-rows: 44px auto;\r\n\r\n  label {\r\n    color: #e4e4e4;\r\n  }\r\n`;\r\n\r\nexport const ModalHeader = styled.header`\r\n  display: flex;\r\n  color: #e4e4e4;\r\n  font-weight: bold;\r\n  align-items: center;\r\n  justify-content: space-between;\r\n  background: rgba(0, 0, 0, 0.1);\r\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\r\n\r\n  .modal-title {\r\n    margin-left: 1rem;\r\n  }\r\n  .close-btn {\r\n    margin-right: 1rem;\r\n    cursor: pointer;\r\n\r\n    :hover {\r\n      color: coral;\r\n      animation: ${ColorAni} 0.5s linear infinite;\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ModalBody = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  .form {\r\n    display: grid;\r\n    grid-template-rows: repeat(3, auto);\r\n\r\n    .form-profile {\r\n      display: grid;\r\n      grid-template-columns: 1fr 1fr;\r\n      margin-bottom: 1rem;\r\n      justify-items: flex-start;\r\n\r\n      .profile-nickname {\r\n        #nickname {\r\n          background: rgba(255, 255, 255, 0.1);\r\n          padding-left: 4px;\r\n          color: #fff;\r\n          margin-top: 0.5rem;\r\n          height: 33px;\r\n          border: none;\r\n\r\n          :hover {\r\n            background: rgba(255, 255, 255, 0.2);\r\n          }\r\n        }\r\n      }\r\n    }\r\n\r\n    .form-category {\r\n      margin-bottom: 1rem;\r\n      span {\r\n        font-size: 0.75rem;\r\n        color: #fff;\r\n      }\r\n    }\r\n  }\r\n\r\n  .create-btn {\r\n    display: flex;\r\n    justify-content: center;\r\n  }\r\n`;\r\n","import { CloseCircleOutlined } from '@ant-design/icons';\r\nimport { Button, Form } from 'antd';\r\nimport dynamic from 'next/dynamic';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ModalContainer, ModalHeader, ModalBody } from './styles';\r\nimport useInput from 'hooks/useInput';\r\nimport { changeProfileRequestAction } from 'actions/actionUser';\r\n\r\nconst ImageInsert = dynamic(() => import('components/ImageInsert'));\r\nconst CategoryList = dynamic(() => import('components/CategoryList'));\r\n\r\ninterface UserProfileModifyModalProps {\r\n  setUserProfileModifyModal: Dispatch<SetStateAction<boolean>>;\r\n}\r\n\r\nfunction UserProfileModifyModal({\r\n  setUserProfileModifyModal,\r\n}: UserProfileModifyModalProps) {\r\n  const dispatch = useDispatch();\r\n  const { me, imagePath } = useSelector((state: RootStateInterface) => state.user);\r\n  const [newNickname, onChangeNewNickname] = useInput<string>(me?.nickname || '');\r\n\r\n  const mainCategories = useSelector(\r\n    (state: RootStateInterface) => state.community.mainCategories\r\n  );\r\n\r\n  const [categories, setCategories] = useState<string[]>(\r\n    me?.Categories?.map(v => v.name) || []\r\n  );\r\n\r\n  const onCloseUserProfileModifyModal = useCallback(() => {\r\n    setUserProfileModifyModal(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(() => {\r\n    if (confirm('정보를 수정하시겠습니까?')) {\r\n      setTimeout(() => {\r\n        return dispatch(\r\n          changeProfileRequestAction({\r\n            nickname: newNickname,\r\n            profilePhoto: imagePath,\r\n            category: categories,\r\n          })\r\n        );\r\n      }, 3000);\r\n    }\r\n  }, [imagePath, newNickname, categories]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ModalHeader>\r\n        <div className=\"modal-title\">프로필수정</div>\r\n        <div className=\"close-btn\" onClick={onCloseUserProfileModifyModal}>\r\n          <CloseCircleOutlined />\r\n        </div>\r\n      </ModalHeader>\r\n      <ModalBody>\r\n        <Form onFinish={onSubmit} className=\"form\">\r\n          <div className=\"form-profile\">\r\n            <div className=\"profile-img\">\r\n              <label>프로필사진</label>\r\n              <ImageInsert imagePath={imagePath} profilePhoto={me?.profilePhoto} />\r\n            </div>\r\n            <div className=\"profile-nickname\">\r\n              <label htmlFor=\"nickname\">닉네임</label>\r\n              <br />\r\n              <input\r\n                id=\"nickname\"\r\n                type=\"text\"\r\n                value={newNickname}\r\n                onChange={onChangeNewNickname}\r\n              />\r\n            </div>\r\n          </div>\r\n          <div className=\"form-category\">\r\n            <label>\r\n              관심사<span> (최대 5개까지 선택가능합니다)</span>\r\n            </label>\r\n            <CategoryList\r\n              mainCategories={mainCategories}\r\n              categories={categories}\r\n              setCategories={setCategories}\r\n            />\r\n          </div>\r\n          <div className=\"create-btn\">\r\n            <Button ghost htmlType=\"submit\">\r\n              수정하기\r\n            </Button>\r\n          </div>\r\n        </Form>\r\n      </ModalBody>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(UserProfileModifyModal);\r\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n","import { keyframes } from 'styled-components';\r\n\r\nexport const ColorAni = keyframes`\r\n  from {\r\n    filter: hue-rotate(0deg);\r\n  }\r\n  to {\r\n    filter: hue-rotate(360deg);\r\n  }\r\n`;\r\n"],"sourceRoot":""}