{"version":3,"sources":["webpack:///./components/Modals/JoinUserModal/styles.tsx","webpack:///./components/Modals/JoinUserModal/index.tsx","webpack:///./utils/stylesUtil.tsx"],"names":["ModalExternal","styled","div","ModalContainer","ModalHeader","header","ColorAni","ModalBody","JoinUserModal","setJoinUserModal","singleCommunity","dispatch","useDispatch","JoinUsers","closeJoinUserModal","useCallback","onClickAccept","userId","acceptCommunityRequestAction","communityId","id","title","communityName","onClickRefuse","refuseCommunityRequestAction","e","stopPropagation","map","user","profilePhoto","nickname","country","keyframes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEO,MAAMA,aAAa,gBAAGC,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,kEAAnB;AAUA,MAAMC,cAAc,gBAAGF,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,yUAApB;AAqBA,MAAME,WAAW,gBAAGH,oCAAM,CAACI,MAAV;AAAA;AAAA;AAAA,mTAkBLC,8BAlBK,CAAjB;AAuBA,MAAMC,SAAS,gBAAGN,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,ioBAAf,C;;;;ACzDP;AACA;AAKA;AACA;AACA;;AAOA,SAASM,aAAT,CAAuB;AAAEC,kBAAF;AAAoBC;AAApB,CAAvB,EAAkF;AAChF,QAAMC,QAAQ,GAAGC,4CAAW,EAA5B;AACA,QAAM;AAAEC;AAAF,MAAgBH,eAAtB;AAEA,QAAMI,kBAAkB,GAAGC,sCAAW,CAAC,MAAM;AAC3CN,oBAAgB,CAAC,KAAD,CAAhB;AACD,GAFqC,EAEnC,CAACA,gBAAD,CAFmC,CAAtC;AAIA,QAAMO,aAAa,GAAGD,sCAAW,CAC9BE,MAAD,IAAoB,YAAY;AAC9B,WAAON,QAAQ,CACbO,+DAA4B,CAAC;AAC3BC,iBAAW,EAAET,eAAe,CAACU,EADF;AAE3BH,YAF2B;AAG3BI,WAAK,EAAG,GAAEX,eAAe,CAACY,aAAc;AAHb,KAAD,CADf,CAAf;AAOD,GAT8B,EAU/B,CAACZ,eAAD,CAV+B,CAAjC;AAaA,QAAMa,aAAa,GAAGR,sCAAW,CAC9BE,MAAD,IAAoB,YAAY;AAC9B,WAAON,QAAQ,CACba,+DAA4B,CAAC;AAC3BL,iBAAW,EAAET,eAAe,CAACU,EADF;AAE3BH;AAF2B,KAAD,CADf,CAAf;AAMD,GAR8B,EAS/B,CAACP,eAAD,CAT+B,CAAjC;AAYA,sBACE,4BAAC,aAAD;AAAe,WAAO,EAAEI,kBAAxB;AAAA,2BACE,6BAAC,cAAD;AAAgB,aAAO,EAAEW,CAAC,IAAIA,CAAC,CAACC,eAAF,EAA9B;AAAA,8BACE,6BAAC,WAAD;AAAA,gCACE;AAAK,mBAAS,EAAC,aAAf;AAAA;AAAA,UADF,eAEE;AAAK,mBAAS,EAAC,WAAf;AAA2B,iBAAO,EAAEZ,kBAApC;AAAA,iCACE,4BAAC,6BAAD;AADF,UAFF;AAAA,QADF,eAOE,4BAAC,SAAD;AAAA,kBACGD,SAAS,CAACc,GAAV,CAAcC,IAAI,iBACjB;AAAmB,mBAAS,EAAC,gBAA7B;AAAA,kCACE;AAAK,qBAAS,EAAC,YAAf;AAAA,sBACGA,IAAI,CAACC,YAAL,gBACC;AAAK,iBAAG,EAAED,IAAI,CAACC,YAAf;AAA6B,iBAAG,EAAC;AAAjC,cADD,GAGC;AAJJ,YADF,eAQE;AAAK,qBAAS,EAAC,WAAf;AAAA,oCACE;AAAA,iDAAWD,IAAI,CAACE,QAAhB;AAAA,cADF,eAEE;AAAA,2CAAUF,IAAI,CAACG,OAAf;AAAA,cAFF;AAAA,YARF,eAYE;AAAK,qBAAS,EAAC,aAAf;AAAA,oCACE;AAAQ,qBAAO,EAAEf,aAAa,CAACY,IAAI,CAACR,EAAN,CAA9B;AAAA;AAAA,cADF,eAEE;AAAQ,qBAAO,EAAEG,aAAa,CAACK,IAAI,CAACR,EAAN,CAA9B;AAAA;AAAA,cAFF;AAAA,YAZF;AAAA,WAAUQ,IAAI,CAACR,EAAf,CADD;AADH,QAPF;AAAA;AADF,IADF;AAiCD;;AAEcZ,uGAAf,E;;;;;;;;ACnFA;AAAA;AAAA;AAAA;AAEO,MAAMF,QAAQ,gBAAG0B,mEAAH,kEAAd,C","file":"29.307be6c5a5837e1986e0.js","sourcesContent":["import styled from 'styled-components';\nimport { ColorAni } from '../../../utils/stylesUtil';\n\nexport const ModalExternal = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  right: 0;\n  bottom: 0;\n\n  z-index: 1000;\n`;\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 10;\n  width: 300px;\n  height: 500px;\n  background: rgba(0, 0, 0, 0.7);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n\n  display: grid;\n  grid-template-rows: 44px auto;\n\n  label {\n    color: #e4e4e4;\n  }\n`;\n\nexport const ModalHeader = styled.header`\n  display: flex;\n  color: #e4e4e4;\n  font-weight: bold;\n  align-items: center;\n  justify-content: space-between;\n  background: rgba(0, 0, 0, 0.1);\n  border-bottom: 1px solid rgba(255, 255, 255, 0.1);\n\n  .modal-title {\n    margin-left: 1rem;\n  }\n  .close-btn {\n    margin-right: 1rem;\n    cursor: pointer;\n\n    :hover {\n      color: coral;\n      animation: ${ColorAni} 0.5s linear infinite;\n    }\n  }\n`;\n\nexport const ModalBody = styled.div`\n  overflow-y: auto;\n  padding: 1rem;\n\n  .card-container {\n    background: rgba(255, 255, 255, 0.4);\n    outline: 1px solid rgba(255, 255, 255, 1);\n    color: #fff;\n    display: grid;\n    grid-template-rows: 250px 70px 50px;\n    margin-bottom: 30px;\n\n    .card-image {\n      position: relative;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.4);\n\n      img {\n        position: absolute;\n        width: 100%;\n        height: 100%;\n        object-fit: cover;\n      }\n    }\n\n    .card-info {\n      align-self: center;\n      margin-left: 8px;\n    }\n\n    .card-button {\n      display: grid;\n      grid-template-columns: 1fr 1fr;\n\n      button {\n        background: #039be5;\n        border: none;\n        cursor: pointer;\n\n        :hover {\n          background: #007ebd;\n        }\n\n        :first-child {\n          border-right: 1px solid rgba(255, 255, 255, 0.4);\n        }\n      }\n    }\n  }\n`;\n","import { CloseCircleOutlined } from '@ant-design/icons';\nimport {\n  acceptCommunityRequestAction,\n  refuseCommunityRequestAction,\n} from 'actions/actionCommunity';\nimport { ICommunity } from 'interfaces/db';\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalExternal, ModalContainer, ModalBody, ModalHeader } from './styles';\n\ninterface JoinUserModalProps {\n  setJoinUserModal: Dispatch<SetStateAction<boolean>>;\n  singleCommunity: ICommunity;\n}\n\nfunction JoinUserModal({ setJoinUserModal, singleCommunity }: JoinUserModalProps) {\n  const dispatch = useDispatch();\n  const { JoinUsers } = singleCommunity;\n\n  const closeJoinUserModal = useCallback(() => {\n    setJoinUserModal(false);\n  }, [setJoinUserModal]);\n\n  const onClickAccept = useCallback(\n    (userId: number) => async () => {\n      return dispatch(\n        acceptCommunityRequestAction({\n          communityId: singleCommunity.id,\n          userId,\n          title: `${singleCommunity.communityName} 커뮤니티 가입신청이 승인되었습니다`,\n        })\n      );\n    },\n    [singleCommunity]\n  );\n\n  const onClickRefuse = useCallback(\n    (userId: number) => async () => {\n      return dispatch(\n        refuseCommunityRequestAction({\n          communityId: singleCommunity.id,\n          userId,\n        })\n      );\n    },\n    [singleCommunity]\n  );\n\n  return (\n    <ModalExternal onClick={closeJoinUserModal}>\n      <ModalContainer onClick={e => e.stopPropagation()}>\n        <ModalHeader>\n          <div className=\"modal-title\">가입신청한 유저목록</div>\n          <div className=\"close-btn\" onClick={closeJoinUserModal}>\n            <CloseCircleOutlined />\n          </div>\n        </ModalHeader>\n        <ModalBody>\n          {JoinUsers.map(user => (\n            <div key={user.id} className=\"card-container\">\n              <div className=\"card-image\">\n                {user.profilePhoto ? (\n                  <img src={user.profilePhoto} alt=\"profile-photo\" />\n                ) : (\n                  '이미지'\n                )}\n              </div>\n              <div className=\"card-info\">\n                <div>닉네임: {user.nickname}</div>\n                <div>지역: {user.country}</div>\n              </div>\n              <div className=\"card-button\">\n                <button onClick={onClickAccept(user.id)}>승인</button>\n                <button onClick={onClickRefuse(user.id)}>거절</button>\n              </div>\n            </div>\n          ))}\n        </ModalBody>\n      </ModalContainer>\n    </ModalExternal>\n  );\n}\n\nexport default JoinUserModal;\n","import { keyframes } from 'styled-components';\n\nexport const ColorAni = keyframes`\n  from {\n    filter: hue-rotate(0deg);\n  }\n  to {\n    filter: hue-rotate(360deg);\n  }\n`;\n"],"sourceRoot":""}