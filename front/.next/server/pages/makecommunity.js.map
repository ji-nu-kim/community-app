{"version":3,"sources":["webpack://front/./pages/makecommunity.tsx","webpack://front/external \"@hookform/resolvers/yup\"","webpack://front/external \"@redux-saga/core\"","webpack://front/external \"antd\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-daum-postcode\"","webpack://front/external \"react-hook-form\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\"","webpack://front/external \"yup\""],"names":["FormErrorMessage","dynamic","SearchAddressModal","MakeCommunity","dispatch","useDispatch","me","useSelector","state","user","mainCategories","addCommunityDone","addCommunityError","addCommunityLoading","community","showSearchAddressModal","setShowSearchAddressModal","useState","countryError","setCountryError","categoryError","setcategoryError","country","setCountry","category","setCategory","useEffect","Router","alert","handleSubmit","errors","control","useForm","resolver","yupResolver","addCommunityValidation","mode","openSearchAddressModal","useCallback","closeSearchAddressModal","onChangeCategory","e","target","value","onSubmit","data","addCommunityRequestAction","communityName","description","message","cursor","map","v","id","name","getServerSideProps","wrapper","context","cookie","req","headers","axios","store","loadMyInfoRequestAction","loadCategoriesRequestAction","END","sagaTask","toPromise"],"mappings":"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","file":"../pages/makecommunity.js","sourcesContent":["import { loadMyInfoRequestAction } from '../actions/actionUser';\r\nimport { Form, Button } from 'antd';\r\nimport Head from 'next/head';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { addCommunityValidation } from '../utils/yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport SignUpLayout, {\r\n  InputContainer,\r\n  TextAreaContainer,\r\n  ButtonContainer,\r\n} from 'components/Layouts/FormLayout';\r\nimport {\r\n  addCommunityRequestAction,\r\n  loadCategoriesRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { END } from '@redux-saga/core';\r\nimport axios from 'axios';\r\nimport { GetServerSideProps } from 'next';\r\nimport wrapper from 'store/configureStore';\r\n\r\nconst FormErrorMessage = dynamic(() => import('components/Message/FormErrorMessage'));\r\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\r\n\r\ntype SignUpType = {\r\n  communityName: string;\r\n  description: string;\r\n};\r\n\r\nfunction MakeCommunity() {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const { mainCategories, addCommunityDone, addCommunityError, addCommunityLoading } =\r\n    useSelector((state: RootStateInterface) => state.community);\r\n\r\n  const [showSearchAddressModal, setShowSearchAddressModal] = useState(false);\r\n  const [countryError, setCountryError] = useState(false);\r\n  const [categoryError, setcategoryError] = useState(false);\r\n  const [country, setCountry] = useState('');\r\n  const [category, setCategory] = useState('');\r\n\r\n  useEffect(() => {\r\n    if (!me) {\r\n      Router.push('/');\r\n    }\r\n  }, [me]);\r\n\r\n  useEffect(() => {\r\n    if (addCommunityError) {\r\n      alert(addCommunityError);\r\n    }\r\n  }, [addCommunityError]);\r\n\r\n  useEffect(() => {\r\n    if (addCommunityDone) {\r\n      alert('커뮤니티를 생성했습니다');\r\n      Router.push('/');\r\n    }\r\n  }, [addCommunityDone]);\r\n\r\n  const { handleSubmit, errors, control } = useForm<SignUpType>({\r\n    resolver: yupResolver(addCommunityValidation),\r\n    mode: 'onBlur',\r\n  });\r\n\r\n  const openSearchAddressModal = useCallback(() => {\r\n    setCountryError(false);\r\n    setShowSearchAddressModal(true);\r\n  }, []);\r\n\r\n  const closeSearchAddressModal = useCallback(() => {\r\n    setShowSearchAddressModal(false);\r\n  }, []);\r\n\r\n  const onChangeCategory = useCallback(e => {\r\n    setCategory(e.target.value);\r\n    setcategoryError(false);\r\n  }, []);\r\n\r\n  const onSubmit = useCallback(\r\n    handleSubmit((data: SignUpType) => {\r\n      if (country === '') {\r\n        return setCountryError(true);\r\n      }\r\n      if (category === '') {\r\n        return setcategoryError(true);\r\n      }\r\n      return dispatch(\r\n        addCommunityRequestAction({\r\n          communityName: data.communityName,\r\n          description: data.description,\r\n          country,\r\n          category,\r\n        })\r\n      );\r\n    }),\r\n    [country, category]\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - 커뮤니티 만들기</title>\r\n      </Head>\r\n      <SignUpLayout>\r\n        <h1>커뮤니티 만들기</h1>\r\n        <Form onFinish={onSubmit} className=\"form-grid\">\r\n          <InputContainer>\r\n            <label htmlFor=\"communityName\">커뮤니티 이름</label>\r\n            <br />\r\n            <Controller\r\n              as={<input />}\r\n              type=\"text\"\r\n              name=\"communityName\"\r\n              control={control}\r\n              placeholder=\"커뮤니티 이름을 입력하세요\"\r\n              defaultValue=\"\"\r\n            />\r\n            {errors.communityName?.message && (\r\n              <FormErrorMessage errorMessage={errors.communityName.message} />\r\n            )}\r\n          </InputContainer>\r\n\r\n          <TextAreaContainer>\r\n            <label htmlFor=\"description\">커뮤니티소개</label>\r\n            <br />\r\n            <Controller\r\n              as={<textarea />}\r\n              name=\"description\"\r\n              placeholder=\"최대 140글자까지 입력가능합니다\"\r\n              control={control}\r\n              defaultValue=\"\"\r\n            />\r\n            {errors.description?.message && (\r\n              <FormErrorMessage errorMessage={errors.description.message} />\r\n            )}\r\n          </TextAreaContainer>\r\n\r\n          <InputContainer>\r\n            <label htmlFor=\"country\">주소</label>\r\n            <br />\r\n            <input\r\n              style={{ cursor: 'pointer' }}\r\n              value={country}\r\n              readOnly\r\n              placeholder=\"주소를 검색하세요\"\r\n              onClick={openSearchAddressModal}\r\n            />\r\n            {countryError && <FormErrorMessage errorMessage=\"주소를 입력하세요\" />}\r\n          </InputContainer>\r\n\r\n          <label htmlFor=\"categories\">카테고리</label>\r\n          <br />\r\n          <select id=\"categories\" className=\"select-category\" onChange={onChangeCategory}>\r\n            <option value=\"\">카테고리를 선택하세요</option>\r\n            {mainCategories.map(v => (\r\n              <option key={v.name} value={v.id}>\r\n                {v.name}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          {categoryError && <FormErrorMessage errorMessage=\"카테고리를 선택하세요\" />}\r\n\r\n          <ButtonContainer>\r\n            <Button type=\"primary\" htmlType=\"submit\" loading={addCommunityLoading}>\r\n              생성하기\r\n            </Button>\r\n          </ButtonContainer>\r\n        </Form>\r\n        {showSearchAddressModal && (\r\n          <SearchAddressModal\r\n            closeSearchAddressModal={closeSearchAddressModal}\r\n            setCountry={setCountry}\r\n            type=\"village\"\r\n          />\r\n        )}\r\n      </SignUpLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoriesRequestAction());\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default MakeCommunity;\r\n","module.exports = require(\"@hookform/resolvers/yup\");;","module.exports = require(\"@redux-saga/core\");;","module.exports = require(\"antd\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-daum-postcode\");;","module.exports = require(\"react-hook-form\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;","module.exports = require(\"yup\");;"],"sourceRoot":""}