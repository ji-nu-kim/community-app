{"version":3,"sources":["webpack://_N_E/./actions/actionCommunity.ts","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CameraOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CameraOutlined.js","webpack://_N_E/./components/ImageInsert/styles.tsx","webpack://_N_E/./components/ImageInsert/index.tsx"],"names":["removeCommunityImage","type","actionTypesCommunity","uploadCommunityImageRequestAction","data","changeCommunityInfoRequestAction","addCommunityRequestAction","removeCommunityRequestAction","joinCommunityRequestAction","acceptCommunityRequestAction","refuseCommunityRequestAction","leaveCommunityRequestAction","loadCountryCommunitiesRequestAction","loadCategoryCommunitiesRequestAction","addMeetRequestAction","removeMeetRequestAction","modifyMeetRequestAction","joinMeetRequestAction","leaveMeetRequestAction","props","ref","AntdIcon","Object","assign","icon","displayName","ProfileImgContainer","styled","ImageInsert","imagePath","profilePhoto","router","useRouter","dispatch","useDispatch","imageInputRef","useRef","uploadImageDone","useSelector","state","user","uploadCommunityImageDone","community","onClickImageUpload","useCallback","route","split","current","click","onChangeImages","e","target","files","length","imageFormData","FormData","forEach","call","f","append","uploadImageRequestAction","onRemoveImage","removeImage","name","hidden","onChange","onClick","shape","className","width","height","src","replace","alt","memo"],"mappings":"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","file":"static/chunks/5789.ccb14abb93744780be58.js","sourcesContent":["import {\r\n  actionTypesCommunity,\r\n  IRemoveCommunityImage,\r\n  IUploadCommunityImageRequest,\r\n  IChangeCommunityInfoData,\r\n  IChangeCommunityInfoRequest,\r\n  IAddCommunityRequest,\r\n  IRemoveCommunityRequest,\r\n  IJoinCommunityRequest,\r\n  IAcceptCommunityRequest,\r\n  IRefuseCommunityRequest,\r\n  ILeaveCommunityRequest,\r\n  ILoadCommunityRequest,\r\n  ILoadCommunitiesRequest,\r\n  ISearchCommunitiesRequest,\r\n  ILoadCountryCommunitiesRequest,\r\n  ILoadCategoryCommunitiesRequest,\r\n  ILoadCategoryRequest,\r\n  ILoadCategoriesRequest,\r\n  IAddMeetRequest,\r\n  IRemoveMeetRequest,\r\n  IModifyMeetRequest,\r\n  IJoinMeetRequest,\r\n  ILeaveMeetRequest,\r\n  IAddMeetData,\r\n  IModifyMeetData,\r\n  ICommunityData,\r\n} from '../interfaces/community/communityAction.interfaces';\r\n\r\nexport const removeCommunityImage = (): IRemoveCommunityImage => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_IMAGE,\r\n  };\r\n};\r\nexport const uploadCommunityImageRequestAction = (\r\n  data: FormData\r\n): IUploadCommunityImageRequest => {\r\n  return {\r\n    type: actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const changeCommunityInfoRequestAction = (\r\n  data: IChangeCommunityInfoData\r\n): IChangeCommunityInfoRequest => {\r\n  return {\r\n    type: actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const addCommunityRequestAction = (data: ICommunityData): IAddCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IRemoveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IJoinCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const acceptCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n  title: string;\r\n}): IAcceptCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const refuseCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n}): IRefuseCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REFUSE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILeaveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILoadCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunitiesRequestAction = (): ILoadCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITIES_REQUEST,\r\n  };\r\n};\r\nexport const searchCommunitiesRequestAction = (data: {\r\n  keyword: string;\r\n}): ISearchCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCountryCommunitiesRequestAction = (data: {\r\n  country: string;\r\n  communityId: number;\r\n}): ILoadCountryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoryCommunitiesRequestAction = (data: {\r\n  categoryId: number;\r\n  communityId: number;\r\n}): ILoadCategoryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loadCategoryRequestAction = (data: {\r\n  categoryId: number;\r\n}): ILoadCategoryRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoriesRequestAction = (): ILoadCategoriesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORIES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addMeetRequestAction = (data: IAddMeetData): IAddMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IRemoveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const modifyMeetRequestAction = (data: IModifyMeetData): IModifyMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.MODIFY_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IJoinMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): ILeaveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\n","// This icon file is generated automatically.\nvar CameraOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M864 248H728l-32.4-90.8a32.07 32.07 0 00-30.2-21.2H358.6c-13.5 0-25.6 8.5-30.1 21.2L296 248H160c-44.2 0-80 35.8-80 80v456c0 44.2 35.8 80 80 80h704c44.2 0 80-35.8 80-80V328c0-44.2-35.8-80-80-80zm8 536c0 4.4-3.6 8-8 8H160c-4.4 0-8-3.6-8-8V328c0-4.4 3.6-8 8-8h186.7l17.1-47.8 22.9-64.2h250.5l22.9 64.2 17.1 47.8H864c4.4 0 8 3.6 8 8v456zM512 384c-88.4 0-160 71.6-160 160s71.6 160 160 160 160-71.6 160-160-71.6-160-160-160zm0 256c-53 0-96-43-96-96s43-96 96-96 96 43 96 96-43 96-96 96z\" } }] }, \"name\": \"camera\", \"theme\": \"outlined\" };\nexport default CameraOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CameraOutlinedSvg from \"@ant-design/icons-svg/es/asn/CameraOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CameraOutlined = function CameraOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CameraOutlinedSvg\n  }));\n};\n\nCameraOutlined.displayName = 'CameraOutlined';\nexport default /*#__PURE__*/React.forwardRef(CameraOutlined);","import styled from 'styled-components';\r\n\r\nexport const ProfileImgContainer = styled.div`\r\n  position: relative;\r\n\r\n  img {\r\n    position: absolute;\r\n    z-index: -1;\r\n    top: -1px;\r\n    left: -1px;\r\n    border-radius: 50%;\r\n    object-fit: cover;\r\n  }\r\n\r\n  .img-input-btn {\r\n    margin: 0.5rem 0;\r\n    position: relative;\r\n    width: 100px;\r\n    height: 100px;\r\n    background: rgba(0, 0, 0, 0.1);\r\n\r\n    .img-input-icon {\r\n      color: #cacaca;\r\n      font-size: 2rem;\r\n    }\r\n  }\r\n\r\n  .img-delete-btn {\r\n    position: absolute;\r\n    top: -1px;\r\n    left: -1px;\r\n    width: 100px;\r\n    height: 100px;\r\n    border-radius: 50%;\r\n    background: rgba(0, 0, 0, 0.5);\r\n    color: #fff;\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    transition: opacity 0.3s linear;\r\n    opacity: 0;\r\n\r\n    :hover {\r\n      opacity: 1;\r\n      transition: opacity 0.3s linear;\r\n    }\r\n  }\r\n`;\r\n","import React, { ChangeEvent, memo, useCallback, useRef } from 'react';\r\nimport { CameraOutlined } from '@ant-design/icons';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { removeImage, uploadImageRequestAction } from 'actions/actionUser';\r\nimport { ProfileImgContainer } from './styles';\r\nimport { Button } from 'antd';\r\nimport { useRouter } from 'next/router';\r\nimport {\r\n  removeCommunityImage,\r\n  uploadCommunityImageRequestAction,\r\n} from 'actions/actionCommunity';\r\n\r\ninterface ImageInsertProps {\r\n  imagePath: string[];\r\n  profilePhoto: string | undefined;\r\n}\r\n\r\nfunction ImageInsert({ imagePath, profilePhoto }: ImageInsertProps) {\r\n  const router = useRouter();\r\n  const dispatch = useDispatch();\r\n  const imageInputRef = useRef<HTMLInputElement>(null);\r\n  const { uploadImageDone } = useSelector((state: RootStateInterface) => state.user);\r\n  const { uploadCommunityImageDone } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n\r\n  const onClickImageUpload = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (route === 'profile' && !uploadImageDone) {\r\n      imageInputRef.current?.click();\r\n    } else if (route === 'community' && !uploadCommunityImageDone) {\r\n      imageInputRef.current?.click();\r\n    }\r\n  }, [imageInputRef.current, uploadImageDone, uploadCommunityImageDone]);\r\n\r\n  const onChangeImages = useCallback((e: ChangeEvent<HTMLInputElement>) => {\r\n    if (e.target.files?.length) {\r\n      const route = router.route.split('/')[1];\r\n      const imageFormData = new FormData();\r\n      [].forEach.call(e.target.files, f => {\r\n        imageFormData.append('image', f);\r\n      });\r\n      if (route === 'profile') {\r\n        return dispatch(uploadImageRequestAction(imageFormData));\r\n      } else if (route === 'community') {\r\n        return dispatch(uploadCommunityImageRequestAction(imageFormData));\r\n      }\r\n    }\r\n  }, []);\r\n\r\n  const onRemoveImage = useCallback(() => {\r\n    const route = router.route.split('/')[1];\r\n    if (imagePath.length) {\r\n      if (route === 'profile') {\r\n        return dispatch(removeImage());\r\n      } else if (route === 'community') {\r\n        return dispatch(removeCommunityImage());\r\n      }\r\n    }\r\n  }, [imagePath]);\r\n\r\n  return (\r\n    <ProfileImgContainer>\r\n      <div>\r\n        <input\r\n          type=\"file\"\r\n          name=\"image\"\r\n          hidden\r\n          ref={imageInputRef}\r\n          onChange={onChangeImages}\r\n        />\r\n        <Button onClick={onClickImageUpload} shape=\"circle\" className=\"img-input-btn\">\r\n          {imagePath.length ? (\r\n            <>\r\n              <img\r\n                width=\"100\"\r\n                height=\"100\"\r\n                src={imagePath[0].replace(/\\/resize\\//, '/original/')}\r\n                alt=\"profileimage\"\r\n              />\r\n              <div onClick={onRemoveImage} className=\"img-delete-btn\">\r\n                지우기\r\n              </div>\r\n            </>\r\n          ) : profilePhoto ? (\r\n            <img width=\"100\" height=\"100\" src={profilePhoto} alt=\"profileimage\" />\r\n          ) : (\r\n            <CameraOutlined className=\"img-input-icon\" />\r\n          )}\r\n        </Button>\r\n      </div>\r\n    </ProfileImgContainer>\r\n  );\r\n}\r\n\r\nexport default memo(ImageInsert);\r\n"],"sourceRoot":""}