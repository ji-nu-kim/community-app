{"version":3,"sources":["webpack://front/./components/CategoryList/styles.tsx","webpack://front/./components/CategoryList/index.tsx"],"names":["CheckBoxContainer","styled","ColorAni","CategoryList","mainCategories","setCategories","categories","onChangeCheckBox","useCallback","name","e","length","target","checked","prev","filter","v","alert","map","category","includes"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AAEO,MAAMA,iBAAiB,gBAAGC,wDAAH;AAAA;AAAA;AAAA,kMAYTC,0BAZS,CAAvB,C;;;;ACFP;AACA;;AAQA,SAASC,YAAT,CAAsB;AACpBC,gBADoB;AAEpBC,eAFoB;AAGpBC;AAHoB,CAAtB,EAIsB;AACpB,QAAMC,gBAAgB,GAAGC,+BAAW,CACjCC,IAAD,IAAmBC,CAAD,IAAY;AAC5B,QAAIJ,UAAU,CAACK,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAID,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBR,qBAAa,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUL,IAAV,CAAT,CAAb;AACD,OAFD,MAEO;AACLJ,qBAAa,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,IAAIP,IAA3B,CAAT,CAAb;AACD;AACF,KAND,MAMO;AACL,UAAIC,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBI,aAAK,CAAC,gBAAD,CAAL;AACAP,SAAC,CAACE,MAAF,CAASC,OAAT,GAAmB,KAAnB;AACD,OAHD,MAGO;AACLR,qBAAa,CAACS,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,IAAIP,IAA3B,CAAT,CAAb;AACD;AACF;AACF,GAhBiC,EAiBlC,CAACH,UAAD,CAjBkC,CAApC;AAoBA,sBACE,iBAAC,iBAAD;AAAA,cACGF,cAAc,IACbA,cAAc,CAACc,GAAf,CAAmBC,QAAQ,iBACzB;AAAA,iBACGb,UAAU,CAACc,QAAX,CAAoBD,QAAQ,CAACV,IAA7B,iBACC;AACE,YAAI,EAAC,UADP;AAEE,UAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,gBAAQ,EAAEF,gBAAgB,CAACY,QAAQ,CAACV,IAAV,CAH5B;AAIE,sBAAc;AAJhB,QADD,gBAQC;AACE,YAAI,EAAC,UADP;AAEE,UAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,gBAAQ,EAAEF,gBAAgB,CAACY,QAAQ,CAACV,IAAV;AAH5B,QATJ,eAeE;AAAO,eAAO,EAAEU,QAAQ,CAACV,IAAzB;AAAA,kBAAgCU,QAAQ,CAACV;AAAzC,QAfF;AAAA,OAAUU,QAAQ,CAACV,IAAnB,CADF;AAFJ,IADF;AAwBD;;AAED,4DAAeN,YAAf,E","file":"4316.js","sourcesContent":["import styled from 'styled-components';\r\nimport { ColorAni } from 'utils/stylesUtil';\r\n\r\nexport const CheckBoxContainer = styled.fieldset`\r\n  margin: 0.5rem 0;\r\n  display: grid;\r\n  grid-template-columns: repeat(5, 85px);\r\n  grid-template-rows: auto;\r\n\r\n  div {\r\n    label {\r\n      color: #fff;\r\n      margin-left: 4px;\r\n      :hover {\r\n        color: coral;\r\n        animation: ${ColorAni} 0.5s infinite linear;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { ICategory } from 'interfaces/db';\r\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { CheckBoxContainer } from './styles';\r\n\r\ninterface CategoryListProps {\r\n  mainCategories: ICategory[];\r\n  setCategories: Dispatch<SetStateAction<string[]>>;\r\n  categories: string[];\r\n}\r\n\r\nfunction CategoryList({\r\n  mainCategories,\r\n  setCategories,\r\n  categories,\r\n}: CategoryListProps) {\r\n  const onChangeCheckBox = useCallback(\r\n    (name: string) => (e: any) => {\r\n      if (categories.length < 5) {\r\n        if (e.target.checked) {\r\n          setCategories(prev => [...prev, name]);\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      } else {\r\n        if (e.target.checked) {\r\n          alert('5개만 선택할 수 있습니다');\r\n          e.target.checked = false;\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      }\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  return (\r\n    <CheckBoxContainer>\r\n      {mainCategories &&\r\n        mainCategories.map(category => (\r\n          <div key={category.name}>\r\n            {categories.includes(category.name) ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n                defaultChecked\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n              />\r\n            )}\r\n            <label htmlFor={category.name}>{category.name}</label>\r\n          </div>\r\n        ))}\r\n    </CheckBoxContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n"],"sourceRoot":""}