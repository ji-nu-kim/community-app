{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport React, { useCallback } from 'react';\nimport { CheckBoxContainer } from './styles';\n\nfunction CategoryList({\n  mainCategories,\n  setCategories,\n  categories\n}) {\n  const onChangeCheckBox = useCallback(name => e => {\n    if (categories.length < 5) {\n      if (e.target.checked) {\n        setCategories(prev => [...prev, name]);\n      } else {\n        setCategories(prev => [...prev].filter(v => v != name));\n      }\n    } else {\n      if (e.target.checked) {\n        alert('5개만 선택할 수 있습니다');\n        e.target.checked = false;\n      } else {\n        setCategories(prev => [...prev].filter(v => v != name));\n      }\n    }\n  }, [categories]);\n  return /*#__PURE__*/_jsx(CheckBoxContainer, {\n    children: mainCategories && mainCategories.map(category => /*#__PURE__*/_jsxs(\"div\", {\n      children: [categories.includes(category.name) ? /*#__PURE__*/_jsx(\"input\", {\n        type: \"checkbox\",\n        id: category.name,\n        onChange: onChangeCheckBox(category.name),\n        defaultChecked: true\n      }) : /*#__PURE__*/_jsx(\"input\", {\n        type: \"checkbox\",\n        id: category.name,\n        onChange: onChangeCheckBox(category.name)\n      }), /*#__PURE__*/_jsx(\"label\", {\n        htmlFor: category.name,\n        children: category.name\n      })]\n    }, category.name))\n  });\n}\n\nexport default CategoryList;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/CategoryList/index.tsx"],"names":["React","useCallback","CheckBoxContainer","CategoryList","mainCategories","setCategories","categories","onChangeCheckBox","name","e","length","target","checked","prev","filter","v","alert","map","category","includes"],"mappings":";;AACA,OAAOA,KAAP,IAA0CC,WAA1C,QAA6D,OAA7D;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAQA,SAASC,YAAT,CAAsB;AACpBC,EAAAA,cADoB;AAEpBC,EAAAA,aAFoB;AAGpBC,EAAAA;AAHoB,CAAtB,EAIsB;AACpB,QAAMC,gBAAgB,GAAGN,WAAW,CACjCO,IAAD,IAAmBC,CAAD,IAAY;AAC5B,QAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzB,UAAID,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBP,QAAAA,aAAa,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUL,IAAV,CAAT,CAAb;AACD,OAFD,MAEO;AACLH,QAAAA,aAAa,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,IAAIP,IAA3B,CAAT,CAAb;AACD;AACF,KAND,MAMO;AACL,UAAIC,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBI,QAAAA,KAAK,CAAC,gBAAD,CAAL;AACAP,QAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GAAmB,KAAnB;AACD,OAHD,MAGO;AACLP,QAAAA,aAAa,CAACQ,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUC,MAAV,CAAiBC,CAAC,IAAIA,CAAC,IAAIP,IAA3B,CAAT,CAAb;AACD;AACF;AACF,GAhBiC,EAiBlC,CAACF,UAAD,CAjBkC,CAApC;AAoBA,sBACE,KAAC,iBAAD;AAAA,cACGF,cAAc,IACbA,cAAc,CAACa,GAAf,CAAmBC,QAAQ,iBACzB;AAAA,iBACGZ,UAAU,CAACa,QAAX,CAAoBD,QAAQ,CAACV,IAA7B,iBACC;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,QAAA,QAAQ,EAAED,gBAAgB,CAACW,QAAQ,CAACV,IAAV,CAH5B;AAIE,QAAA,cAAc;AAJhB,QADD,gBAQC;AACE,QAAA,IAAI,EAAC,UADP;AAEE,QAAA,EAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,QAAA,QAAQ,EAAED,gBAAgB,CAACW,QAAQ,CAACV,IAAV;AAH5B,QATJ,eAeE;AAAO,QAAA,OAAO,EAAEU,QAAQ,CAACV,IAAzB;AAAA,kBAAgCU,QAAQ,CAACV;AAAzC,QAfF;AAAA,OAAUU,QAAQ,CAACV,IAAnB,CADF;AAFJ,IADF;AAwBD;;AAED,eAAeL,YAAf","sourcesContent":["import { ICategory } from 'interfaces/db';\r\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { CheckBoxContainer } from './styles';\r\n\r\ninterface CategoryListProps {\r\n  mainCategories: ICategory[];\r\n  setCategories: Dispatch<SetStateAction<string[]>>;\r\n  categories: string[];\r\n}\r\n\r\nfunction CategoryList({\r\n  mainCategories,\r\n  setCategories,\r\n  categories,\r\n}: CategoryListProps) {\r\n  const onChangeCheckBox = useCallback(\r\n    (name: string) => (e: any) => {\r\n      if (categories.length < 5) {\r\n        if (e.target.checked) {\r\n          setCategories(prev => [...prev, name]);\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      } else {\r\n        if (e.target.checked) {\r\n          alert('5개만 선택할 수 있습니다');\r\n          e.target.checked = false;\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      }\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  return (\r\n    <CheckBoxContainer>\r\n      {mainCategories &&\r\n        mainCategories.map(category => (\r\n          <div key={category.name}>\r\n            {categories.includes(category.name) ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n                defaultChecked\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n              />\r\n            )}\r\n            <label htmlFor={category.name}>{category.name}</label>\r\n          </div>\r\n        ))}\r\n    </CheckBoxContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n"]},"metadata":{},"sourceType":"module"}