{"version":3,"sources":["webpack://front/./pages/signup.tsx","webpack://front/external \"@hookform/resolvers/yup\"","webpack://front/external \"antd\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-daum-postcode\"","webpack://front/external \"react-hook-form\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"styled-components\"","webpack://front/external \"yup\""],"names":["FormErrorMessage","dynamic","SearchAddressModal","Signup","dispatch","useDispatch","signUpLoading","signUpDone","signUpError","me","useSelector","state","user","showSearchAddressModal","setShowSearchAddressModal","useState","countryError","setCountryError","country","setCountry","useEffect","id","Router","alert","handleSubmit","errors","control","useForm","resolver","yupResolver","signUpValidation","mode","openSearchAddressModal","useCallback","closeSearchAddressModal","onSubmit","data","signUpRequestAction","email","nickname","password","message","passwordCheck","cursor","onChange","value","e","target","checked","term"],"mappings":"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","file":"../pages/signup.js","sourcesContent":["import { signUpRequestAction } from '../actions/actionUser';\nimport { Form, Checkbox, Button } from 'antd';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { useForm, Controller } from 'react-hook-form';\nimport { signUpValidation } from '../utils/yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SignUpLayout, {\n  InputContainer,\n  ButtonContainer,\n} from 'components/Layouts/FormLayout';\n\nconst FormErrorMessage = dynamic(() => import('components/Message/FormErrorMessage'));\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\ntype SignUpType = {\n  email: string;\n  nickname: string;\n  password: string;\n  passwordCheck: string;\n  term: boolean;\n};\n\nfunction Signup() {\n  const dispatch = useDispatch();\n\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n\n  const [showSearchAddressModal, setShowSearchAddressModal] = useState(false);\n  const [countryError, setCountryError] = useState(false);\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n    if ((me && me.id) || signUpDone) {\n      Router.push('/');\n    }\n  }, [me, signUpDone]);\n\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  const { handleSubmit, errors, control } = useForm<SignUpType>({\n    resolver: yupResolver(signUpValidation),\n    mode: 'onBlur',\n  });\n\n  const openSearchAddressModal = useCallback(() => {\n    setCountryError(false);\n    setShowSearchAddressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAddressModal(false);\n  }, []);\n\n  const onSubmit = useCallback(\n    handleSubmit((data: SignUpType) => {\n      if (country === '') {\n        return setCountryError(true);\n      }\n\n      dispatch(\n        signUpRequestAction({\n          email: data.email,\n          nickname: data.nickname,\n          password: data.password,\n          country,\n        })\n      );\n    }),\n    [country]\n  );\n\n  return (\n    <>\n      <Head>\n        <title>community - 회원가입</title>\n      </Head>\n      <SignUpLayout>\n        <h1>회원가입</h1>\n        <Form onFinish={onSubmit} className=\"form-grid\">\n          <InputContainer>\n            <label htmlFor=\"email\">이메일</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"email\"\n              name=\"email\"\n              control={control}\n              placeholder=\"아이디를 입력하세요\"\n              defaultValue=\"\"\n            />\n            {errors.email?.message && (\n              <FormErrorMessage errorMessage={errors.email.message} />\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"text\"\n              name=\"nickname\"\n              control={control}\n              placeholder=\"닉네임을 입력하세요\"\n              defaultValue=\"\"\n            />\n            {errors.nickname?.message && (\n              <FormErrorMessage errorMessage={errors.nickname.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"password\">비밀번호</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"password\"\n              name=\"password\"\n              control={control}\n              placeholder=\"비밀번호\"\n              defaultValue=\"\"\n            />\n            {errors.password?.message && (\n              <FormErrorMessage errorMessage={errors.password.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"passwordCheck\">비밀번호 확인</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"password\"\n              name=\"passwordCheck\"\n              control={control}\n              placeholder=\"비밀번호 재입력\"\n              defaultValue=\"\"\n            />\n            {errors.passwordCheck?.message && (\n              <FormErrorMessage errorMessage={errors.passwordCheck.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"country\">주소</label>\n            <br />\n            <input\n              style={{ cursor: 'pointer' }}\n              value={country}\n              readOnly\n              placeholder=\"주소를 검색하세요\"\n              onClick={openSearchAddressModal}\n            />\n            {countryError && <FormErrorMessage errorMessage=\"주소를 입력하세요\" />}\n          </InputContainer>\n          <div>\n            <Controller\n              name=\"term\"\n              control={control}\n              defaultValue={false}\n              render={({ onChange, value }) => (\n                <Checkbox onChange={e => onChange(e.target.checked)} checked={value}>\n                  회원가입에 동의합니다\n                </Checkbox>\n              )}\n            />\n            {errors.term?.message && (\n              <FormErrorMessage errorMessage={errors.term.message} />\n            )}\n          </div>\n          <ButtonContainer>\n            <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={signUpLoading}>\n              가입하기\n            </Button>\n          </ButtonContainer>\n        </Form>\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setCountry}\n            type=\"village\"\n          />\n        )}\n      </SignUpLayout>\n    </>\n  );\n}\n\nexport default Signup;\n","module.exports = require(\"@hookform/resolvers/yup\");;","module.exports = require(\"antd\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-daum-postcode\");;","module.exports = require(\"react-hook-form\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"styled-components\");;","module.exports = require(\"yup\");;"],"sourceRoot":""}