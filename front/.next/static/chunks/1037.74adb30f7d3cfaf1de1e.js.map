{"version":3,"sources":["webpack://_N_E/./components/Modals/CommentSettingModal/styles.tsx","webpack://_N_E/./components/Modals/CommentSettingModal/index.tsx"],"names":["ModalContainer","styled","CommentSettingModal","setCurrentModifyComment","setEditMode","postId","commentId","commentOwnerId","communityUserId","content","dispatch","useDispatch","commentOwner","onClickModifyButton","useCallback","prev","onClickDeleteButton","confirm","removeCommentRequestAction","onClickReportButton","reason","prompt","reportRequestAction","contentId","reporter","reportedPerson","variety","onClick","memo"],"mappings":"2LAEaA,E,QAAiBC,kBAAH,8DAAGA,CAAH,qjBCa3B,SAASC,EAAT,GAQ6B,IAP3BC,EAO2B,EAP3BA,wBACAC,EAM2B,EAN3BA,YACAC,EAK2B,EAL3BA,OACAC,EAI2B,EAJ3BA,UACAC,EAG2B,EAH3BA,eACAC,EAE2B,EAF3BA,gBACAC,EAC2B,EAD3BA,QAEMC,GAAWC,UACXC,EAAeL,IAAmBC,EAElCK,GAAsBC,kBAAY,WACtCX,EAAwBG,GACxBF,GAAY,SAAAW,GAAI,OAAKA,OACpB,CAACT,IAEEU,GAAsBF,kBAAY,WACtC,GAAIG,QAAQ,kEACV,OAAOP,GAASQ,QAA2B,CAAEb,SAAQC,iBAEtD,CAACD,EAAQC,IAENa,GAAsBL,kBAAY,WACtC,IAAMM,EAASC,OAAO,8EAElBD,GAAUZ,GACZE,GACEY,QAAoB,CAClBC,UAAWjB,EACXkB,SAAUhB,EACViB,eAAgBlB,EAChBa,SACAM,QAAS,UACTjB,eAIL,CAACF,EAAgBC,EAAiBF,EAAWG,IAEhD,OACE,SAACT,EAAD,WACE,wBACGY,GACC,iCACE,eAAIe,QAASd,EAAb,2BACA,eAAIc,QAASX,EAAb,8BAGF,eAAIW,QAASR,EAAb,0CAOV,OAAeS,UAAK1B","file":"static/chunks/1037.74adb30f7d3cfaf1de1e.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const ModalContainer = styled.div`\r\n  position: absolute;\r\n  z-index: 2000;\r\n  top: 0;\r\n  right: -5px;\r\n  width: 60px;\r\n  background: rgba(0, 0, 0, 0.7);\r\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\r\n  backdrop-filter: saturate(180%) blur(12px);\r\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\r\n  cursor: pointer;\r\n\r\n  ul {\r\n    height: inherit;\r\n    list-style: none;\r\n    padding: 0;\r\n    display: grid;\r\n    grid-template-rows: auto;\r\n    margin-bottom: 0;\r\n\r\n    li {\r\n      height: 30px;\r\n      font-size: 0.5rem;\r\n      position: relative;\r\n      color: #fff;\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: center;\r\n      border-bottom: 1px solid rgba(255, 255, 255, 0.15);\r\n\r\n      :last-child {\r\n        border-bottom: none;\r\n      }\r\n      :hover {\r\n        background: rgba(0, 0, 0, 0.3);\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import { removeCommentRequestAction, reportRequestAction } from 'actions/actionPost';\r\nimport React, { Dispatch, memo, SetStateAction, useCallback } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { ModalContainer } from './styles';\r\n\r\ninterface CommentSettingModalProps {\r\n  setCurrentModifyComment: Dispatch<SetStateAction<number>>;\r\n  setEditMode: Dispatch<SetStateAction<boolean>>;\r\n  postId: number;\r\n  commentId: number;\r\n  commentOwnerId: number;\r\n  communityUserId: number;\r\n  content: string;\r\n}\r\n\r\nfunction CommentSettingModal({\r\n  setCurrentModifyComment,\r\n  setEditMode,\r\n  postId,\r\n  commentId,\r\n  commentOwnerId,\r\n  communityUserId,\r\n  content,\r\n}: CommentSettingModalProps) {\r\n  const dispatch = useDispatch();\r\n  const commentOwner = commentOwnerId === communityUserId;\r\n\r\n  const onClickModifyButton = useCallback(() => {\r\n    setCurrentModifyComment(commentId);\r\n    setEditMode(prev => !prev);\r\n  }, [commentId]);\r\n\r\n  const onClickDeleteButton = useCallback(() => {\r\n    if (confirm('댓글을 지우시겠습니까?')) {\r\n      return dispatch(removeCommentRequestAction({ postId, commentId }));\r\n    }\r\n  }, [postId, commentId]);\r\n\r\n  const onClickReportButton = useCallback(() => {\r\n    const reason = prompt('신고하는 이유를 적어주세요');\r\n\r\n    if (reason && communityUserId) {\r\n      dispatch(\r\n        reportRequestAction({\r\n          contentId: commentId,\r\n          reporter: communityUserId,\r\n          reportedPerson: commentOwnerId,\r\n          reason,\r\n          variety: 'comment',\r\n          content,\r\n        })\r\n      );\r\n    }\r\n  }, [commentOwnerId, communityUserId, commentId, content]);\r\n\r\n  return (\r\n    <ModalContainer>\r\n      <ul>\r\n        {commentOwner ? (\r\n          <>\r\n            <li onClick={onClickModifyButton}>수정</li>\r\n            <li onClick={onClickDeleteButton}>삭제</li>\r\n          </>\r\n        ) : (\r\n          <li onClick={onClickReportButton}>신고하기</li>\r\n        )}\r\n      </ul>\r\n    </ModalContainer>\r\n  );\r\n}\r\n\r\nexport default memo(CommentSettingModal);\r\n"],"sourceRoot":""}