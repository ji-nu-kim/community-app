{"version":3,"sources":["webpack://front/./components/Layouts/ProfileLayout.tsx","webpack://front/./pages/profile.tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"@redux-saga/core\"","webpack://front/external \"antd\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-daum-postcode\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\""],"names":["ProfileContainer","styled","ProfileHeader","ProfileContent","ProfileLayout","children","UserProfileModifyModal","dynamic","SearchAddressModal","Profile","dispatch","useDispatch","me","changeProfileDone","useSelector","state","user","userProfileModifyModal","setUserProfileModifyModal","useState","showSearchAddressModal","setShowSearchAdressModal","modifyCountry","setModifyCountry","openSearchAddressModal","useCallback","closeSearchAddressModal","profileModifyModalTrigger","prev","useEffect","confirm","changeCountryRequestAction","country","alert","Router","profilePhoto","nickname","Categories","map","category","id","name","process","Communities","community","communityName","getServerSideProps","wrapper","context","cookie","req","headers","axios","store","loadMyInfoRequestAction","loadCategoriesRequestAction","END","sagaTask","toPromise","memo"],"mappings":"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","file":"../pages/profile.js","sourcesContent":["import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface ProfileLayoutProps {\r\n  children: ReactNode;\r\n}\r\n\r\nconst ProfileContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n`;\r\n\r\nexport const ProfileHeader = styled.div`\r\n  padding: 1rem;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\r\n  display: grid;\r\n  grid-template-columns: auto 76px;\r\n\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    .header-image {\r\n      width: 150px;\r\n      height: 150px;\r\n      background: rgba(0, 0, 0, 0.1);\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #cacaca;\r\n        font-size: 3rem;\r\n      }\r\n    }\r\n    .header-text {\r\n      margin-left: 1rem;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      p {\r\n        font-size: 0.75rem;\r\n        color: #039be5;\r\n        font-weight: bold;\r\n      }\r\n      h1 {\r\n        color: #fff;\r\n        font-weight: bold;\r\n        font-size: 2rem;\r\n      }\r\n\r\n      .text-country {\r\n        cursor: pointer;\r\n        color: #cdcedf;\r\n        font-size: 0.8rem;\r\n        font-weight: bold;\r\n\r\n        :hover {\r\n          color: #039be5;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    button {\r\n      border: none;\r\n      color: #fff;\r\n      background: #039be5;\r\n      height: 28px;\r\n      font-size: 0.75rem;\r\n\r\n      :hover {\r\n        cursor: pointer;\r\n        background: #007bb8;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport const ProfileContent = styled.div`\r\n  display: grid;\r\n  grid-template-rows: auto;\r\n  padding: 1rem;\r\n  gap: 1rem;\r\n  h1 {\r\n    font-family: 'Black Han Sans', sans-serif;\r\n    font-size: 2rem;\r\n    color: hotpink;\r\n    margin-bottom: 1rem;\r\n  }\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, minmax(250px, auto));\r\n  }\r\n`;\r\n\r\nfunction ProfileLayout({ children }: ProfileLayoutProps) {\r\n  return <ProfileContainer>{children}</ProfileContainer>;\r\n}\r\n\r\nexport default ProfileLayout;\r\n","import AppLayout from '../components/Layouts/AppLayout';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport { GetServerSideProps } from 'next';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, {\n  ProfileContent,\n  ProfileHeader,\n} from 'components/Layouts/ProfileLayout';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\n\nconst UserProfileModifyModal = dynamic(\n  () => import('components/Modals/UserProfileModifyModal')\n);\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const { me, changeProfileDone } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userProfileModifyModal, setUserProfileModifyModal] = useState(false);\n  const [showSearchAddressModal, setShowSearchAdressModal] = useState(false);\n  const [modifyCountry, setModifyCountry] = useState('');\n\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({ country: modifyCountry }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  return (\n    <>\n      <Head>\n        <title>프로필 - community</title>\n      </Head>\n      <AppLayout>\n        <ProfileLayout>\n          <ProfileHeader>\n            <div className=\"header-left\">\n              <div className=\"header-image\">\n                {me?.profilePhoto ? (\n                  <img\n                    src={me?.profilePhoto}\n                    width=\"150\"\n                    height=\"150\"\n                    alt=\"profile-image\"\n                  />\n                ) : (\n                  <UserOutlined className=\"header-icon\" />\n                )}\n              </div>\n              <div className=\"header-text\">\n                <p>프로필</p>\n                <h1>{me?.nickname}</h1>\n                <p className=\"text-country\" onClick={openSearchAddressModal}>\n                  {me?.country}\n                </p>\n              </div>\n            </div>\n            <div className=\"header-right\">\n              <button onClick={profileModifyModalTrigger}>수정하기</button>\n            </div>\n          </ProfileHeader>\n          <ProfileContent>\n            <div>\n              <h1>나의 카테고리 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Categories?.map(category => (\n                  <div key={category.name}>\n                    <Link href={`/category/${category.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={category.name}\n                          img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h1>나의 커뮤니티 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Communities?.map(community => (\n                  <div key={community.communityName}>\n                    <Link href={`/community/${community.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={community.communityName}\n                          img={community.profilePhoto ? community.profilePhoto : null}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ProfileContent>\n        </ProfileLayout>\n\n        {userProfileModifyModal && (\n          <UserProfileModifyModal setUserProfileModifyModal={setUserProfileModifyModal} />\n        )}\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setModifyCountry}\n            type=\"village\"\n          />\n        )}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoriesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Profile);\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"@redux-saga/core\");;","module.exports = require(\"antd\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-daum-postcode\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;"],"sourceRoot":""}