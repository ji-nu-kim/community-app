{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { END } from '@redux-saga/core';\nimport { loadCategoryCommunitiesRequestAction, loadCategoryRequestAction } from 'actions/actionCommunity';\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\nimport axios from 'axios';\nimport AppLayout from 'components/Layouts/AppLayout';\nimport { useRouter } from 'next/router';\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport wrapper from 'store/configureStore';\nimport CategoryLayout, { CategoryContent, CategoryHeader } from 'components/Layouts/CategoryLayout';\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\nimport Link from 'next/link';\nimport Head from 'next/head';\n\nfunction Category() {\n  const dispatch = useDispatch();\n  const router = useRouter();\n  const {\n    changableCommunities,\n    hasMoreCommunity,\n    loadCommunitiesLoading,\n    singleCategory,\n    communityLength\n  } = useSelector(state => state.community);\n  useEffect(() => {\n    function onScroll() {\n      if (changableCommunities.length) {\n        if (window.scrollY + document.documentElement.clientHeight >= document.documentElement.scrollHeight - 300) {\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\n            const categoryId = Number(router.query.id);\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\n            dispatch(loadCategoryCommunitiesRequestAction({\n              categoryId,\n              communityId: lastId\n            }));\n          }\n        }\n      }\n    }\n\n    window.addEventListener('scroll', onScroll);\n    return () => window.removeEventListener('scroll', onScroll);\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\n\n  if (!singleCategory) {\n    return /*#__PURE__*/_jsx(\"div\", {\n      children: \"\\uC7A0\\uC2DC\\uB9CC \\uAE30\\uB2E4\\uB824\\uC8FC\\uC138\\uC694\"\n    });\n  }\n\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsxs(\"title\", {\n        children: [\"community - \", singleCategory.name, \" \\uCE74\\uD14C\\uACE0\\uB9AC\"]\n      })\n    }), /*#__PURE__*/_jsx(AppLayout, {\n      children: /*#__PURE__*/_jsxs(CategoryLayout, {\n        img: singleCategory.profilePhoto,\n        children: [/*#__PURE__*/_jsx(CategoryHeader, {\n          children: /*#__PURE__*/_jsxs(\"h1\", {\n            children: [singleCategory.name, /*#__PURE__*/_jsx(\"br\", {}), communityLength, \"\\uAC1C\\uC758 \\uCEE4\\uBBA4\\uB2C8\\uD2F0\"]\n          })\n        }), /*#__PURE__*/_jsx(CategoryContent, {\n          children: /*#__PURE__*/_jsx(\"div\", {\n            className: \"cards-container\",\n            children: changableCommunities.map(community => /*#__PURE__*/_jsx(\"div\", {\n              children: /*#__PURE__*/_jsx(Link, {\n                href: `/community/${community.id}`,\n                children: /*#__PURE__*/_jsx(\"a\", {\n                  children: /*#__PURE__*/_jsx(BoxStyleCard, {\n                    profilePhoto: community.profilePhoto,\n                    categoryName: community.Categories[0].name,\n                    country: community.country,\n                    communityName: community.communityName\n                  })\n                })\n              })\n            }, community.id))\n          })\n        })]\n      })\n    })]\n  });\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  const categoryId = Number(context.query.id);\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch(loadMyInfoRequestAction());\n  context.store.dispatch(loadCategoryRequestAction({\n    categoryId\n  }));\n  context.store.dispatch(loadCategoryCommunitiesRequestAction({\n    categoryId,\n    communityId: 0\n  }));\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default Category;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/pages/category/[id].tsx"],"names":["END","loadCategoryCommunitiesRequestAction","loadCategoryRequestAction","loadMyInfoRequestAction","axios","AppLayout","useRouter","React","useEffect","useDispatch","useSelector","wrapper","CategoryLayout","CategoryContent","CategoryHeader","BoxStyleCard","Link","Head","Category","dispatch","router","changableCommunities","hasMoreCommunity","loadCommunitiesLoading","singleCategory","communityLength","state","community","onScroll","length","window","scrollY","document","documentElement","clientHeight","scrollHeight","categoryId","Number","query","id","lastId","communityId","addEventListener","removeEventListener","name","profilePhoto","map","Categories","country","communityName","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import { END } from '@redux-saga/core';\r\nimport {\r\n  loadCategoryCommunitiesRequestAction,\r\n  loadCategoryRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport { useRouter } from 'next/router';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport CategoryLayout, {\r\n  CategoryContent,\r\n  CategoryHeader,\r\n} from 'components/Layouts/CategoryLayout';\r\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\n\r\nfunction Category() {\r\n  const dispatch = useDispatch();\r\n  const router = useRouter();\r\n  const {\r\n    changableCommunities,\r\n    hasMoreCommunity,\r\n    loadCommunitiesLoading,\r\n    singleCategory,\r\n    communityLength,\r\n  } = useSelector((state: RootStateInterface) => state.community);\r\n\r\n  useEffect(() => {\r\n    function onScroll() {\r\n      if (changableCommunities.length) {\r\n        if (\r\n          window.scrollY + document.documentElement.clientHeight >=\r\n          document.documentElement.scrollHeight - 300\r\n        ) {\r\n          if (hasMoreCommunity && !loadCommunitiesLoading) {\r\n            const categoryId = Number(router.query.id);\r\n            const lastId = changableCommunities[changableCommunities.length - 1].id;\r\n            dispatch(\r\n              loadCategoryCommunitiesRequestAction({\r\n                categoryId,\r\n                communityId: lastId,\r\n              })\r\n            );\r\n          }\r\n        }\r\n      }\r\n    }\r\n    window.addEventListener('scroll', onScroll);\r\n\r\n    return () => window.removeEventListener('scroll', onScroll);\r\n  }, [hasMoreCommunity, loadCommunitiesLoading, changableCommunities, router.query.id]);\r\n\r\n  if (!singleCategory) {\r\n    return <div>잠시만 기다려주세요</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {singleCategory.name} 카테고리</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CategoryLayout img={singleCategory.profilePhoto}>\r\n          <CategoryHeader>\r\n            <h1>\r\n              {singleCategory.name}\r\n              <br />\r\n              {communityLength}개의 커뮤니티\r\n            </h1>\r\n          </CategoryHeader>\r\n          <CategoryContent>\r\n            <div className=\"cards-container\">\r\n              {changableCommunities.map(community => (\r\n                <div key={community.id}>\r\n                  <Link href={`/community/${community.id}`}>\r\n                    <a>\r\n                      <BoxStyleCard\r\n                        profilePhoto={community.profilePhoto}\r\n                        categoryName={community.Categories[0].name}\r\n                        country={community.country}\r\n                        communityName={community.communityName}\r\n                      />\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CategoryContent>\r\n        </CategoryLayout>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const categoryId = Number(context.query.id);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCategoryRequestAction({ categoryId }));\r\n    context.store.dispatch(\r\n      loadCategoryCommunitiesRequestAction({\r\n        categoryId,\r\n        communityId: 0,\r\n      })\r\n    );\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default Category;\r\n"]},"metadata":{},"sourceType":"module"}