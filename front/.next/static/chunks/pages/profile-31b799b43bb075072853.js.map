{"version":3,"sources":["webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?8898","webpack://_N_E/./components/Layouts/ProfileLayout.tsx","webpack://_N_E/./actions/actionUser.ts","webpack://_N_E/./pages/profile.tsx","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack://_N_E/./interfaces/user/userAction.interfaces.ts"],"names":["window","__NEXT_P","push","ProfileContainer","styled","div","ProfileHeader","ProfileContent","ProfileLayout","children","loginRequestAction","data","type","actionTypesUser","LOG_IN_REQUEST","logOutRequestAction","LOG_OUT_REQUEST","removeImage","REMOVE_IMAGE","uploadImageRequestAction","UPLOAD_IMAGE_REQUEST","signUpRequestAction","SIGN_UP_REQUEST","leaveRequestAction","LEAVE_REQUEST","changeProfileRequestAction","CHANGE_PROFILE_REQUEST","changeCountryRequestAction","CHANGE_COUNTRY_REQUEST","checkNotificationRequestAction","CHECK_NOTIFICATION_REQUEST","removeNotificationRequestAction","REMOVE_NOTIFICATION_REQUEST","UserProfileModifyModal","dynamic","SearchAddressModal","Profile","dispatch","useDispatch","useSelector","state","user","me","changeProfileDone","useState","userProfileModifyModal","setUserProfileModifyModal","showSearchAddressModal","setShowSearchAdressModal","modifyCountry","setModifyCountry","openSearchAddressModal","useCallback","closeSearchAddressModal","profileModifyModalTrigger","prev","useEffect","confirm","country","alert","Router","className","profilePhoto","src","width","height","alt","nickname","onClick","Categories","map","category","href","id","prefetch","name","img","process","env","NEXT_PUBLIC_BACK_URL_KEY","Communities","community","communityName","setCountry","memo","props","ref","AntdIcon","Object","assign","icon","displayName","LOG_IN_SUCCESS","LOG_IN_ERROR","LOG_OUT_SUCCESS","LOG_OUT_ERROR","LOAD_MY_INFO_REQUEST","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_ERROR","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_ERROR","SIGN_UP_SUCCESS","SIGN_UP_ERROR","LEAVE_SUCCESS","LEAVE_ERROR","CHANGE_PROFILE_SUCCESS","CHANGE_PROFILE_ERROR","CHANGE_COUNTRY_SUCCESS","CHANGE_COUNTRY_ERROR","CHECK_NOTIFICATION_SUCCESS","CHECK_NOTIFICATION_ERROR","REMOVE_NOTIFICATION_SUCCESS","REMOVE_NOTIFICATION_ERROR","ADD_MEET_OF_ME","REMOVE_MEET_OF_ME","MODIFY_MEET_OF_ME","JOIN_MEET_OF_ME","LEAVE_MEET_OF_ME","LEAVE_COMMUNITY_OF_ME","CHANGE_COMMUNITY_OF_ME"],"mappings":"kGACKA,OAAOC,SAAWD,OAAOC,UAAY,IAAIC,KAAK,CAC7C,WACA,WACE,OAAO,EAAQ,Y,gJCGjBC,EAAmBC,IAAOC,IAAV,sFAAGD,CAAH,wEAOTE,EAAgBF,IAAOC,IAAV,mFAAGD,CAAH,8zBA0EbG,EAAiBH,IAAOC,IAAV,oFAAGD,CAAH,gQAsBZI,IAJf,YAAyD,IAAhCC,EAAgC,EAAhCA,SACvB,OAAO,cAACN,EAAD,UAAmBM,M,kCCzG5B,oWAyBaC,EAAqB,SAACC,GACjC,MAAO,CACLC,KAAMC,IAAgBC,eACtBH,SAGSI,EAAsB,WACjC,MAAO,CACLH,KAAMC,IAAgBG,kBAQbC,EAAc,WACzB,MAAO,CACLL,KAAMC,IAAgBK,eAGbC,EAA2B,SAACR,GACvC,MAAO,CACLC,KAAMC,IAAgBO,qBACtBT,SAGSU,EAAsB,SAACV,GAClC,MAAO,CACLC,KAAMC,IAAgBS,gBACtBX,SAGSY,EAAqB,SAACZ,GACjC,MAAO,CACLC,KAAMC,IAAgBW,cACtBb,SAGSc,EAA6B,SACxCd,GAEA,MAAO,CACLC,KAAMC,IAAgBa,uBACtBf,SAGSgB,EAA6B,SAAChB,GAGzC,MAAO,CACLC,KAAMC,IAAgBe,uBACtBjB,SAGSkB,EAAiC,WAC5C,MAAO,CACLjB,KAAMC,IAAgBiB,6BAGbC,EAAkC,SAACpB,GAG9C,MAAO,CACLC,KAAMC,IAAgBmB,4BACtBrB,U,qRCvEEsB,EAAyBC,KAC7B,kBAAM,0DAD8B,gEACvB,+CAETC,EAAqBD,KAAQ,kBAAM,0DAAP,gEAAc,2CAEhD,SAASE,IAAU,QACXC,EAAWC,cADA,EAEiBC,aAChC,SAACC,GAAD,OAA+BA,EAAMC,QAD/BC,EAFS,EAETA,GAAIC,EAFK,EAELA,kBAFK,EAK2CC,oBAAS,GAA9DC,EALU,KAKcC,EALd,OAM0CF,oBAAS,GAA7DG,EANU,KAMcC,EANd,OAOyBJ,mBAAS,IAA5CK,EAPU,KAOKC,EAPL,KASXC,EAAyBC,uBAAY,WACzCJ,GAAyB,KACxB,IAEGK,EAA0BD,uBAAY,WAC1CJ,GAAyB,GACzBE,EAAiB,MAChB,IAEGI,EAA4BF,uBAAY,WAC5CN,GAA0B,SAAAS,GAAI,OAAKA,OAClC,IAwBH,OAtBAC,qBAAU,WACJb,GACFG,GAA0B,KAE3B,CAACH,IAEJa,qBAAU,WACc,KAAlBP,IACEQ,QAAQ,sBAAD,OAAQR,EAAR,6DACTZ,EAASV,YAA2B,CAAE+B,QAAST,KAE/CU,MAAM,2CAGT,CAACV,IAEJO,qBAAU,WACHd,GACHkB,IAAO1D,KAAK,OAEb,CAACwC,IAGF,qCACE,cAAC,IAAD,UACE,qEAEF,eAAC,UAAD,WACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,sBAAKmB,UAAU,cAAf,UACE,qBAAKA,UAAU,eAAf,SACK,OAAFnB,QAAE,IAAFA,KAAIoB,aACH,qBACEC,IAAG,OAAErB,QAAF,IAAEA,OAAF,EAAEA,EAAIoB,aACTE,MAAM,MACNC,OAAO,MACPC,IAAI,kBAGN,cAAC,IAAD,CAAcL,UAAU,kBAG5B,sBAAKA,UAAU,cAAf,UACE,mDACA,oCAAKnB,QAAL,IAAKA,OAAL,EAAKA,EAAIyB,WACT,mBAAGN,UAAU,eAAeO,QAASjB,EAArC,gBACGT,QADH,IACGA,OADH,EACGA,EAAIgB,gBAIX,qBAAKG,UAAU,eAAf,SACE,wBAAQO,QAASd,EAAjB,2CAGJ,eAAC,IAAD,WACE,gCACE,0FACA,qBAAKO,UAAU,kBAAf,gBACGnB,QADH,IACGA,GADH,UACGA,EAAI2B,kBADP,aACG,EAAgBC,KAAI,SAAAC,GAAQ,OAC3B,8BACE,cAAC,IAAD,CAAMC,KAAI,oBAAeD,EAASE,IAAMC,UAAU,EAAlD,SACE,4BACE,cAAC,IAAD,CACEC,KAAMJ,EAASI,KACfC,IAAG,UAAKC,EAAQC,IAAIC,yBAAjB,YAA6CR,EAAST,cACzDE,MAAM,MACNC,OAAO,aAPLM,EAASI,cAezB,gCACE,0FACA,qBAAKd,UAAU,kBAAf,gBACGnB,QADH,IACGA,GADH,UACGA,EAAIsC,mBADP,aACG,EAAiBV,KAAI,SAAAW,GAAS,OAC7B,8BACE,cAAC,IAAD,CAAMT,KAAI,qBAAgBS,EAAUR,IAAMC,UAAU,EAApD,SACE,4BACE,cAAC,IAAD,CACEC,KAAMM,EAAUC,cAChBN,IAAKK,EAAUnB,aAAemB,EAAUnB,aAAe,KACvDE,MAAM,MACNC,OAAO,aAPLgB,EAAUC,6BAkB7BrC,GACC,cAACZ,EAAD,CAAwBa,0BAA2BA,IAEpDC,GACC,cAACZ,EAAD,CACEkB,wBAAyBA,EACzB8B,WAAYjC,EACZtC,KAAK,kB,SAsBFwE,yBAAKhD,I,wEC5KL,EADI,CAAE,KAAQ,CAAE,IAAO,MAAO,MAAS,CAAE,QAAW,gBAAiB,UAAa,SAAW,SAAY,CAAC,CAAE,IAAO,OAAQ,MAAS,CAAE,EAAK,6qBAAirB,KAAQ,OAAQ,MAAS,Y,YCKh2B,EAAe,SAAsBiD,EAAOC,GAC9C,OAAoB,gBAAoBC,EAAA,EAAUC,OAAOC,OAAO,GAAIJ,EAAO,CACzEC,IAAKA,EACLI,KAAM,MAIV,EAAaC,YAAc,eACC,iBAAiB,I,kCCX7C,kCAAO,IAAM9E,EAAkB,CAC7BC,eAAgB,iBAChB8E,eAAgB,iBAChBC,aAAc,eACd7E,gBAAiB,kBACjB8E,gBAAiB,kBACjBC,cAAe,gBACfC,qBAAsB,uBACtBC,qBAAsB,uBACtBC,mBAAoB,qBACpB9E,qBAAsB,uBACtB+E,qBAAsB,uBACtBC,mBAAoB,qBACpBlF,aAAc,eACdI,gBAAiB,kBACjB+E,gBAAiB,kBACjBC,cAAe,gBACf9E,cAAe,gBACf+E,cAAe,gBACfC,YAAa,cACb9E,uBAAwB,yBACxB+E,uBAAwB,yBACxBC,qBAAsB,uBACtB9E,uBAAwB,yBACxB+E,uBAAwB,yBACxBC,qBAAsB,uBACtB9E,2BAA4B,6BAC5B+E,2BAA4B,6BAC5BC,yBAA0B,2BAC1B9E,4BAA6B,8BAC7B+E,4BAA6B,8BAC7BC,0BAA2B,4BAC3BC,eAAgB,iBAChBC,kBAAmB,oBACnBC,kBAAmB,oBACnBC,gBAAiB,kBACjBC,iBAAkB,mBAClBC,sBAAuB,wBACvBC,uBAAwB,4B","file":"static/chunks/pages/profile-31b799b43bb075072853.js","sourcesContent":["\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/profile\",\n      function () {\n        return require(\"private-next-pages/profile.tsx\");\n      }\n    ]);\n  ","import React, { ReactNode } from 'react';\nimport styled from 'styled-components';\n\ninterface ProfileLayoutProps {\n  children: ReactNode;\n}\n\nconst ProfileContainer = styled.div`\n  display: grid;\n  grid-template-rows: 200px auto;\n  width: 100%;\n  height: 100%;\n`;\n\nexport const ProfileHeader = styled.div`\n  padding: 1rem;\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\n  display: grid;\n  grid-template-columns: auto 76px;\n\n  .header-left {\n    display: flex;\n    align-items: center;\n    .header-image {\n      width: 150px;\n      height: 150px;\n      background: rgba(0, 0, 0, 0.1);\n      border-radius: 50%;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n\n      img {\n        border-radius: 50%;\n        object-fit: cover;\n      }\n\n      .header-icon {\n        color: #cacaca;\n        font-size: 3rem;\n      }\n    }\n    .header-text {\n      margin-left: 1rem;\n      height: 100%;\n      display: flex;\n      flex-direction: column;\n      justify-content: center;\n\n      p {\n        font-size: 0.75rem;\n        color: #039be5;\n        font-weight: bold;\n      }\n      h1 {\n        color: #fff;\n        font-weight: bold;\n        font-size: 2rem;\n      }\n\n      .text-country {\n        cursor: pointer;\n        color: #cdcedf;\n        font-size: 0.8rem;\n        font-weight: bold;\n\n        :hover {\n          color: #039be5;\n        }\n      }\n    }\n  }\n  .header-right {\n    button {\n      border: none;\n      color: #fff;\n      background: #039be5;\n      height: 28px;\n      font-size: 0.75rem;\n\n      :hover {\n        cursor: pointer;\n        background: #007bb8;\n      }\n    }\n  }\n`;\n\nexport const ProfileContent = styled.div`\n  display: grid;\n  grid-template-rows: auto;\n  padding: 1rem;\n  gap: 1rem;\n  h1 {\n    font-family: 'Black Han Sans', sans-serif;\n    font-size: 2rem;\n    color: hotpink;\n    margin-bottom: 1rem;\n  }\n  .cards-container {\n    display: grid;\n    gap: 1rem;\n    grid-template-columns: repeat(auto-fill, minmax(250px, auto));\n  }\n`;\n\nfunction ProfileLayout({ children }: ProfileLayoutProps) {\n  return <ProfileContainer>{children}</ProfileContainer>;\n}\n\nexport default ProfileLayout;\n","import { IChangeCommunityInfoReturnData } from 'interfaces';\nimport { IMeet } from 'interfaces/db';\nimport {\n  actionTypesUser,\n  ILogInRequest,\n  ILogOutRequest,\n  ILoadMyInfoRequest,\n  IUploadImageRequest,\n  ISignUpRequest,\n  ILeaveRequest,\n  IChangeProfileRequest,\n  IChangeCountryRequest,\n  ICheckNotificationRequest,\n  IRemoveNotificationRequest,\n  IAddMeetOfMe,\n  IRemoveMeetOfMe,\n  IModifyMeetOfMe,\n  IJoinMeeetOfMe,\n  ILeaveMeetOfMe,\n  ILeaveCommunityOfMe,\n  IChangeCommunityOfMe,\n  SignUpData,\n  LoginData,\n  IRemoveUserImage,\n  ChangeProfileData,\n} from '../interfaces/user/userAction.interfaces';\n\nexport const loginRequestAction = (data: LoginData): ILogInRequest => {\n  return {\n    type: actionTypesUser.LOG_IN_REQUEST,\n    data,\n  };\n};\nexport const logOutRequestAction = (): ILogOutRequest => {\n  return {\n    type: actionTypesUser.LOG_OUT_REQUEST,\n  };\n};\nexport const loadMyInfoRequestAction = (): ILoadMyInfoRequest => {\n  return {\n    type: actionTypesUser.LOAD_MY_INFO_REQUEST,\n  };\n};\nexport const removeImage = (): IRemoveUserImage => {\n  return {\n    type: actionTypesUser.REMOVE_IMAGE,\n  };\n};\nexport const uploadImageRequestAction = (data: FormData): IUploadImageRequest => {\n  return {\n    type: actionTypesUser.UPLOAD_IMAGE_REQUEST,\n    data,\n  };\n};\nexport const signUpRequestAction = (data: SignUpData): ISignUpRequest => {\n  return {\n    type: actionTypesUser.SIGN_UP_REQUEST,\n    data,\n  };\n};\nexport const leaveRequestAction = (data: { userId: number }): ILeaveRequest => {\n  return {\n    type: actionTypesUser.LEAVE_REQUEST,\n    data,\n  };\n};\nexport const changeProfileRequestAction = (\n  data: ChangeProfileData\n): IChangeProfileRequest => {\n  return {\n    type: actionTypesUser.CHANGE_PROFILE_REQUEST,\n    data,\n  };\n};\nexport const changeCountryRequestAction = (data: {\n  country: string;\n}): IChangeCountryRequest => {\n  return {\n    type: actionTypesUser.CHANGE_COUNTRY_REQUEST,\n    data,\n  };\n};\nexport const checkNotificationRequestAction = (): ICheckNotificationRequest => {\n  return {\n    type: actionTypesUser.CHECK_NOTIFICATION_REQUEST,\n  };\n};\nexport const removeNotificationRequestAction = (data: {\n  notificationId: number;\n}): IRemoveNotificationRequest => {\n  return {\n    type: actionTypesUser.REMOVE_NOTIFICATION_REQUEST,\n    data,\n  };\n};\nexport const addMeetOfMe = (data: IMeet): IAddMeetOfMe => {\n  return {\n    type: actionTypesUser.ADD_MEET_OF_ME,\n    data,\n  };\n};\nexport const removeMeetOfMe = (data: { meetId: number }): IRemoveMeetOfMe => {\n  return {\n    type: actionTypesUser.REMOVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const modifyMeetOfMe = (data: IMeet): IModifyMeetOfMe => {\n  return {\n    type: actionTypesUser.MODIFY_MEET_OF_ME,\n    data,\n  };\n};\nexport const joinMeetOfMe = (data: IMeet): IJoinMeeetOfMe => {\n  return {\n    type: actionTypesUser.JOIN_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveMeetOfMe = (data: {\n  meetId: number;\n  userId: number;\n}): ILeaveMeetOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_MEET_OF_ME,\n    data,\n  };\n};\nexport const leaveCommunityOfMe = (data: {\n  communityId: number;\n  userId: number;\n}): ILeaveCommunityOfMe => {\n  return {\n    type: actionTypesUser.LEAVE_COMMUNITY_OF_ME,\n    data,\n  };\n};\nexport const changeCommunityOfMe = (\n  data: IChangeCommunityInfoReturnData\n): IChangeCommunityOfMe => {\n  return {\n    type: actionTypesUser.CHANGE_COMMUNITY_OF_ME,\n    data,\n  };\n};\n","import AppLayout from '../components/Layouts/AppLayout';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport { GetServerSideProps } from 'next';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, {\n  ProfileContent,\n  ProfileHeader,\n} from 'components/Layouts/ProfileLayout';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\n\nconst UserProfileModifyModal = dynamic(\n  () => import('components/Modals/UserProfileModifyModal')\n);\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const { me, changeProfileDone } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userProfileModifyModal, setUserProfileModifyModal] = useState(false);\n  const [showSearchAddressModal, setShowSearchAdressModal] = useState(false);\n  const [modifyCountry, setModifyCountry] = useState('');\n\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({ country: modifyCountry }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  return (\n    <>\n      <Head>\n        <title>프로필 - community</title>\n      </Head>\n      <AppLayout>\n        <ProfileLayout>\n          <ProfileHeader>\n            <div className=\"header-left\">\n              <div className=\"header-image\">\n                {me?.profilePhoto ? (\n                  <img\n                    src={me?.profilePhoto}\n                    width=\"150\"\n                    height=\"150\"\n                    alt=\"profile-image\"\n                  />\n                ) : (\n                  <UserOutlined className=\"header-icon\" />\n                )}\n              </div>\n              <div className=\"header-text\">\n                <p>프로필</p>\n                <h1>{me?.nickname}</h1>\n                <p className=\"text-country\" onClick={openSearchAddressModal}>\n                  {me?.country}\n                </p>\n              </div>\n            </div>\n            <div className=\"header-right\">\n              <button onClick={profileModifyModalTrigger}>수정하기</button>\n            </div>\n          </ProfileHeader>\n          <ProfileContent>\n            <div>\n              <h1>나의 카테고리 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Categories?.map(category => (\n                  <div key={category.name}>\n                    <Link href={`/category/${category.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={category.name}\n                          img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h1>나의 커뮤니티 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Communities?.map(community => (\n                  <div key={community.communityName}>\n                    <Link href={`/community/${community.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={community.communityName}\n                          img={community.profilePhoto ? community.profilePhoto : null}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ProfileContent>\n        </ProfileLayout>\n\n        {userProfileModifyModal && (\n          <UserProfileModifyModal setUserProfileModifyModal={setUserProfileModifyModal} />\n        )}\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setModifyCountry}\n            type=\"village\"\n          />\n        )}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoriesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Profile);\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","import { IChangeCommunityInfoReturnData } from 'interfaces/community/communityAction.interfaces';\nimport { IMeet, INotice, IUser } from '../db';\n\nexport const actionTypesUser = {\n  LOG_IN_REQUEST: 'LOG_IN_REQUEST',\n  LOG_IN_SUCCESS: 'LOG_IN_SUCCESS',\n  LOG_IN_ERROR: 'LOG_IN_ERROR',\n  LOG_OUT_REQUEST: 'LOG_OUT_REQUEST',\n  LOG_OUT_SUCCESS: 'LOG_OUT_SUCCESS',\n  LOG_OUT_ERROR: 'LOG_OUT_ERROR',\n  LOAD_MY_INFO_REQUEST: 'LOAD_MY_INFO_REQUEST',\n  LOAD_MY_INFO_SUCCESS: 'LOAD_MY_INFO_SUCCESS',\n  LOAD_MY_INFO_ERROR: 'LOAD_MY_INFO_ERROR',\n  UPLOAD_IMAGE_REQUEST: 'UPLOAD_IMAGE_REQUEST',\n  UPLOAD_IMAGE_SUCCESS: 'UPLOAD_IMAGE_SUCCESS',\n  UPLOAD_IMAGE_ERROR: 'UPLOAD_IMAGE_ERROR',\n  REMOVE_IMAGE: 'REMOVE_IMAGE',\n  SIGN_UP_REQUEST: 'SIGN_UP_REQUEST',\n  SIGN_UP_SUCCESS: 'SIGN_UP_SUCCESS',\n  SIGN_UP_ERROR: 'SIGN_UP_ERROR',\n  LEAVE_REQUEST: 'LEAVE_REQUEST',\n  LEAVE_SUCCESS: 'LEAVE_SUCCESS',\n  LEAVE_ERROR: 'LEAVE_ERROR',\n  CHANGE_PROFILE_REQUEST: 'CHANGE_PROFILE_REQUEST',\n  CHANGE_PROFILE_SUCCESS: 'CHANGE_PROFILE_SUCCESS',\n  CHANGE_PROFILE_ERROR: 'CHANGE_PROFILE_ERROR',\n  CHANGE_COUNTRY_REQUEST: 'CHANGE_COUNTRY_REQUEST',\n  CHANGE_COUNTRY_SUCCESS: 'CHANGE_COUNTRY_SUCCESS',\n  CHANGE_COUNTRY_ERROR: 'CHANGE_COUNTRY_ERROR',\n  CHECK_NOTIFICATION_REQUEST: 'CHECK_NOTIFICATION_REQUEST',\n  CHECK_NOTIFICATION_SUCCESS: 'CHECK_NOTIFICATION_SUCCESS',\n  CHECK_NOTIFICATION_ERROR: 'CHECK_NOTIFICATION_ERROR',\n  REMOVE_NOTIFICATION_REQUEST: 'REMOVE_NOTIFICATION_REQUEST',\n  REMOVE_NOTIFICATION_SUCCESS: 'REMOVE_NOTIFICATION_SUCCESS',\n  REMOVE_NOTIFICATION_ERROR: 'REMOVE_NOTIFICATION_ERROR',\n  ADD_MEET_OF_ME: 'ADD_MEET_OF_ME',\n  REMOVE_MEET_OF_ME: 'REMOVE_MEET_OF_ME',\n  MODIFY_MEET_OF_ME: 'MODIFY_MEET_OF_ME',\n  JOIN_MEET_OF_ME: 'JOIN_MEET_OF_ME',\n  LEAVE_MEET_OF_ME: 'LEAVE_MEET_OF_ME',\n  LEAVE_COMMUNITY_OF_ME: 'LEAVE_COMMUNITY_OF_ME',\n  CHANGE_COMMUNITY_OF_ME: 'CHANGE_COMMUNITY_OF_ME',\n} as const;\nexport interface LoginData {\n  email: string;\n  password: string;\n}\nexport interface ILogInRequest {\n  type: typeof actionTypesUser.LOG_IN_REQUEST;\n  data: LoginData;\n}\nexport interface ILogInSuccess {\n  type: typeof actionTypesUser.LOG_IN_SUCCESS;\n}\nexport interface ILogInError {\n  type: typeof actionTypesUser.LOG_IN_ERROR;\n  error: Error;\n}\nexport interface ILogOutRequest {\n  type: typeof actionTypesUser.LOG_OUT_REQUEST;\n}\nexport interface ILogOutSuccess {\n  type: typeof actionTypesUser.LOG_OUT_SUCCESS;\n}\nexport interface ILogOutError {\n  type: typeof actionTypesUser.LOG_OUT_ERROR;\n  error: Error;\n}\nexport interface ILoadMyInfoRequest {\n  type: typeof actionTypesUser.LOAD_MY_INFO_REQUEST;\n}\nexport interface ILoadMyInfoSuccess {\n  type: typeof actionTypesUser.LOAD_MY_INFO_SUCCESS;\n  data: IUser;\n}\nexport interface ILoadMyInfoError {\n  type: typeof actionTypesUser.LOAD_MY_INFO_ERROR;\n  error: Error;\n}\nexport interface IRemoveUserImage {\n  type: typeof actionTypesUser.REMOVE_IMAGE;\n}\nexport interface IUploadImageRequest {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_REQUEST;\n  data: FormData;\n}\nexport interface IUploadImageSuccess {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_SUCCESS;\n  data: string[];\n}\nexport interface IUploadImageError {\n  type: typeof actionTypesUser.UPLOAD_IMAGE_ERROR;\n  error: Error;\n}\nexport interface SignUpData {\n  email: string;\n  nickname: string;\n  password: string;\n  country: string;\n}\nexport interface ISignUpRequest {\n  type: typeof actionTypesUser.SIGN_UP_REQUEST;\n  data: SignUpData;\n}\nexport interface ISignUpSuccess {\n  type: typeof actionTypesUser.SIGN_UP_SUCCESS;\n}\nexport interface ISignUpError {\n  type: typeof actionTypesUser.SIGN_UP_ERROR;\n  error: Error;\n}\nexport interface ILeaveRequest {\n  type: typeof actionTypesUser.LEAVE_REQUEST;\n  data: { userId: number };\n}\nexport interface ILeaveSuccess {\n  type: typeof actionTypesUser.LEAVE_SUCCESS;\n}\nexport interface ILeaveError {\n  type: typeof actionTypesUser.LEAVE_ERROR;\n  error: Error;\n}\nexport interface ChangeProfileData {\n  nickname: string;\n  profilePhoto: string[];\n  category: string[];\n}\nexport interface IChangeProfileRequest {\n  type: typeof actionTypesUser.CHANGE_PROFILE_REQUEST;\n  data: ChangeProfileData;\n}\nexport interface IChangeProfileSuccess {\n  type: typeof actionTypesUser.CHANGE_PROFILE_SUCCESS;\n  data: IUser;\n}\nexport interface IChangeProfileError {\n  type: typeof actionTypesUser.CHANGE_PROFILE_ERROR;\n  error: Error;\n}\nexport interface IChangeCountryRequest {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_REQUEST;\n  data: { country: string };\n}\nexport interface IChangeCountrySuccess {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_SUCCESS;\n  data: { country: string };\n}\nexport interface IChangeCountryError {\n  type: typeof actionTypesUser.CHANGE_COUNTRY_ERROR;\n  error: Error;\n}\nexport interface ICheckNotificationRequest {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_REQUEST;\n}\nexport interface ICheckNotificationSuccess {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_SUCCESS;\n  data: INotice[];\n}\nexport interface ICheckNotificationError {\n  type: typeof actionTypesUser.CHECK_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IRemoveNotificationRequest {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_REQUEST;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationSuccess {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_SUCCESS;\n  data: { notificationId: number };\n}\nexport interface IRemoveNotificationError {\n  type: typeof actionTypesUser.REMOVE_NOTIFICATION_ERROR;\n  error: Error;\n}\nexport interface IAddMeetOfMe {\n  type: typeof actionTypesUser.ADD_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IRemoveMeetOfMe {\n  type: typeof actionTypesUser.REMOVE_MEET_OF_ME;\n  data: { meetId: number };\n}\nexport interface IModifyMeetOfMe {\n  type: typeof actionTypesUser.MODIFY_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface IJoinMeeetOfMe {\n  type: typeof actionTypesUser.JOIN_MEET_OF_ME;\n  data: IMeet;\n}\nexport interface ILeaveMeetOfMe {\n  type: typeof actionTypesUser.LEAVE_MEET_OF_ME;\n  data: { meetId: number; userId: number };\n}\nexport interface ILeaveCommunityOfMe {\n  type: typeof actionTypesUser.LEAVE_COMMUNITY_OF_ME;\n  data: { communityId: number; userId: number };\n}\n\nexport interface IChangeCommunityOfMe {\n  type: typeof actionTypesUser.CHANGE_COMMUNITY_OF_ME;\n  data: IChangeCommunityInfoReturnData;\n}\n\nexport type ActionsUser =\n  | ILogInRequest\n  | ILogInSuccess\n  | ILogInError\n  | ILogOutRequest\n  | ILogOutSuccess\n  | ILogOutError\n  | ILoadMyInfoRequest\n  | ILoadMyInfoSuccess\n  | ILoadMyInfoError\n  | IUploadImageRequest\n  | IUploadImageSuccess\n  | IUploadImageError\n  | IRemoveUserImage\n  | ISignUpRequest\n  | ISignUpSuccess\n  | ISignUpError\n  | ILeaveRequest\n  | ILeaveSuccess\n  | ILeaveError\n  | IChangeProfileRequest\n  | IChangeProfileSuccess\n  | IChangeProfileError\n  | IChangeCountryRequest\n  | IChangeCountrySuccess\n  | IChangeCountryError\n  | ICheckNotificationRequest\n  | ICheckNotificationSuccess\n  | ICheckNotificationError\n  | IRemoveNotificationRequest\n  | IRemoveNotificationSuccess\n  | IRemoveNotificationError\n  | IAddMeetOfMe\n  | IRemoveMeetOfMe\n  | IModifyMeetOfMe\n  | IJoinMeeetOfMe\n  | ILeaveMeetOfMe\n  | ILeaveCommunityOfMe\n  | IChangeCommunityOfMe;\n"],"sourceRoot":""}