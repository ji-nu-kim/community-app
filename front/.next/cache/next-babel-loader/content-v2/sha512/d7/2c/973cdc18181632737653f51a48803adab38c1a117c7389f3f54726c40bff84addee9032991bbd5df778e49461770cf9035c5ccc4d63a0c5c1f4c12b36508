{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport AppLayout from '../components/Layouts/AppLayout';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, { ProfileContent, ProfileHeader } from 'components/Layouts/ProfileLayout';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\nconst UserProfileModifyModal = dynamic(() => import('components/Modals/UserProfileModifyModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/UserProfileModifyModal')],\n    modules: ['components/Modals/UserProfileModifyModal']\n  }\n});\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/SearchAddressModal')],\n    modules: ['components/Modals/SearchAddressModal']\n  }\n});\n\nfunction Profile() {\n  var _me$Categories, _me$Communities;\n\n  const dispatch = useDispatch();\n  const {\n    me,\n    changeProfileDone\n  } = useSelector(state => state.user);\n  const {\n    0: userProfileModifyModal,\n    1: setUserProfileModifyModal\n  } = useState(false);\n  const {\n    0: showSearchAddressModal,\n    1: setShowSearchAdressModal\n  } = useState(false);\n  const {\n    0: modifyCountry,\n    1: setModifyCountry\n  } = useState('');\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({\n          country: modifyCountry\n        }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"\\uD504\\uB85C\\uD544 - community\"\n      })\n    }), /*#__PURE__*/_jsxs(AppLayout, {\n      children: [/*#__PURE__*/_jsxs(ProfileLayout, {\n        children: [/*#__PURE__*/_jsxs(ProfileHeader, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            className: \"header-left\",\n            children: [/*#__PURE__*/_jsx(\"div\", {\n              className: \"header-image\",\n              children: me !== null && me !== void 0 && me.profilePhoto ? /*#__PURE__*/_jsx(\"img\", {\n                src: me === null || me === void 0 ? void 0 : me.profilePhoto,\n                width: \"150\",\n                height: \"150\",\n                alt: \"profile-image\"\n              }) : /*#__PURE__*/_jsx(UserOutlined, {\n                className: \"header-icon\"\n              })\n            }), /*#__PURE__*/_jsxs(\"div\", {\n              className: \"header-text\",\n              children: [/*#__PURE__*/_jsx(\"p\", {\n                children: \"\\uD504\\uB85C\\uD544\"\n              }), /*#__PURE__*/_jsx(\"h1\", {\n                children: me === null || me === void 0 ? void 0 : me.nickname\n              }), /*#__PURE__*/_jsx(\"p\", {\n                className: \"text-country\",\n                onClick: openSearchAddressModal,\n                children: me === null || me === void 0 ? void 0 : me.country\n              })]\n            })]\n          }), /*#__PURE__*/_jsx(\"div\", {\n            className: \"header-right\",\n            children: /*#__PURE__*/_jsx(\"button\", {\n              onClick: profileModifyModalTrigger,\n              children: \"\\uC218\\uC815\\uD558\\uAE30\"\n            })\n          })]\n        }), /*#__PURE__*/_jsxs(ProfileContent, {\n          children: [/*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              children: \"\\uB098\\uC758 \\uCE74\\uD14C\\uACE0\\uB9AC \\uB9AC\\uC2A4\\uD2B8\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"cards-container\",\n              children: me === null || me === void 0 ? void 0 : (_me$Categories = me.Categories) === null || _me$Categories === void 0 ? void 0 : _me$Categories.map(category => /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: `/category/${category.id}`,\n                  prefetch: false,\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: /*#__PURE__*/_jsx(RoundStyleCard, {\n                      name: category.name,\n                      img: `${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`,\n                      width: \"240\",\n                      height: \"220\"\n                    })\n                  })\n                })\n              }, category.name))\n            })]\n          }), /*#__PURE__*/_jsxs(\"div\", {\n            children: [/*#__PURE__*/_jsx(\"h1\", {\n              children: \"\\uB098\\uC758 \\uCEE4\\uBBA4\\uB2C8\\uD2F0 \\uB9AC\\uC2A4\\uD2B8\"\n            }), /*#__PURE__*/_jsx(\"div\", {\n              className: \"cards-container\",\n              children: me === null || me === void 0 ? void 0 : (_me$Communities = me.Communities) === null || _me$Communities === void 0 ? void 0 : _me$Communities.map(community => /*#__PURE__*/_jsx(\"div\", {\n                children: /*#__PURE__*/_jsx(Link, {\n                  href: `/community/${community.id}`,\n                  children: /*#__PURE__*/_jsx(\"a\", {\n                    children: /*#__PURE__*/_jsx(RoundStyleCard, {\n                      name: community.communityName,\n                      img: community.profilePhoto ? community.profilePhoto : null,\n                      width: \"240\",\n                      height: \"220\"\n                    })\n                  })\n                })\n              }, community.communityName))\n            })]\n          })]\n        })]\n      }), userProfileModifyModal && /*#__PURE__*/_jsx(UserProfileModifyModal, {\n        setUserProfileModifyModal: setUserProfileModifyModal\n      }), showSearchAddressModal && /*#__PURE__*/_jsx(SearchAddressModal, {\n        closeSearchAddressModal: closeSearchAddressModal,\n        setCountry: setModifyCountry,\n        type: \"village\"\n      })]\n    })]\n  });\n}\n\nexport const getServerSideProps = wrapper.getServerSideProps(async context => {\n  const cookie = context.req ? context.req.headers.cookie : '';\n  axios.defaults.headers.Cookie = '';\n\n  if (context.req && cookie) {\n    axios.defaults.headers.Cookie = cookie;\n  }\n\n  context.store.dispatch(loadMyInfoRequestAction());\n  context.store.dispatch(loadCategoriesRequestAction());\n  context.store.dispatch(END);\n  await context.store.sagaTask.toPromise();\n});\nexport default /*#__PURE__*/memo(Profile);","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/pages/profile.tsx"],"names":["AppLayout","Link","Head","Router","dynamic","React","memo","useCallback","useEffect","useState","useDispatch","useSelector","changeCountryRequestAction","loadMyInfoRequestAction","wrapper","axios","END","UserOutlined","ProfileLayout","ProfileContent","ProfileHeader","loadCategoriesRequestAction","RoundStyleCard","UserProfileModifyModal","SearchAddressModal","Profile","dispatch","me","changeProfileDone","state","user","userProfileModifyModal","setUserProfileModifyModal","showSearchAddressModal","setShowSearchAdressModal","modifyCountry","setModifyCountry","openSearchAddressModal","closeSearchAddressModal","profileModifyModalTrigger","prev","confirm","country","alert","push","profilePhoto","nickname","Categories","map","category","id","name","process","env","NEXT_PUBLIC_BACK_URL_KEY","Communities","community","communityName","getServerSideProps","context","cookie","req","headers","defaults","Cookie","store","sagaTask","toPromise"],"mappings":"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","sourcesContent":["import AppLayout from '../components/Layouts/AppLayout';\nimport { RootStateInterface } from '../interfaces/RootState';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { memo, useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeCountryRequestAction, loadMyInfoRequestAction } from 'actions/actionUser';\nimport { GetServerSideProps } from 'next';\nimport wrapper from 'store/configureStore';\nimport axios from 'axios';\nimport { END } from '@redux-saga/core';\nimport { UserOutlined } from '@ant-design/icons';\nimport ProfileLayout, {\n  ProfileContent,\n  ProfileHeader,\n} from 'components/Layouts/ProfileLayout';\nimport { loadCategoriesRequestAction } from 'actions/actionCommunity';\nimport RoundStyleCard from 'components/Cards/RoundStyleCard';\n\nconst UserProfileModifyModal = dynamic(\n  () => import('components/Modals/UserProfileModifyModal')\n);\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\nfunction Profile() {\n  const dispatch = useDispatch();\n  const { me, changeProfileDone } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userProfileModifyModal, setUserProfileModifyModal] = useState(false);\n  const [showSearchAddressModal, setShowSearchAdressModal] = useState(false);\n  const [modifyCountry, setModifyCountry] = useState('');\n\n  const openSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAdressModal(false);\n    setModifyCountry('');\n  }, []);\n\n  const profileModifyModalTrigger = useCallback(() => {\n    setUserProfileModifyModal(prev => !prev);\n  }, []);\n\n  useEffect(() => {\n    if (changeProfileDone) {\n      setUserProfileModifyModal(false);\n    }\n  }, [changeProfileDone]);\n\n  useEffect(() => {\n    if (modifyCountry !== '') {\n      if (confirm(`주소를 ${modifyCountry}로 변경하시겠습니까?`)) {\n        dispatch(changeCountryRequestAction({ country: modifyCountry }));\n      } else {\n        alert('취소했습니다');\n      }\n    }\n  }, [modifyCountry]);\n\n  useEffect(() => {\n    if (!me) {\n      Router.push('/');\n    }\n  }, [me]);\n\n  return (\n    <>\n      <Head>\n        <title>프로필 - community</title>\n      </Head>\n      <AppLayout>\n        <ProfileLayout>\n          <ProfileHeader>\n            <div className=\"header-left\">\n              <div className=\"header-image\">\n                {me?.profilePhoto ? (\n                  <img\n                    src={me?.profilePhoto}\n                    width=\"150\"\n                    height=\"150\"\n                    alt=\"profile-image\"\n                  />\n                ) : (\n                  <UserOutlined className=\"header-icon\" />\n                )}\n              </div>\n              <div className=\"header-text\">\n                <p>프로필</p>\n                <h1>{me?.nickname}</h1>\n                <p className=\"text-country\" onClick={openSearchAddressModal}>\n                  {me?.country}\n                </p>\n              </div>\n            </div>\n            <div className=\"header-right\">\n              <button onClick={profileModifyModalTrigger}>수정하기</button>\n            </div>\n          </ProfileHeader>\n          <ProfileContent>\n            <div>\n              <h1>나의 카테고리 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Categories?.map(category => (\n                  <div key={category.name}>\n                    <Link href={`/category/${category.id}`} prefetch={false}>\n                      <a>\n                        <RoundStyleCard\n                          name={category.name}\n                          img={`${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${category.profilePhoto}`}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n            <div>\n              <h1>나의 커뮤니티 리스트</h1>\n              <div className=\"cards-container\">\n                {me?.Communities?.map(community => (\n                  <div key={community.communityName}>\n                    <Link href={`/community/${community.id}`}>\n                      <a>\n                        <RoundStyleCard\n                          name={community.communityName}\n                          img={community.profilePhoto ? community.profilePhoto : null}\n                          width=\"240\"\n                          height=\"220\"\n                        />\n                      </a>\n                    </Link>\n                  </div>\n                ))}\n              </div>\n            </div>\n          </ProfileContent>\n        </ProfileLayout>\n\n        {userProfileModifyModal && (\n          <UserProfileModifyModal setUserProfileModifyModal={setUserProfileModifyModal} />\n        )}\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setModifyCountry}\n            type=\"village\"\n          />\n        )}\n      </AppLayout>\n    </>\n  );\n}\n\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\n  async context => {\n    const cookie = context.req ? context.req.headers.cookie : '';\n    axios.defaults.headers.Cookie = '';\n    if (context.req && cookie) {\n      axios.defaults.headers.Cookie = cookie;\n    }\n    context.store.dispatch(loadMyInfoRequestAction());\n    context.store.dispatch(loadCategoriesRequestAction());\n    context.store.dispatch(END);\n    await context.store.sagaTask.toPromise();\n  }\n);\n\nexport default memo(Profile);\n"]},"metadata":{},"sourceType":"module"}