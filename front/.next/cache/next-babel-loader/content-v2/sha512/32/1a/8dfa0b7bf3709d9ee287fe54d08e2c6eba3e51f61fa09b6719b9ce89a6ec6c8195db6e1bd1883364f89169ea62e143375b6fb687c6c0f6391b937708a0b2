{"ast":null,"code":"import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\nimport { actionTypesUser } from '../interfaces/user/userAction.interfaces';\nimport axios from 'axios';\n\nfunction loginAPI(data) {\n  return axios.post('/user/login', data);\n}\n\nfunction* logIn(action) {\n  try {\n    yield call(loginAPI, action.data);\n    yield put({\n      type: actionTypesUser.LOG_IN_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOG_IN_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\n\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: actionTypesUser.LOG_OUT_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOG_OUT_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\n\nfunction* loadMyInfo() {\n  try {\n    const result = yield call(loadMyInfoAPI);\n    yield put({\n      type: actionTypesUser.LOAD_MY_INFO_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOAD_MY_INFO_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction uploadImageAPI(data) {\n  return axios.post('/user/image', data);\n}\n\nfunction* uploadImage(action) {\n  try {\n    const result = yield call(uploadImageAPI, action.data);\n    yield put({\n      type: actionTypesUser.UPLOAD_IMAGE_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.UPLOAD_IMAGE_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction signUpAPI(data) {\n  return axios.post('/user/signup', data);\n}\n\nfunction* signUp(action) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: actionTypesUser.SIGN_UP_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.SIGN_UP_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction leaveAPI(data) {\n  return axios.delete(`/user/${data.userId}`);\n}\n\nfunction* leave(action) {\n  try {\n    yield call(leaveAPI, action.data);\n    yield put({\n      type: actionTypesUser.LEAVE_SUCCESS\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LEAVE_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction changeProfileAPI(data) {\n  return axios.post('/user/profile', data);\n}\n\nfunction* changeProfile(action) {\n  try {\n    const result = yield call(changeProfileAPI, action.data);\n    yield put({\n      type: actionTypesUser.CHANGE_PROFILE_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHANGE_PROFILE_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction changeCountryAPI(data) {\n  return axios.patch('/user/country', data);\n}\n\nfunction* changeCountry(action) {\n  try {\n    const result = yield call(changeCountryAPI, action.data);\n    yield put({\n      type: actionTypesUser.CHANGE_COUNTRY_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHANGE_COUNTRY_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction checkNotificationAPI() {\n  return axios.patch('/user/notification');\n}\n\nfunction* checkNotification() {\n  try {\n    const result = yield call(checkNotificationAPI);\n    yield put({\n      type: actionTypesUser.CHECK_NOTIFICATION_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHECK_NOTIFICATION_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction removeNotificationAPI(data) {\n  return axios.delete(`/user/notification/${data.notificationId}`);\n}\n\nfunction* removeNotification(action) {\n  try {\n    const result = yield call(removeNotificationAPI, action.data);\n    yield put({\n      type: actionTypesUser.REMOVE_NOTIFICATION_SUCCESS,\n      data: result.data\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.REMOVE_NOTIFICATION_ERROR,\n      error: error.response.data\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(actionTypesUser.LOG_IN_REQUEST, logIn);\n}\n\nfunction* watchLogOut() {\n  yield takeLatest(actionTypesUser.LOG_OUT_REQUEST, logOut);\n}\n\nfunction* watchLoadMyInfo() {\n  yield takeLatest(actionTypesUser.LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\n\nfunction* watchUploadImage() {\n  yield takeLatest(actionTypesUser.UPLOAD_IMAGE_REQUEST, uploadImage);\n}\n\nfunction* watchSignUp() {\n  yield takeLatest(actionTypesUser.SIGN_UP_REQUEST, signUp);\n}\n\nfunction* watchLeave() {\n  yield takeLatest(actionTypesUser.LEAVE_REQUEST, leave);\n}\n\nfunction* watchChangeProfile() {\n  yield takeLatest(actionTypesUser.CHANGE_PROFILE_REQUEST, changeProfile);\n}\n\nfunction* watchChangeCountry() {\n  yield takeLatest(actionTypesUser.CHANGE_COUNTRY_REQUEST, changeCountry);\n}\n\nfunction* watchCheckNotification() {\n  yield takeLatest(actionTypesUser.CHECK_NOTIFICATION_REQUEST, checkNotification);\n}\n\nfunction* watchRemoveNotification() {\n  yield takeLatest(actionTypesUser.REMOVE_NOTIFICATION_REQUEST, removeNotification);\n}\n\nexport default function* userSaga() {\n  yield all([fork(watchLogIn), fork(watchLogOut), fork(watchLoadMyInfo), fork(watchUploadImage), fork(watchSignUp), fork(watchLeave), fork(watchChangeProfile), fork(watchChangeCountry), fork(watchCheckNotification), fork(watchRemoveNotification)]);\n}","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/sagas/user.ts"],"names":["all","call","fork","put","takeLatest","actionTypesUser","axios","loginAPI","data","post","logIn","action","type","LOG_IN_SUCCESS","error","LOG_IN_ERROR","response","logOutAPI","logOut","LOG_OUT_SUCCESS","LOG_OUT_ERROR","loadMyInfoAPI","get","loadMyInfo","result","LOAD_MY_INFO_SUCCESS","LOAD_MY_INFO_ERROR","uploadImageAPI","uploadImage","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_ERROR","signUpAPI","signUp","SIGN_UP_SUCCESS","SIGN_UP_ERROR","leaveAPI","delete","userId","leave","LEAVE_SUCCESS","LEAVE_ERROR","changeProfileAPI","changeProfile","CHANGE_PROFILE_SUCCESS","CHANGE_PROFILE_ERROR","changeCountryAPI","patch","changeCountry","CHANGE_COUNTRY_SUCCESS","CHANGE_COUNTRY_ERROR","checkNotificationAPI","checkNotification","CHECK_NOTIFICATION_SUCCESS","CHECK_NOTIFICATION_ERROR","removeNotificationAPI","notificationId","removeNotification","REMOVE_NOTIFICATION_SUCCESS","REMOVE_NOTIFICATION_ERROR","watchLogIn","LOG_IN_REQUEST","watchLogOut","LOG_OUT_REQUEST","watchLoadMyInfo","LOAD_MY_INFO_REQUEST","watchUploadImage","UPLOAD_IMAGE_REQUEST","watchSignUp","SIGN_UP_REQUEST","watchLeave","LEAVE_REQUEST","watchChangeProfile","CHANGE_PROFILE_REQUEST","watchChangeCountry","CHANGE_COUNTRY_REQUEST","watchCheckNotification","CHECK_NOTIFICATION_REQUEST","watchRemoveNotification","REMOVE_NOTIFICATION_REQUEST","userSaga"],"mappings":"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","sourcesContent":["import { all, call, fork, put, takeLatest } from 'redux-saga/effects';\nimport {\n  actionTypesUser,\n  ChangeProfileData,\n  IChangeCountryRequest,\n  IChangeProfileRequest,\n  ILeaveRequest,\n  ILogInRequest,\n  IRemoveNotificationRequest,\n  ISignUpRequest,\n  IUploadImageRequest,\n  LoginData,\n  SignUpData,\n} from '../interfaces/user/userAction.interfaces';\nimport axios from 'axios';\nimport { INotice, IUser } from 'interfaces/db';\n\nfunction loginAPI(data: LoginData) {\n  return axios.post('/user/login', data);\n}\nfunction* logIn(action: ILogInRequest) {\n  try {\n    yield call(loginAPI, action.data);\n    yield put({\n      type: actionTypesUser.LOG_IN_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOG_IN_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction logOutAPI() {\n  return axios.post('/user/logout');\n}\nfunction* logOut() {\n  try {\n    yield call(logOutAPI);\n    yield put({\n      type: actionTypesUser.LOG_OUT_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOG_OUT_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction loadMyInfoAPI() {\n  return axios.get('/user');\n}\nfunction* loadMyInfo() {\n  try {\n    const result: { data: IUser } = yield call(loadMyInfoAPI);\n    yield put({\n      type: actionTypesUser.LOAD_MY_INFO_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LOAD_MY_INFO_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction uploadImageAPI(data: FormData) {\n  return axios.post('/user/image', data);\n}\nfunction* uploadImage(action: IUploadImageRequest) {\n  try {\n    const result: { data: string[] } = yield call(uploadImageAPI, action.data);\n    yield put({\n      type: actionTypesUser.UPLOAD_IMAGE_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.UPLOAD_IMAGE_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction signUpAPI(data: SignUpData) {\n  return axios.post('/user/signup', data);\n}\nfunction* signUp(action: ISignUpRequest) {\n  try {\n    yield call(signUpAPI, action.data);\n    yield put({\n      type: actionTypesUser.SIGN_UP_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.SIGN_UP_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction leaveAPI(data: { userId: number }) {\n  return axios.delete(`/user/${data.userId}`);\n}\nfunction* leave(action: ILeaveRequest) {\n  try {\n    yield call(leaveAPI, action.data);\n    yield put({\n      type: actionTypesUser.LEAVE_SUCCESS,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.LEAVE_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction changeProfileAPI(data: ChangeProfileData) {\n  return axios.post('/user/profile', data);\n}\nfunction* changeProfile(action: IChangeProfileRequest) {\n  try {\n    const result: { data: IUser } = yield call(changeProfileAPI, action.data);\n    yield put({\n      type: actionTypesUser.CHANGE_PROFILE_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHANGE_PROFILE_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction changeCountryAPI(data: { country: string }) {\n  return axios.patch('/user/country', data);\n}\nfunction* changeCountry(action: IChangeCountryRequest) {\n  try {\n    const result: { data: { country: string } } = yield call(\n      changeCountryAPI,\n      action.data\n    );\n    yield put({\n      type: actionTypesUser.CHANGE_COUNTRY_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHANGE_COUNTRY_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction checkNotificationAPI() {\n  return axios.patch('/user/notification');\n}\n\nfunction* checkNotification() {\n  try {\n    const result: { data: INotice[] } = yield call(checkNotificationAPI);\n    yield put({\n      type: actionTypesUser.CHECK_NOTIFICATION_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.CHECK_NOTIFICATION_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction removeNotificationAPI(data: { notificationId: number }) {\n  return axios.delete(`/user/notification/${data.notificationId}`);\n}\n\nfunction* removeNotification(action: IRemoveNotificationRequest) {\n  try {\n    const result: { data: { notificationId: number } } = yield call(\n      removeNotificationAPI,\n      action.data\n    );\n    yield put({\n      type: actionTypesUser.REMOVE_NOTIFICATION_SUCCESS,\n      data: result.data,\n    });\n  } catch (error) {\n    yield put({\n      type: actionTypesUser.REMOVE_NOTIFICATION_ERROR,\n      error: error.response.data,\n    });\n  }\n}\n\nfunction* watchLogIn() {\n  yield takeLatest(actionTypesUser.LOG_IN_REQUEST, logIn);\n}\nfunction* watchLogOut() {\n  yield takeLatest(actionTypesUser.LOG_OUT_REQUEST, logOut);\n}\nfunction* watchLoadMyInfo() {\n  yield takeLatest(actionTypesUser.LOAD_MY_INFO_REQUEST, loadMyInfo);\n}\nfunction* watchUploadImage() {\n  yield takeLatest(actionTypesUser.UPLOAD_IMAGE_REQUEST, uploadImage);\n}\nfunction* watchSignUp() {\n  yield takeLatest(actionTypesUser.SIGN_UP_REQUEST, signUp);\n}\nfunction* watchLeave() {\n  yield takeLatest(actionTypesUser.LEAVE_REQUEST, leave);\n}\nfunction* watchChangeProfile() {\n  yield takeLatest(actionTypesUser.CHANGE_PROFILE_REQUEST, changeProfile);\n}\nfunction* watchChangeCountry() {\n  yield takeLatest(actionTypesUser.CHANGE_COUNTRY_REQUEST, changeCountry);\n}\nfunction* watchCheckNotification() {\n  yield takeLatest(actionTypesUser.CHECK_NOTIFICATION_REQUEST, checkNotification);\n}\nfunction* watchRemoveNotification() {\n  yield takeLatest(actionTypesUser.REMOVE_NOTIFICATION_REQUEST, removeNotification);\n}\n\nexport default function* userSaga() {\n  yield all([\n    fork(watchLogIn),\n    fork(watchLogOut),\n    fork(watchLoadMyInfo),\n    fork(watchUploadImage),\n    fork(watchSignUp),\n    fork(watchLeave),\n    fork(watchChangeProfile),\n    fork(watchChangeCountry),\n    fork(watchCheckNotification),\n    fork(watchRemoveNotification),\n  ]);\n}\n"]},"metadata":{},"sourceType":"module"}