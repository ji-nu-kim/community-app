{"version":3,"sources":["webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/CloseCircleOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/CloseCircleOutlined.js","webpack://_N_E/./components/PostForm.tsx","webpack://_N_E/./hooks/useInput.tsx"],"names":["props","ref","AntdIcon","Object","assign","icon","displayName","StyleButton","styled","Button","PostForm","router","useRouter","useSelector","state","post","imagePaths","addPostDone","dispatch","useDispatch","useInput","text","onChangeText","setText","useEffect","onSubmit","useCallback","trim","alert","formData","FormData","forEach","p","append","addPostRequestAction","communityId","Number","query","id","imageInputRef","useRef","onClickImageUpload","current","click","onChangeImages","e","imageFormData","call","target","files","f","uploadImagesRequestAction","onRemoveImage","removeImage","style","height","display","justifyContent","flexDirection","encType","onFinish","marginBottom","map","v","i","marginRight","background","src","replace","width","alt","onClick","value","onChange","maxLength","placeholder","color","border","resize","type","name","multiple","hidden","textAlign","marginTop","marginLeft","htmlType","memo","initialValue","useState","setValue"],"mappings":"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","file":"static/chunks/4199.844f0902cd9b677a3d49.js","sourcesContent":["// This icon file is generated automatically.\nvar CloseCircleOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M685.4 354.8c0-4.4-3.6-8-8-8l-66 .3L512 465.6l-99.3-118.4-66.1-.3c-4.4 0-8 3.5-8 8 0 1.9.7 3.7 1.9 5.2l130.1 155L340.5 670a8.32 8.32 0 00-1.9 5.2c0 4.4 3.6 8 8 8l66.1-.3L512 564.4l99.3 118.4 66 .3c4.4 0 8-3.5 8-8 0-1.9-.7-3.7-1.9-5.2L553.5 515l130.1-155c1.2-1.4 1.8-3.3 1.8-5.2z\" } }, { \"tag\": \"path\", \"attrs\": { \"d\": \"M512 65C264.6 65 64 265.6 64 513s200.6 448 448 448 448-200.6 448-448S759.4 65 512 65zm0 820c-205.4 0-372-166.6-372-372s166.6-372 372-372 372 166.6 372 372-166.6 372-372 372z\" } }] }, \"name\": \"close-circle\", \"theme\": \"outlined\" };\nexport default CloseCircleOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport CloseCircleOutlinedSvg from \"@ant-design/icons-svg/es/asn/CloseCircleOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar CloseCircleOutlined = function CloseCircleOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: CloseCircleOutlinedSvg\n  }));\n};\n\nCloseCircleOutlined.displayName = 'CloseCircleOutlined';\nexport default /*#__PURE__*/React.forwardRef(CloseCircleOutlined);","import {\n  addPostRequestAction,\n  removeImage,\n  uploadImagesRequestAction,\n} from '../actions/actionPost';\nimport useInput from '../hooks/useInput';\nimport { Button, Form, Input } from 'antd';\nimport React, { ChangeEvent, memo, useCallback, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { RootStateInterface } from '../interfaces/RootState';\nimport { CloseCircleOutlined } from '@ant-design/icons';\nimport styled from 'styled-components';\nimport { useRouter } from 'next/router';\n\nconst StyleButton = styled(Button)`\n  background: none;\n  border: none;\n  position: absolute;\n  margin-left: -35px;\n  color: #fff;\n  margin-top: -5px;\n\n  :hover {\n    background: none;\n    color: #039be5;\n  }\n`;\n\nfunction PostForm() {\n  const router = useRouter();\n  const { imagePaths, addPostDone } = useSelector(\n    (state: RootStateInterface) => state.post\n  );\n  const dispatch = useDispatch();\n  const [text, onChangeText, setText] = useInput<string>('');\n\n  useEffect(() => {\n    if (addPostDone) {\n      setText('');\n    }\n  }, [addPostDone]);\n\n  const onSubmit = useCallback(() => {\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성해주세요');\n    }\n    const formData = new FormData();\n    imagePaths.forEach(p => formData.append('image', p));\n    formData.append('content', text);\n    return dispatch(\n      addPostRequestAction({ formData, communityId: Number(router.query.id) })\n    );\n  }, [text, imagePaths]);\n\n  const imageInputRef = useRef<HTMLInputElement>(null);\n  const onClickImageUpload = useCallback(() => {\n    imageInputRef.current?.click();\n  }, [imageInputRef.current]);\n\n  const onChangeImages = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    const imageFormData = new FormData();\n    [].forEach.call(e.target.files, f => {\n      imageFormData.append('image', f);\n    });\n    return dispatch(uploadImagesRequestAction(imageFormData));\n  }, []);\n\n  const onRemoveImage = useCallback(\n    (id: number) => () => {\n      return dispatch(removeImage(id));\n    },\n    []\n  );\n\n  return (\n    <Form\n      style={{\n        height: '100%',\n        display: 'flex',\n        justifyContent: 'center',\n        flexDirection: 'column',\n      }}\n      encType=\"multipart/form-data\"\n      onFinish={onSubmit}\n    >\n      {imagePaths && (\n        <div\n          style={{\n            display: 'flex',\n            marginBottom: '1rem',\n          }}\n        >\n          {imagePaths.map((v, i) => (\n            <div key={v} style={{ marginRight: '1rem', background: 'rgba(0,0,0,.7)' }}>\n              <img\n                src={v.replace(/\\/resize\\//, '/original/')}\n                style={{ width: '100px' }}\n                alt={v}\n              />\n              <StyleButton onClick={onRemoveImage(i)}>\n                <CloseCircleOutlined />\n              </StyleButton>\n            </div>\n          ))}\n        </div>\n      )}\n      <Input.TextArea\n        value={text}\n        onChange={onChangeText}\n        maxLength={140}\n        placeholder=\"글을 작성하세요\"\n        style={{\n          color: '#fff',\n          background: 'rgba(0, 0, 0, 0.4)',\n          border: 'none',\n          resize: 'none',\n          height: '70px',\n        }}\n      />\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          multiple\n          hidden\n          ref={imageInputRef}\n          onChange={onChangeImages}\n        />\n        <div\n          style={{\n            textAlign: 'end',\n            marginTop: '0.5rem',\n          }}\n        >\n          <Button onClick={onClickImageUpload}>업로드</Button>\n          <Button style={{ marginLeft: '0.5rem' }} type=\"primary\" htmlType=\"submit\">\n            올리기\n          </Button>\n        </div>\n      </div>\n    </Form>\n  );\n}\n\nexport default memo(PostForm);\n","import { useState, useCallback, Dispatch, SetStateAction } from 'react';\n\nfunction useInput<T>(initialValue: T): [T, any, Dispatch<SetStateAction<T>>] {\n  const [value, setValue] = useState(initialValue);\n\n  const handler = useCallback(e => {\n    setValue(e.target.value);\n  }, []);\n\n  return [value, handler, setValue];\n}\n\nexport default useInput;\n"],"sourceRoot":""}