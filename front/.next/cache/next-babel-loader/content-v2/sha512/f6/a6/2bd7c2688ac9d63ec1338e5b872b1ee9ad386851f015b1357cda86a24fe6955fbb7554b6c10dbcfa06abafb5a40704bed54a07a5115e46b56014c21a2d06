{"ast":null,"code":"import { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport _toConsumableArray from \"C:/Users/wlsdn/Desktop/next/community/front/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport React, { useCallback } from 'react';\nimport { CheckBoxContainer } from './styles';\n\nfunction CategoryList(_ref) {\n  var mainCategories = _ref.mainCategories,\n      setCategories = _ref.setCategories,\n      categories = _ref.categories;\n  var onChangeCheckBox = useCallback(function (name) {\n    return function (e) {\n      if (categories.length < 5) {\n        if (e.target.checked) {\n          setCategories(function (prev) {\n            return [].concat(_toConsumableArray(prev), [name]);\n          });\n        } else {\n          setCategories(function (prev) {\n            return _toConsumableArray(prev).filter(function (v) {\n              return v != name;\n            });\n          });\n        }\n      } else {\n        if (e.target.checked) {\n          alert('5개만 선택할 수 있습니다');\n          e.target.checked = false;\n        } else {\n          setCategories(function (prev) {\n            return _toConsumableArray(prev).filter(function (v) {\n              return v != name;\n            });\n          });\n        }\n      }\n    };\n  }, [categories]);\n  return /*#__PURE__*/_jsx(CheckBoxContainer, {\n    children: mainCategories && mainCategories.map(function (category) {\n      return /*#__PURE__*/_jsxs(\"div\", {\n        children: [categories.includes(category.name) ? /*#__PURE__*/_jsx(\"input\", {\n          type: \"checkbox\",\n          id: category.name,\n          onChange: onChangeCheckBox(category.name),\n          defaultChecked: true\n        }) : /*#__PURE__*/_jsx(\"input\", {\n          type: \"checkbox\",\n          id: category.name,\n          onChange: onChangeCheckBox(category.name)\n        }), /*#__PURE__*/_jsx(\"label\", {\n          htmlFor: category.name,\n          children: category.name\n        })]\n      }, category.name);\n    })\n  });\n}\n\nexport default CategoryList;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/next/community/front/components/CategoryList/index.tsx"],"names":["React","useCallback","CheckBoxContainer","CategoryList","mainCategories","setCategories","categories","onChangeCheckBox","name","e","length","target","checked","prev","filter","v","alert","map","category","includes"],"mappings":";;;AACA,OAAOA,KAAP,IAA0CC,WAA1C,QAA6D,OAA7D;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAQA,SAASC,YAAT,OAIsB;AAAA,MAHpBC,cAGoB,QAHpBA,cAGoB;AAAA,MAFpBC,aAEoB,QAFpBA,aAEoB;AAAA,MADpBC,UACoB,QADpBA,UACoB;AACpB,MAAMC,gBAAgB,GAAGN,WAAW,CAClC,UAACO,IAAD;AAAA,WAAkB,UAACC,CAAD,EAAY;AAC5B,UAAIH,UAAU,CAACI,MAAX,GAAoB,CAAxB,EAA2B;AACzB,YAAID,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBP,UAAAA,aAAa,CAAC,UAAAQ,IAAI;AAAA,gDAAQA,IAAR,IAAcL,IAAd;AAAA,WAAL,CAAb;AACD,SAFD,MAEO;AACLH,UAAAA,aAAa,CAAC,UAAAQ,IAAI;AAAA,mBAAI,mBAAIA,IAAJ,EAAUC,MAAV,CAAiB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAIP,IAAT;AAAA,aAAlB,CAAJ;AAAA,WAAL,CAAb;AACD;AACF,OAND,MAMO;AACL,YAAIC,CAAC,CAACE,MAAF,CAASC,OAAb,EAAsB;AACpBI,UAAAA,KAAK,CAAC,gBAAD,CAAL;AACAP,UAAAA,CAAC,CAACE,MAAF,CAASC,OAAT,GAAmB,KAAnB;AACD,SAHD,MAGO;AACLP,UAAAA,aAAa,CAAC,UAAAQ,IAAI;AAAA,mBAAI,mBAAIA,IAAJ,EAAUC,MAAV,CAAiB,UAAAC,CAAC;AAAA,qBAAIA,CAAC,IAAIP,IAAT;AAAA,aAAlB,CAAJ;AAAA,WAAL,CAAb;AACD;AACF;AACF,KAfD;AAAA,GADkC,EAiBlC,CAACF,UAAD,CAjBkC,CAApC;AAoBA,sBACE,KAAC,iBAAD;AAAA,cACGF,cAAc,IACbA,cAAc,CAACa,GAAf,CAAmB,UAAAC,QAAQ;AAAA,0BACzB;AAAA,mBACGZ,UAAU,CAACa,QAAX,CAAoBD,QAAQ,CAACV,IAA7B,iBACC;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,UAAA,QAAQ,EAAED,gBAAgB,CAACW,QAAQ,CAACV,IAAV,CAH5B;AAIE,UAAA,cAAc;AAJhB,UADD,gBAQC;AACE,UAAA,IAAI,EAAC,UADP;AAEE,UAAA,EAAE,EAAEU,QAAQ,CAACV,IAFf;AAGE,UAAA,QAAQ,EAAED,gBAAgB,CAACW,QAAQ,CAACV,IAAV;AAH5B,UATJ,eAeE;AAAO,UAAA,OAAO,EAAEU,QAAQ,CAACV,IAAzB;AAAA,oBAAgCU,QAAQ,CAACV;AAAzC,UAfF;AAAA,SAAUU,QAAQ,CAACV,IAAnB,CADyB;AAAA,KAA3B;AAFJ,IADF;AAwBD;;AAED,eAAeL,YAAf","sourcesContent":["import { ICategory } from 'interfaces/db';\r\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\r\nimport { CheckBoxContainer } from './styles';\r\n\r\ninterface CategoryListProps {\r\n  mainCategories: ICategory[];\r\n  setCategories: Dispatch<SetStateAction<string[]>>;\r\n  categories: string[];\r\n}\r\n\r\nfunction CategoryList({\r\n  mainCategories,\r\n  setCategories,\r\n  categories,\r\n}: CategoryListProps) {\r\n  const onChangeCheckBox = useCallback(\r\n    (name: string) => (e: any) => {\r\n      if (categories.length < 5) {\r\n        if (e.target.checked) {\r\n          setCategories(prev => [...prev, name]);\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      } else {\r\n        if (e.target.checked) {\r\n          alert('5개만 선택할 수 있습니다');\r\n          e.target.checked = false;\r\n        } else {\r\n          setCategories(prev => [...prev].filter(v => v != name));\r\n        }\r\n      }\r\n    },\r\n    [categories]\r\n  );\r\n\r\n  return (\r\n    <CheckBoxContainer>\r\n      {mainCategories &&\r\n        mainCategories.map(category => (\r\n          <div key={category.name}>\r\n            {categories.includes(category.name) ? (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n                defaultChecked\r\n              />\r\n            ) : (\r\n              <input\r\n                type=\"checkbox\"\r\n                id={category.name}\r\n                onChange={onChangeCheckBox(category.name)}\r\n              />\r\n            )}\r\n            <label htmlFor={category.name}>{category.name}</label>\r\n          </div>\r\n        ))}\r\n    </CheckBoxContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryList;\r\n"]},"metadata":{},"sourceType":"module"}