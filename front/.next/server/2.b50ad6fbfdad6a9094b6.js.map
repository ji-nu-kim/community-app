{"version":3,"sources":["webpack:///./components/ImageInsert/styles.tsx","webpack:///./components/ImageInsert/index.tsx"],"names":["ProfileImgContainer","styled","div","ImageInsert","imagePath","profilePhoto","router","useRouter","dispatch","useDispatch","imageInputRef","useRef","uploadImageDone","useSelector","state","user","uploadCommunityImageDone","community","onClickImageUpload","useCallback","route","split","current","click","onChangeImages","e","target","files","length","imageFormData","FormData","forEach","call","f","append","uploadImageRequestAction","uploadCommunityImageRequestAction","onRemoveImage","removeImage","removeCommunityImage","replace","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEO,MAAMA,mBAAmB,gBAAGC,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,8hBAAzB,C;;;;;;;;;;;;;;ACFP;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;;AAUA,SAASC,WAAT,CAAqB;AAAEC,WAAF;AAAaC;AAAb,CAArB,EAAoE;AAClE,QAAMC,MAAM,GAAGC,4BAAS,EAAxB;AACA,QAAMC,QAAQ,GAAGC,4CAAW,EAA5B;AACA,QAAMC,aAAa,GAAGC,iCAAM,CAAmB,IAAnB,CAA5B;AACA,QAAM;AAAEC;AAAF,MAAsBC,4CAAW,CAAEC,KAAD,IAA+BA,KAAK,CAACC,IAAtC,CAAvC;AACA,QAAM;AAAEC;AAAF,MAA+BH,4CAAW,CAC7CC,KAAD,IAA+BA,KAAK,CAACG,SADS,CAAhD;AAIA,QAAMC,kBAAkB,GAAGC,sCAAW,CAAC,MAAM;AAC3C,UAAMC,KAAK,GAAGd,MAAM,CAACc,KAAP,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAd;;AACA,QAAID,KAAK,KAAK,SAAV,IAAuB,CAACR,eAA5B,EAA6C;AAAA;;AAC3C,+BAAAF,aAAa,CAACY,OAAd,gFAAuBC,KAAvB;AACD,KAFD,MAEO,IAAIH,KAAK,KAAK,WAAV,IAAyB,CAACJ,wBAA9B,EAAwD;AAAA;;AAC7D,gCAAAN,aAAa,CAACY,OAAd,kFAAuBC,KAAvB;AACD;AACF,GAPqC,EAOnC,CAACb,aAAa,CAACY,OAAf,EAAwBV,eAAxB,EAAyCI,wBAAzC,CAPmC,CAAtC;AASA,QAAMQ,cAAc,GAAGL,sCAAW,CAAEM,CAAD,IAAsC;AAAA;;AACvE,2BAAIA,CAAC,CAACC,MAAF,CAASC,KAAb,4CAAI,gBAAgBC,MAApB,EAA4B;AAC1B,YAAMR,KAAK,GAAGd,MAAM,CAACc,KAAP,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAd;AACA,YAAMQ,aAAa,GAAG,IAAIC,QAAJ,EAAtB;AACA,SAAGC,OAAH,CAAWC,IAAX,CAAgBP,CAAC,CAACC,MAAF,CAASC,KAAzB,EAAgCM,CAAC,IAAI;AACnCJ,qBAAa,CAACK,MAAd,CAAqB,OAArB,EAA8BD,CAA9B;AACD,OAFD;;AAGA,UAAIb,KAAK,KAAK,SAAd,EAAyB;AACvB,eAAOZ,QAAQ,CAAC2B,sDAAwB,CAACN,aAAD,CAAzB,CAAf;AACD,OAFD,MAEO,IAAIT,KAAK,KAAK,WAAd,EAA2B;AAChC,eAAOZ,QAAQ,CAAC4B,oEAAiC,CAACP,aAAD,CAAlC,CAAf;AACD;AACF;AACF,GAbiC,EAa/B,EAb+B,CAAlC;AAeA,QAAMQ,aAAa,GAAGlB,sCAAW,CAAC,MAAM;AACtC,UAAMC,KAAK,GAAGd,MAAM,CAACc,KAAP,CAAaC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB,CAAd;;AACA,QAAIjB,SAAS,CAACwB,MAAd,EAAsB;AACpB,UAAIR,KAAK,KAAK,SAAd,EAAyB;AACvB,eAAOZ,QAAQ,CAAC8B,yCAAW,EAAZ,CAAf;AACD,OAFD,MAEO,IAAIlB,KAAK,KAAK,WAAd,EAA2B;AAChC,eAAOZ,QAAQ,CAAC+B,uDAAoB,EAArB,CAAf;AACD;AACF;AACF,GATgC,EAS9B,CAACnC,SAAD,CAT8B,CAAjC;AAWA,sBACE,4BAAC,mBAAD;AAAA,2BACE;AAAA,8BACE;AACE,YAAI,EAAC,MADP;AAEE,YAAI,EAAC,OAFP;AAGE,cAAM,MAHR;AAIE,WAAG,EAAEM,aAJP;AAKE,gBAAQ,EAAEc;AALZ,QADF,eAQE,4BAAC,wBAAD;AAAQ,eAAO,EAAEN,kBAAjB;AAAqC,aAAK,EAAC,QAA3C;AAAoD,iBAAS,EAAC,eAA9D;AAAA,kBACGd,SAAS,CAACwB,MAAV,gBACC;AAAA,kCACE;AACE,iBAAK,EAAC,KADR;AAEE,kBAAM,EAAC,KAFT;AAGE,eAAG,EAAExB,SAAS,CAAC,CAAD,CAAT,CAAaoC,OAAb,CAAqB,YAArB,EAAmC,YAAnC,CAHP;AAIE,eAAG,EAAC;AAJN,YADF,eAOE;AAAK,mBAAO,EAAEH,aAAd;AAA6B,qBAAS,EAAC,gBAAvC;AAAA;AAAA,YAPF;AAAA,UADD,GAYGhC,YAAY,gBACd;AAAK,eAAK,EAAC,KAAX;AAAiB,gBAAM,EAAC,KAAxB;AAA8B,aAAG,EAAEA,YAAnC;AAAiD,aAAG,EAAC;AAArD,UADc,gBAGd,4BAAC,wBAAD;AAAgB,mBAAS,EAAC;AAA1B;AAhBJ,QARF;AAAA;AADF,IADF;AAgCD;;AAEcoC,wIAAI,CAACtC,WAAD,CAAnB,E","file":"2.b50ad6fbfdad6a9094b6.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ProfileImgContainer = styled.div`\n  position: relative;\n\n  img {\n    position: absolute;\n    z-index: -1;\n    top: -1px;\n    left: -1px;\n    border-radius: 50%;\n    object-fit: cover;\n  }\n\n  .img-input-btn {\n    margin: 0.5rem 0;\n    position: relative;\n    width: 100px;\n    height: 100px;\n    background: rgba(0, 0, 0, 0.1);\n\n    .img-input-icon {\n      color: #cacaca;\n      font-size: 2rem;\n    }\n  }\n\n  .img-delete-btn {\n    position: absolute;\n    top: -1px;\n    left: -1px;\n    width: 100px;\n    height: 100px;\n    border-radius: 50%;\n    background: rgba(0, 0, 0, 0.5);\n    color: #fff;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    transition: opacity 0.3s linear;\n    opacity: 0;\n\n    :hover {\n      opacity: 1;\n      transition: opacity 0.3s linear;\n    }\n  }\n`;\n","import React, { ChangeEvent, memo, useCallback, useRef } from 'react';\nimport { CameraOutlined } from '@ant-design/icons';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { removeImage, uploadImageRequestAction } from 'actions/actionUser';\nimport { ProfileImgContainer } from './styles';\nimport { Button } from 'antd';\nimport { useRouter } from 'next/router';\nimport {\n  removeCommunityImage,\n  uploadCommunityImageRequestAction,\n} from 'actions/actionCommunity';\n\ninterface ImageInsertProps {\n  imagePath: string[];\n  profilePhoto: string | undefined;\n}\n\nfunction ImageInsert({ imagePath, profilePhoto }: ImageInsertProps) {\n  const router = useRouter();\n  const dispatch = useDispatch();\n  const imageInputRef = useRef<HTMLInputElement>(null);\n  const { uploadImageDone } = useSelector((state: RootStateInterface) => state.user);\n  const { uploadCommunityImageDone } = useSelector(\n    (state: RootStateInterface) => state.community\n  );\n\n  const onClickImageUpload = useCallback(() => {\n    const route = router.route.split('/')[1];\n    if (route === 'profile' && !uploadImageDone) {\n      imageInputRef.current?.click();\n    } else if (route === 'community' && !uploadCommunityImageDone) {\n      imageInputRef.current?.click();\n    }\n  }, [imageInputRef.current, uploadImageDone, uploadCommunityImageDone]);\n\n  const onChangeImages = useCallback((e: ChangeEvent<HTMLInputElement>) => {\n    if (e.target.files?.length) {\n      const route = router.route.split('/')[1];\n      const imageFormData = new FormData();\n      [].forEach.call(e.target.files, f => {\n        imageFormData.append('image', f);\n      });\n      if (route === 'profile') {\n        return dispatch(uploadImageRequestAction(imageFormData));\n      } else if (route === 'community') {\n        return dispatch(uploadCommunityImageRequestAction(imageFormData));\n      }\n    }\n  }, []);\n\n  const onRemoveImage = useCallback(() => {\n    const route = router.route.split('/')[1];\n    if (imagePath.length) {\n      if (route === 'profile') {\n        return dispatch(removeImage());\n      } else if (route === 'community') {\n        return dispatch(removeCommunityImage());\n      }\n    }\n  }, [imagePath]);\n\n  return (\n    <ProfileImgContainer>\n      <div>\n        <input\n          type=\"file\"\n          name=\"image\"\n          hidden\n          ref={imageInputRef}\n          onChange={onChangeImages}\n        />\n        <Button onClick={onClickImageUpload} shape=\"circle\" className=\"img-input-btn\">\n          {imagePath.length ? (\n            <>\n              <img\n                width=\"100\"\n                height=\"100\"\n                src={imagePath[0].replace(/\\/resize\\//, '/original/')}\n                alt=\"profileimage\"\n              />\n              <div onClick={onRemoveImage} className=\"img-delete-btn\">\n                지우기\n              </div>\n            </>\n          ) : profilePhoto ? (\n            <img width=\"100\" height=\"100\" src={profilePhoto} alt=\"profileimage\" />\n          ) : (\n            <CameraOutlined className=\"img-input-icon\" />\n          )}\n        </Button>\n      </div>\n    </ProfileImgContainer>\n  );\n}\n\nexport default memo(ImageInsert);\n"],"sourceRoot":""}