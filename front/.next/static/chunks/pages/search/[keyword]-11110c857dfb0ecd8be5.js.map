{"version":3,"sources":["webpack://_N_E/./components/Cards/BoxStyleCard/styles.tsx","webpack://_N_E/./components/Cards/BoxStyleCard/index.tsx","webpack://_N_E/./components/Layouts/AppLayout.tsx","webpack://_N_E/./components/Layouts/CategoryLayout.tsx","webpack://_N_E/./pages/search/[keyword].tsx","webpack://_N_E/?f9bf"],"names":["CardContainer","styled","profilePhoto","communityName","categoryName","country","width","height","src","alt","className","NavBar","dynamic","SideBar","UserInfoModal","NotificationModal","Global","createGlobalStyle","AppLayout","children","useSelector","state","user","me","leaveDone","leaveError","useState","userInfoModal","setUserInfoModal","notificationModal","setNotificationModal","useEffect","alert","notices","Notices","style","display","gridTemplateColumns","memo","CategoryContainer","props","img","CategoryHeader","CategoryContent","process","keyword","router","useRouter","changableCommunities","community","query","length","map","href","id","prefetch","Categories","name","window","__NEXT_P","push"],"mappings":"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","file":"static/chunks/pages/search/[keyword]-11110c857dfb0ecd8be5.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const CardContainer = styled.div`\r\n  width: 240px;\r\n  height: 260px;\r\n  cursor: pointer;\r\n  background: linear-gradient(to right, rgba(255, 255, 255, 1), rgba(255, 255, 255, 0.7));\r\n  box-shadow: 4px 4px 8px 4px rgba(0, 0, 0, 0.4);\r\n\r\n  :hover {\r\n    outline: 4px solid hotpink;\r\n  }\r\n\r\n  img {\r\n    filter: saturate(120%);\r\n    object-fit: cover;\r\n  }\r\n\r\n  .fake-image {\r\n    border-bottom: 1px solid rgba(0, 0, 0, 0.2);\r\n    height: 166px;\r\n  }\r\n\r\n  .card-info {\r\n    display: flex;\r\n    flex-direction: column;\r\n    justify-content: center;\r\n    align-items: center;\r\n    padding: 1rem;\r\n    .info-title {\r\n      font-weight: bold;\r\n      font-size: 1rem;\r\n    }\r\n    .info-country {\r\n      color: #aaabaf;\r\n      font-size: 0.75rem;\r\n    }\r\n    .info-category {\r\n      font-weight: bold;\r\n      color: #ff5edc;\r\n    }\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport { CardContainer } from './styles';\r\n\r\ninterface BoxStyleCardProps {\r\n  profilePhoto: string;\r\n  communityName: string;\r\n  categoryName: string;\r\n  country: string;\r\n}\r\n\r\nfunction BoxStyleCard({\r\n  profilePhoto,\r\n  communityName,\r\n  categoryName,\r\n  country,\r\n}: BoxStyleCardProps) {\r\n  return (\r\n    <CardContainer>\r\n      {profilePhoto ? (\r\n        <img width=\"240\" height=\"166\" src={profilePhoto} alt=\"사진\" />\r\n      ) : (\r\n        <div className=\"fake-image\"></div>\r\n      )}\r\n      <div className=\"card-info\">\r\n        <div className=\"info-title\">{communityName}</div>\r\n        <p className=\"info-category\">{categoryName}</p>\r\n        <p className=\"info-country\">{country}</p>\r\n      </div>\r\n    </CardContainer>\r\n  );\r\n}\r\n\r\nexport default BoxStyleCard;\r\n","import React, { memo, ReactNode, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { createGlobalStyle } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\n\nconst NavBar = dynamic(() => import('components/NavBar'));\nconst SideBar = dynamic(() => import('components/SideBar'));\nconst UserInfoModal = dynamic(() => import('components/Modals/UserInfoModal'));\nconst NotificationModal = dynamic(() => import('components/Modals/NotificationModal'));\n\nconst Global = createGlobalStyle`\n  .ant-row {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .ant-col:first-child {\n    padding-left: 0 !important;\n  }\n  .ant-col:last-child {\n    padding-right: 0 !important;\n  }\n`;\ninterface AppLayoutProps {\n  children: ReactNode;\n}\n\nfunction AppLayout({ children }: AppLayoutProps) {\n  const { me, leaveDone, leaveError } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userInfoModal, setUserInfoModal] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n\n  useEffect(() => {\n    if (leaveDone) {\n      alert('탈퇴처리가 완료되었습니다');\n    }\n  }, [leaveDone]);\n\n  useEffect(() => {\n    if (leaveError) {\n      alert(leaveError);\n    }\n  }, [leaveError]);\n\n  return (\n    <div>\n      <Global />\n      <NavBar\n        notices={me?.Notices}\n        userInfoModal={userInfoModal}\n        setUserInfoModal={setUserInfoModal}\n        setNotificationModal={setNotificationModal}\n      />\n\n      <div style={{ display: 'grid', gridTemplateColumns: '200px auto' }}>\n        <SideBar />\n        <div>{children}</div>\n      </div>\n      {userInfoModal && <UserInfoModal setUserInfoModal={setUserInfoModal} />}\n      {notificationModal && (\n        <NotificationModal\n          setNotificationModal={setNotificationModal}\n          notices={me?.Notices}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(AppLayout);\n","import React, { ReactNode } from 'react';\r\nimport styled from 'styled-components';\r\n\r\ninterface CategoryLayoutProps {\r\n  children: ReactNode;\r\n  img?: string;\r\n}\r\n\r\ninterface IBackgroundProps {\r\n  img: string | null;\r\n}\r\n\r\nconst CategoryContainer = styled.div`\r\n  display: grid;\r\n  grid-template-rows: 200px auto;\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.3), rgba(0, 0, 0, 0.3)),\r\n    url(${(props: IBackgroundProps) => props.img && props.img});\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\n\r\nexport const CategoryHeader = styled.div`\r\n  height: 200px;\r\n  width: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.7), rgba(0, 0, 0, 0.3));\r\n  position: relative;\r\n\r\n  h1 {\r\n    white-space: pre-line;\r\n    position: absolute;\r\n    bottom: 50px;\r\n    left: 50px;\r\n    color: #fff;\r\n    font-weight: bold;\r\n    font-size: 2rem;\r\n    font-family: 'Noto Sans KR', sans-serif;\r\n    vertical-align: bottom;\r\n  }\r\n`;\r\n\r\nexport const CategoryContent = styled.div`\r\n  padding: 1rem;\r\n\r\n  .cards-container {\r\n    display: grid;\r\n    gap: 1rem;\r\n    grid-template-columns: repeat(auto-fill, 240px);\r\n    justify-content: space-evenly;\r\n  }\r\n`;\r\n\r\nfunction CategoryLayout({ children, img }: CategoryLayoutProps) {\r\n  return (\r\n    <CategoryContainer\r\n      img={img ? `${process.env.NEXT_PUBLIC_BACK_URL_KEY}/${img}` : null}\r\n    >\r\n      {children}\r\n    </CategoryContainer>\r\n  );\r\n}\r\n\r\nexport default CategoryLayout;\r\n","import { searchCommunitiesRequestAction } from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport CategoryLayout, {\r\n  CategoryContent,\r\n  CategoryHeader,\r\n} from 'components/Layouts/CategoryLayout';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport React, { memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport wrapper from 'store/configureStore';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\r\n\r\nfunction keyword() {\r\n  const router = useRouter();\r\n  const { changableCommunities } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {router.query.keyword} 검색</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CategoryLayout>\r\n          <CategoryHeader>\r\n            <h1>\r\n              &ldquo;{router.query.keyword}&rdquo;와\r\n              <br />\r\n              연관있는 커뮤니티 {changableCommunities.length}개\r\n            </h1>\r\n          </CategoryHeader>\r\n          <CategoryContent>\r\n            <div className=\"cards-container\">\r\n              {changableCommunities.map(community => (\r\n                <div key={community.id}>\r\n                  <Link href={`/community/${community.id}`} prefetch={false}>\r\n                    <a>\r\n                      <BoxStyleCard\r\n                        profilePhoto={community.profilePhoto}\r\n                        categoryName={community.Categories[0].name}\r\n                        country={community.country}\r\n                        communityName={community.communityName}\r\n                      />\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CategoryContent>\r\n        </CategoryLayout>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const keyword = String(context.query.keyword);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(searchCommunitiesRequestAction({ keyword }));\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default memo(keyword);\r\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/search/[keyword]\",\n      function () {\n        return require(\"private-next-pages/search/[keyword].tsx\");\n      }\n    ]);\n  "],"sourceRoot":""}