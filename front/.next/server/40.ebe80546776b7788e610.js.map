{"version":3,"sources":["webpack:///./components/Modals/PostSettingModal/styles.tsx","webpack:///./components/Modals/PostSettingModal/index.tsx"],"names":["ModalContainer","styled","div","PostSettingModal","setCurrentModifyPost","setEditMode","postId","communityId","postOwnerId","communityUserId","content","dispatch","useDispatch","postOwner","onClickModifyButton","useCallback","prev","onClickDeleteButton","confirm","removePostRequestAction","onClickReportButton","reason","prompt","reportRequestAction","contentId","reporter","reportedPerson","variety"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEO,MAAMA,cAAc,gBAAGC,oCAAM,CAACC,GAAV;AAAA;AAAA;AAAA,+pBAApB,C;;;;;ACFP;AACA;AACA;AACA;;AAYA,SAASC,gBAAT,CAA0B;AACxBC,sBADwB;AAExBC,aAFwB;AAGxBC,QAHwB;AAIxBC,aAJwB;AAKxBC,aALwB;AAMxBC,iBANwB;AAOxBC;AAPwB,CAA1B,EAQ0B;AACxB,QAAMC,QAAQ,GAAGC,4CAAW,EAA5B;AACA,QAAMC,SAAS,GAAGL,WAAW,KAAKC,eAAlC;AAEA,QAAMK,mBAAmB,GAAGC,sCAAW,CAAC,MAAM;AAC5CX,wBAAoB,CAACE,MAAD,CAApB;AACAD,eAAW,CAACW,IAAI,IAAI,CAACA,IAAV,CAAX;AACD,GAHsC,EAGpC,CAACV,MAAD,CAHoC,CAAvC;AAKA,QAAMW,mBAAmB,GAAGF,sCAAW,CAAC,MAAM;AAC5C,QAAIG,OAAO,CAAC,eAAD,CAAX,EAA8B;AAC5B,aAAOP,QAAQ,CAACQ,qDAAuB,CAAC;AAAEb,cAAF;AAAUC;AAAV,OAAD,CAAxB,CAAf;AACD;AACF,GAJsC,EAIpC,EAJoC,CAAvC;AAMA,QAAMa,mBAAmB,GAAGL,sCAAW,CAAC,MAAM;AAC5C,UAAMM,MAAM,GAAGC,MAAM,CAAC,gBAAD,CAArB;;AAEA,QAAID,MAAM,IAAIZ,eAAd,EAA+B;AAC7BE,cAAQ,CACNY,iDAAmB,CAAC;AAClBC,iBAAS,EAAElB,MADO;AAElBmB,gBAAQ,EAAEhB,eAFQ;AAGlBiB,sBAAc,EAAElB,WAHE;AAIlBa,cAJkB;AAKlBM,eAAO,EAAE,MALS;AAMlBjB;AANkB,OAAD,CADb,CAAR;AAUD;AACF,GAfsC,EAepC,CAACF,WAAD,EAAcC,eAAd,EAA+BH,MAA/B,EAAuCI,OAAvC,CAfoC,CAAvC;AAiBA,sBACE,4BAAC,cAAD;AAAA,2BACE;AAAA,gBACGG,SAAS,gBACR;AAAA,gCACE;AAAI,iBAAO,EAAEC,mBAAb;AAAA;AAAA,UADF,eAEE;AAAI,iBAAO,EAAEG,mBAAb;AAAA;AAAA,UAFF;AAAA,QADQ,gBAMR;AAAI,eAAO,EAAEG,mBAAb;AAAA;AAAA;AAPJ;AADF,IADF;AAcD;;AAEcjB,6GAAf,E","file":"40.ebe80546776b7788e610.js","sourcesContent":["import styled from 'styled-components';\n\nexport const ModalContainer = styled.div`\n  position: absolute;\n  z-index: 2000;\n  top: 0;\n  right: 0;\n  width: 100px;\n  background: rgba(0, 0, 0, 0.7);\n  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.6);\n  backdrop-filter: saturate(180%) blur(12px);\n  -webkit-backdrop-filter: saturate(180%) blur(12px);\n  cursor: pointer;\n\n  ul {\n    height: inherit;\n    list-style: none;\n    padding: 0;\n    display: grid;\n    grid-template-rows: auto;\n    margin-bottom: 0;\n\n    li {\n      height: 40px;\n      position: relative;\n      color: #fff;\n      display: flex;\n      align-items: center;\n      justify-content: center;\n      border-bottom: 1px solid rgba(255, 255, 255, 0.15);\n\n      :last-child {\n        border-bottom: none;\n      }\n      :hover {\n        background: rgba(0, 0, 0, 0.3);\n      }\n\n      a {\n        padding: 10px;\n        position: absolute;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n        color: #fff;\n        width: 100%;\n        height: 100%;\n      }\n    }\n  }\n`;\n","import { removePostRequestAction, reportRequestAction } from 'actions/actionPost';\nimport React, { Dispatch, SetStateAction, useCallback } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { ModalContainer } from './styles';\n\ninterface PostSettingModalProps {\n  setCurrentModifyPost: Dispatch<SetStateAction<number>>;\n  setEditMode: Dispatch<SetStateAction<boolean>>;\n  postId: number;\n  communityId: number;\n  postOwnerId: number;\n  communityUserId: number;\n  content: string;\n}\n\nfunction PostSettingModal({\n  setCurrentModifyPost,\n  setEditMode,\n  postId,\n  communityId,\n  postOwnerId,\n  communityUserId,\n  content,\n}: PostSettingModalProps) {\n  const dispatch = useDispatch();\n  const postOwner = postOwnerId === communityUserId;\n\n  const onClickModifyButton = useCallback(() => {\n    setCurrentModifyPost(postId);\n    setEditMode(prev => !prev);\n  }, [postId]);\n\n  const onClickDeleteButton = useCallback(() => {\n    if (confirm('게시글을 지우시겠습니까?')) {\n      return dispatch(removePostRequestAction({ postId, communityId }));\n    }\n  }, []);\n\n  const onClickReportButton = useCallback(() => {\n    const reason = prompt('신고하는 이유를 적어주세요');\n\n    if (reason && communityUserId) {\n      dispatch(\n        reportRequestAction({\n          contentId: postId,\n          reporter: communityUserId,\n          reportedPerson: postOwnerId,\n          reason,\n          variety: 'post',\n          content,\n        })\n      );\n    }\n  }, [postOwnerId, communityUserId, postId, content]);\n\n  return (\n    <ModalContainer>\n      <ul>\n        {postOwner ? (\n          <>\n            <li onClick={onClickModifyButton}>수정</li>\n            <li onClick={onClickDeleteButton}>삭제</li>\n          </>\n        ) : (\n          <li onClick={onClickReportButton}>신고하기</li>\n        )}\n      </ul>\n    </ModalContainer>\n  );\n}\n\nexport default PostSettingModal;\n"],"sourceRoot":""}