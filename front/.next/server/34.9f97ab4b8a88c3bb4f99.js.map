{"version":3,"sources":["webpack:///./components/CommunityBody/Post/styles.tsx","webpack:///./components/CommunityBody/Post/index.tsx"],"names":["PostContainer","styled","div","PostSettingModal","dynamic","PostEditModal","CommentSettingModal","CommentEditModal","PostForm","CommentForm","Post","singleCommunity","communityUser","dispatch","useDispatch","mainPosts","hasMorePost","loadPostsLoading","updateCommentDone","useSelector","state","post","editMode","setEditMode","useState","showPostSettingButton","setShowPostSettingButton","CurrentPostSettingButton","setCurrentPostSettingButton","currentModifyPost","setCurrentModifyPost","showCommentSettingButton","setShowCommentSettingButton","currentCommentSettingButton","setCurrentCommentSettingButton","currentModifyComment","setCurrentModifyComment","openPostCommentForm","setOpenPostCommentForm","currentPostCommentForm","setCurrentPostCommentForm","postContainerRef","useRef","onClickPostSettingButton","useCallback","postId","onClickCommentSettingButton","commentId","onTogglePostCommentForm","prev","onCloseSettingModal","useEffect","postContainer","current","onScroll","e","length","target","scrollTop","scrollHeight","offsetHeight","lastId","id","loadPostsRequestAction","communityId","addEventListener","removeEventListener","map","content","User","profilePhoto","nickname","moment","createdAt","locale","format","Images","src","replace","cursor","marginRight","Comments","comment","memo"],"mappings":"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","file":"34.9f97ab4b8a88c3bb4f99.js","sourcesContent":["import styled from 'styled-components';\n\nexport const PostContainer = styled.div`\n  overflow: auto;\n  height: 100%;\n  backdrop-filter: blur(2px);\n  -webkit-backdrop-filter: blur(2px);\n  background: rgba(0, 0, 0, 0.4);\n\n  .post-form-container {\n    background: rgba(255, 255, 255, 0.4);\n    padding: 1rem;\n    margin-bottom: 2rem;\n  }\n\n  .visitor-post {\n    height: 100%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n  }\n\n  .header {\n    position: relative;\n    display: flex;\n    justify-content: space-between;\n\n    .header-left {\n      display: flex;\n      align-items: center;\n\n      .left-profile-image {\n        width: 24px;\n        height: 24px;\n        border-radius: 50%;\n        object-fit: cover;\n        margin-right: 8px;\n      }\n      .left-fake-image {\n        width: 24px;\n        height: 24px;\n        border-radius: 50%;\n        margin-right: 8px;\n        background: rgba(0, 0, 0, 0.5);\n        text-align: center;\n      }\n      .left-nickname {\n        font-weight: bold;\n      }\n    }\n\n    .header-right {\n      display: flex;\n      align-items: center;\n      position: relative;\n\n      .right-day {\n        font-size: 0.75rem;\n      }\n      .right-buttons {\n        margin-left: 8px;\n        font-size: 16px;\n        cursor: pointer;\n\n        :hover {\n          color: rgba(0, 0, 0, 0.4);\n        }\n      }\n    }\n  }\n\n  .post-body-container {\n    position: relative;\n    background: rgba(255, 255, 255, 0.4);\n\n    :not(:last-child) {\n      margin-bottom: 1rem;\n    }\n\n    .post-body-header {\n      border-bottom: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 0.5rem;\n    }\n\n    .post-image {\n      width: 100%;\n      object-fit: cover;\n    }\n\n    .post-text {\n      padding: 1rem 0.5rem;\n      white-space: pre;\n    }\n\n    .post-comment-info {\n      border-top: 1px solid rgba(0, 0, 0, 0.2);\n      padding: 0.5rem;\n    }\n\n    .post-comment-container {\n      position: relative;\n      margin: 0.5rem 0;\n      padding: 0.5rem;\n      background: linear-gradient(\n        120deg,\n        rgba(69, 104, 220, 0.7),\n        rgba(176, 106, 179, 0.7)\n      );\n\n      .comment-header {\n      }\n\n      .comment-text {\n        margin-top: 0.5rem;\n        text-align: justify;\n        white-space: pre;\n      }\n    }\n\n    .post-comment-form-container {\n      text-align: end;\n    }\n  }\n`;\n","import { MessageOutlined, MoreOutlined } from '@ant-design/icons';\nimport { loadPostsRequestAction } from 'actions/actionPost';\nimport { ICommunity, IUserInfo } from 'interfaces/db';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport moment from 'moment';\nimport React, { memo, useCallback, useEffect, useState, useRef } from 'react';\nimport dynamic from 'next/dynamic';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { PostContainer } from './styles';\n\nconst PostSettingModal = dynamic(() => import('components/Modals/PostSettingModal'));\nconst PostEditModal = dynamic(() => import('components/Modals/PostEditModal'));\nconst CommentSettingModal = dynamic(\n  () => import('components/Modals/CommentSettingModal')\n);\nconst CommentEditModal = dynamic(() => import('components/Modals/CommentEditModal'));\nconst PostForm = dynamic(() => import('components/PostForm'));\nconst CommentForm = dynamic(() => import('components/CommentForm'));\n\ninterface PostProps {\n  singleCommunity: ICommunity;\n  communityUser: IUserInfo | undefined;\n}\n\nfunction Post({ singleCommunity, communityUser }: PostProps) {\n  const dispatch = useDispatch();\n  const { mainPosts, hasMorePost, loadPostsLoading, updateCommentDone } = useSelector(\n    (state: RootStateInterface) => state.post\n  );\n  const [editMode, setEditMode] = useState(false);\n  const [showPostSettingButton, setShowPostSettingButton] = useState(false); // 포스트설정 모달 보여주기\n  const [CurrentPostSettingButton, setCurrentPostSettingButton] = useState(0); // 현재 보여지고 있는 포스트설정 모달\n  const [currentModifyPost, setCurrentModifyPost] = useState(0); // 현재 수정중인 포스트\n  const [showCommentSettingButton, setShowCommentSettingButton] = useState(false);\n  const [currentCommentSettingButton, setCurrentCommentSettingButton] = useState(0);\n  const [currentModifyComment, setCurrentModifyComment] = useState(0);\n  const [openPostCommentForm, setOpenPostCommentForm] = useState(false);\n  const [currentPostCommentForm, setCurrentPostCommentForm] = useState(0);\n  const postContainerRef = useRef<HTMLDivElement>(null);\n\n  const onClickPostSettingButton = useCallback(\n    (postId: number) => () => {\n      setCurrentPostSettingButton(postId);\n      setShowPostSettingButton(true);\n    },\n    []\n  );\n\n  const onClickCommentSettingButton = useCallback(\n    (commentId: number) => () => {\n      setCurrentCommentSettingButton(commentId);\n      setShowCommentSettingButton(true);\n    },\n    []\n  );\n\n  const onTogglePostCommentForm = useCallback(\n    (postId: number) => () => {\n      setCurrentPostCommentForm(postId);\n      setOpenPostCommentForm(prev => !prev);\n    },\n    []\n  );\n\n  const onCloseSettingModal = useCallback(() => {\n    if (showPostSettingButton || showCommentSettingButton) {\n      setShowPostSettingButton(false);\n      setShowCommentSettingButton(false);\n    }\n  }, [showPostSettingButton, showCommentSettingButton]);\n\n  useEffect(() => {\n    if (updateCommentDone) {\n      setEditMode(false);\n    }\n  }, [updateCommentDone]);\n\n  useEffect(() => {\n    const postContainer = postContainerRef.current;\n    if (!postContainer) return;\n\n    function onScroll(e: any) {\n      if (communityUser && mainPosts.length) {\n        if (e.target.scrollTop >= e.target.scrollHeight - e.target.offsetHeight - 300) {\n          if (hasMorePost && !loadPostsLoading) {\n            const lastId = mainPosts[mainPosts.length - 1].id;\n            dispatch(\n              loadPostsRequestAction({ communityId: singleCommunity.id, postId: lastId })\n            );\n          }\n        }\n      }\n    }\n\n    postContainer.addEventListener('scroll', onScroll);\n\n    return () => postContainer.removeEventListener('scroll', onScroll);\n  }, [\n    communityUser,\n    mainPosts,\n    hasMorePost,\n    loadPostsLoading,\n    singleCommunity,\n    postContainerRef.current,\n  ]);\n\n  return (\n    <PostContainer onClick={onCloseSettingModal} ref={postContainerRef}>\n      {communityUser ? (\n        <>\n          <div className=\"post-form-container\">\n            <PostForm />\n          </div>\n          {mainPosts.length ? (\n            <>\n              {mainPosts.map(post => (\n                <div className=\"post-body-container\" key={post.id}>\n                  {editMode && post.id === currentModifyPost && (\n                    <PostEditModal\n                      setEditMode={setEditMode}\n                      setCurrentModifyPost={setCurrentModifyPost}\n                      currentPostText={post.content}\n                      postId={post.id}\n                      communityId={singleCommunity.id}\n                    />\n                  )}\n                  <div className=\"header post-body-header\">\n                    <div className=\"header-left\">\n                      <span>\n                        {post.User.profilePhoto ? (\n                          <img\n                            className=\"left-profile-image\"\n                            src={post.User.profilePhoto}\n                            alt=\"profile image\"\n                          />\n                        ) : (\n                          <div className=\"left-fake-image\">{post.User.nickname[0]}</div>\n                        )}\n                      </span>\n                      <div className=\"left-nickname\">{post.User.nickname}</div>\n                    </div>\n                    <div className=\"header-right\">\n                      <div className=\"right-day\">\n                        {moment(post.createdAt).locale('ko').format('LLL')}\n                      </div>\n                      <div\n                        className=\"right-buttons\"\n                        onClick={onClickPostSettingButton(post.id)}\n                      >\n                        <MoreOutlined />\n                      </div>\n                      {showPostSettingButton && post.id === CurrentPostSettingButton && (\n                        <PostSettingModal\n                          setCurrentModifyPost={setCurrentModifyPost}\n                          setEditMode={setEditMode}\n                          postId={post.id}\n                          communityId={singleCommunity.id}\n                          postOwnerId={post.User.id}\n                          communityUserId={communityUser.id}\n                          content={post.content}\n                        />\n                      )}\n                    </div>\n                  </div>\n                  {post.Images.length ? (\n                    <img\n                      src={post.Images[0].src.replace(/\\/resize\\//, '/original/')}\n                      alt=\"image\"\n                      className=\"post-image\"\n                    />\n                  ) : null}\n                  <div className=\"post-text\">{post.content}</div>\n                  <div className=\"post-comment-info\">\n                    <div\n                      onClick={onTogglePostCommentForm(post.id)}\n                      style={{\n                        cursor: 'pointer',\n                      }}\n                    >\n                      <span style={{ marginRight: '4px' }}>\n                        <MessageOutlined />\n                      </span>\n                      {post.Comments.length\n                        ? `댓글 ${post.Comments.length}개 모두보기`\n                        : '댓글 작성하기'}\n                    </div>\n                    {openPostCommentForm && currentPostCommentForm === post.id && (\n                      <>\n                        {post.Comments &&\n                          post.Comments.map(comment => (\n                            <div className=\"post-comment-container\" key={comment.id}>\n                              {editMode && comment.id === currentModifyComment && (\n                                <CommentEditModal\n                                  setEditMode={setEditMode}\n                                  setCurrentModifyComment={setCurrentModifyComment}\n                                  currentCommentText={comment.content}\n                                  postId={post.id}\n                                  commentId={comment.id}\n                                />\n                              )}\n                              <div className=\"header comment-header\">\n                                <div className=\"header-left\">\n                                  <span>\n                                    {comment.User.profilePhoto ? (\n                                      <img\n                                        className=\"left-profile-image\"\n                                        src={comment.User.profilePhoto}\n                                        alt=\"profile image\"\n                                      />\n                                    ) : (\n                                      <div className=\"left-fake-image\">\n                                        {comment.User.nickname[0]}\n                                      </div>\n                                    )}\n                                  </span>\n                                  <div className=\"left-nickname\">\n                                    {comment.User.nickname}\n                                  </div>\n                                </div>\n                                <div className=\"header-right\">\n                                  <div className=\"right-day\">\n                                    {moment(comment.createdAt).locale('ko').format('LLL')}\n                                  </div>\n                                  <div\n                                    className=\"right-buttons\"\n                                    onClick={onClickCommentSettingButton(comment.id)}\n                                  >\n                                    <MoreOutlined />\n                                  </div>\n                                </div>\n                                {showCommentSettingButton &&\n                                  comment.id === currentCommentSettingButton && (\n                                    <CommentSettingModal\n                                      setCurrentModifyComment={setCurrentModifyComment}\n                                      setEditMode={setEditMode}\n                                      postId={post.id}\n                                      commentId={comment.id}\n                                      commentOwnerId={comment.User.id}\n                                      communityUserId={communityUser.id}\n                                      content={comment.content}\n                                    />\n                                  )}\n                              </div>\n                              <div className=\"comment-text\">{comment.content}</div>\n                            </div>\n                          ))}\n                        <div className=\"post-comment-form-container\">\n                          <CommentForm postId={post.id} />\n                        </div>\n                      </>\n                    )}\n                  </div>\n                </div>\n              ))}\n            </>\n          ) : null}\n        </>\n      ) : (\n        <div className=\"visitor-post\">커뮤니티유저만 볼 수 있습니다</div>\n      )}\n    </PostContainer>\n  );\n}\n\nexport default memo(Post);\n"],"sourceRoot":""}