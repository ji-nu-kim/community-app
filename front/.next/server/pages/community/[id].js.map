{"version":3,"sources":["webpack://front/./actions/actionPost.ts","webpack://front/./components/CommunityBody/styles.tsx","webpack://front/./components/CommunityBody/index.tsx","webpack://front/./components/CommunityHeader/styles.tsx","webpack://front/./components/CommunityHeader/index.tsx","webpack://front/./pages/community/[id].tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"@hookform/resolvers/yup\"","webpack://front/external \"@redux-saga/core\"","webpack://front/external \"antd\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-daum-postcode\"","webpack://front/external \"react-hook-form\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\"","webpack://front/external \"yup\""],"names":["addPostRequestAction","data","type","actionTypesPost","removePostRequestAction","updatePostRequestAction","reportRequestAction","loadPostsRequestAction","addCommentRequestAction","updateCommentRequestAction","removeCommentRequestAction","uploadImagesRequestAction","removeImage","BodyContainer","styled","Info","dynamic","Post","Meet","CommunityBody","singleCommunity","me","communityUser","currentNav","setCurrentNav","useState","onClickNav","useCallback","e","navName","target","className","split","length","HeaderContainer","JoinUserModal","CommunityModifyModal","CommunityHeader","dispatch","useDispatch","joinCommunityDone","changeCommunityInfoDone","removeCommunityDone","useSelector","state","community","joinUserModal","setJoinUserModal","showCommunityModifyModal","setShowCommunityModifyModal","communityOwner","id","OwnerId","joinUser","JoinUsers","find","user","communityModifyModalTrigger","prev","onClickJoinButton","confirm","Router","joinCommunityRequestAction","communityId","onClickLeaveButton","leaveCommunityRequestAction","onClickRemoveButton","removeCommunityRequestAction","joinUserModalTrigger","useEffect","alert","profilePhoto","communityName","country","CommunityContainer","props","backgroundImage","Community","loadCommunityError","reportDone","post","Users","replace","getServerSideProps","wrapper","context","cookie","req","headers","Number","query","axios","store","loadMyInfoRequestAction","loadCommunityRequestAction","postId","END","sagaTask","toPromise","memo"],"mappings":"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","file":"../pages/community/[id].js","sourcesContent":["import {\n  IRemoveImage,\n  CommentData,\n  AddPostData,\n  IReportData,\n  actionTypesPost,\n  IAddPostRequest,\n  IRemovePostRequest,\n  IUpdatePostRequest,\n  IReportRequest,\n  ILoadPostsRequest,\n  IAddCommentRequest,\n  IRemoveCommentRequest,\n  IUpdateCommentRequest,\n  IUploadImagesRequest,\n} from '../interfaces/post/postAction.interfaces';\n\nexport const addPostRequestAction = (data: AddPostData): IAddPostRequest => {\n  return {\n    type: actionTypesPost.ADD_POST_REQUEST,\n    data,\n  };\n};\nexport const removePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n}): IRemovePostRequest => {\n  return {\n    type: actionTypesPost.REMOVE_POST_REQUEST,\n    data,\n  };\n};\nexport const updatePostRequestAction = (data: {\n  postId: number;\n  communityId: number;\n  content: string;\n}): IUpdatePostRequest => {\n  return {\n    type: actionTypesPost.UPDATE_POST_REQUEST,\n    data,\n  };\n};\nexport const reportRequestAction = (data: IReportData): IReportRequest => {\n  return {\n    type: actionTypesPost.REPORT_REQUEST,\n    data,\n  };\n};\nexport const loadPostsRequestAction = (data: {\n  communityId: number;\n  postId: number;\n}): ILoadPostsRequest => {\n  return {\n    type: actionTypesPost.LOAD_POSTS_REQUEST,\n    data,\n  };\n};\nexport const addCommentRequestAction = (data: CommentData): IAddCommentRequest => {\n  return {\n    type: actionTypesPost.ADD_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const updateCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n  content: string;\n}): IUpdateCommentRequest => {\n  return {\n    type: actionTypesPost.UPDATE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const removeCommentRequestAction = (data: {\n  commentId: number;\n  postId: number;\n}): IRemoveCommentRequest => {\n  return {\n    type: actionTypesPost.REMOVE_COMMENT_REQUEST,\n    data,\n  };\n};\nexport const uploadImagesRequestAction = (data: FormData): IUploadImagesRequest => {\n  return {\n    type: actionTypesPost.UPLOAD_IMAGES_REQUEST,\n    data,\n  };\n};\nexport const removeImage = (data: number): IRemoveImage => {\n  return {\n    type: actionTypesPost.REMOVE_IMAGE,\n    data,\n  };\n};\n","import styled from 'styled-components';\r\n\r\nexport const BodyContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vh - 244px);\r\n  display: grid;\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .body-inner-container {\r\n    width: 90%;\r\n    height: 90%;\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 80%;\r\n      height: 80%;\r\n    }\r\n    @media (min-width: 1200px) {\r\n      width: 70%;\r\n    }\r\n    @media (min-width: 1400px) {\r\n      width: 60%;\r\n    }\r\n    @media (min-width: 1800px) {\r\n      width: 50%;\r\n    }\r\n\r\n    .active {\r\n      color: #039bec;\r\n    }\r\n\r\n    .body-nav {\r\n      display: flex;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      backdrop-filter: blur(2px);\r\n      -webkit-backdrop-filter: blur(2px);\r\n      height: 44px;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n\r\n      div {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .body-content {\r\n      position: relative;\r\n      height: calc(100% - 44px);\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { BodyContainer } from './styles';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\n\r\nconst Info = dynamic(() => import('./Info'));\r\nconst Post = dynamic(() => import('./Post'));\r\nconst Meet = dynamic(() => import('./Meet'));\r\n\r\ninterface CommunityBodyProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction CommunityBody({ singleCommunity, me, communityUser }: CommunityBodyProps) {\r\n  const [currentNav, setCurrentNav] = useState('info');\r\n\r\n  const onClickNav = useCallback(e => {\r\n    const navName = e.target.className.split('-');\r\n    if (navName[0] === 'nav' && navName[1].length < 5) {\r\n      setCurrentNav(navName[1]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <BodyContainer>\r\n      <div className=\"body-inner-container\">\r\n        <div className=\"body-nav\" onClick={onClickNav}>\r\n          <div className={`nav-info${currentNav === 'info' ? ' active' : ''}`}>정보</div>\r\n          <div className={`nav-post${currentNav === 'post' ? ' active' : ''}`}>\r\n            게시글\r\n          </div>\r\n          <div className={`nav-meet${currentNav === 'meet' ? ' active' : ''}`}>모임</div>\r\n        </div>\r\n        <div className=\"body-content\">\r\n          {currentNav === 'info' && <Info singleCommunity={singleCommunity} />}\r\n          {currentNav === 'post' && (\r\n            <Post singleCommunity={singleCommunity} communityUser={communityUser} />\r\n          )}\r\n          {currentNav === 'meet' && (\r\n            <Meet\r\n              singleCommunity={singleCommunity}\r\n              me={me}\r\n              communityUser={communityUser}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </BodyContainer>\r\n  );\r\n}\r\n\r\nexport default CommunityBody;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  padding: 1rem;\r\n  height: 200px;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.9), rgba(255, 255, 255, 0.3));\r\n  display: grid;\r\n  grid-template-columns: auto 100px;\r\n\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    .header-image {\r\n      width: 150px;\r\n      height: 150px;\r\n      background: rgba(255, 255, 255, 0.2);\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #cacaca;\r\n        font-size: 3rem;\r\n      }\r\n    }\r\n    .header-text {\r\n      margin-left: 1rem;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      p {\r\n        font-size: 0.75rem;\r\n        color: #039be5;\r\n        font-weight: bold;\r\n      }\r\n      h1,\r\n      h2 {\r\n        color: #fff;\r\n        font-weight: bold;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 2rem;\r\n      }\r\n      h2 {\r\n        font-size: 1rem;\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    width: 100%;\r\n    justify-self: flex-end;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    height: 33px;\r\n\r\n    .join-user-icon {\r\n      color: #fff;\r\n      position: relative;\r\n      font-size: 20px;\r\n      cursor: pointer;\r\n\r\n      .user-icon-badge {\r\n        background: hotpink;\r\n        width: 16px;\r\n        height: 16px;\r\n        border-radius: 50%;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        position: absolute;\r\n        top: -6px;\r\n        right: -8px;\r\n      }\r\n\r\n      :hover {\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n    }\r\n\r\n    button {\r\n      border: none;\r\n      color: #fff;\r\n      font-size: 0.75rem;\r\n    }\r\n\r\n    .button-container {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-evenly;\r\n      height: 100%;\r\n      width: 60px;\r\n\r\n      button {\r\n        width: 22px;\r\n        height: 22px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    .remove-button,\r\n    .modify-button,\r\n    .join-button,\r\n    .leave-button {\r\n      cursor: pointer;\r\n      background: rgba(3, 155, 229, 0.7);\r\n\r\n      :hover {\r\n        filter: saturate(180%);\r\n      }\r\n    }\r\n\r\n    .remove-button {\r\n      background: radial-gradient(#fbd3e9, #bb377d);\r\n    }\r\n    .modify-button {\r\n      background: radial-gradient(#f7f8f8, #acbb78);\r\n    }\r\n\r\n    .wait-button {\r\n      background: #e5037f;\r\n    }\r\n  }\r\n`;\r\n","import { UserOutlined } from '@ant-design/icons';\r\nimport {\r\n  joinCommunityRequestAction,\r\n  leaveCommunityRequestAction,\r\n  removeCommunityRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HeaderContainer } from './styles';\r\n\r\nconst JoinUserModal = dynamic(() => import('components/Modals/JoinUserModal'));\r\nconst CommunityModifyModal = dynamic(\r\n  () => import('components/Modals/CommunityModifyModal')\r\n);\r\ninterface CommunityHeaderProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction CommunityHeader({ singleCommunity, me, communityUser }: CommunityHeaderProps) {\r\n  const dispatch = useDispatch();\r\n  const { joinCommunityDone, changeCommunityInfoDone, removeCommunityDone } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [joinUserModal, setJoinUserModal] = useState(false);\r\n  const [showCommunityModifyModal, setShowCommunityModifyModal] = useState(false);\r\n  const communityOwner = me?.id === singleCommunity?.OwnerId;\r\n  const joinUser = singleCommunity.JoinUsers.find(user => user.id === me?.id);\r\n\r\n  const communityModifyModalTrigger = useCallback(() => {\r\n    if (communityOwner) {\r\n      setShowCommunityModifyModal(prev => !prev);\r\n    }\r\n  }, [setShowCommunityModifyModal, communityOwner]);\r\n\r\n  const onClickJoinButton = useCallback(() => {\r\n    if (!me) {\r\n      if (confirm('로그인한 유저만 가능합니다. 로그인하시겠습니까?')) {\r\n        return Router.push('/login');\r\n      }\r\n    } else if (!communityUser && confirm('커뮤니티 가입신청을 하시겠습니까?')) {\r\n      return dispatch(joinCommunityRequestAction({ communityId: singleCommunity.id }));\r\n    }\r\n  }, [singleCommunity, me, communityUser]);\r\n\r\n  const onClickLeaveButton = useCallback(async () => {\r\n    if (communityUser && confirm('커뮤니티를 탈퇴하시겠습니까?')) {\r\n      return dispatch(\r\n        leaveCommunityRequestAction({\r\n          communityId: singleCommunity.id,\r\n        })\r\n      );\r\n    }\r\n  }, [singleCommunity, communityUser]);\r\n\r\n  const onClickRemoveButton = useCallback(async () => {\r\n    if (communityOwner && confirm('커뮤니티를 삭제하시겠습니까?')) {\r\n      return dispatch(removeCommunityRequestAction({ communityId: singleCommunity.id }));\r\n    }\r\n  }, [communityOwner, singleCommunity]);\r\n\r\n  const joinUserModalTrigger = useCallback(() => {\r\n    setJoinUserModal(prev => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (removeCommunityDone) {\r\n      Router.push('/');\r\n    }\r\n  }, [removeCommunityDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinCommunityDone) {\r\n      alert('커뮤니티 가입신청이 완료되었습니다');\r\n    }\r\n  }, [joinCommunityDone]);\r\n\r\n  useEffect(() => {\r\n    if (changeCommunityInfoDone) {\r\n      setShowCommunityModifyModal(false);\r\n    }\r\n  }, [changeCommunityInfoDone]);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <div className=\"header-left\">\r\n        <div className=\"header-image\">\r\n          {singleCommunity.profilePhoto ? (\r\n            <img\r\n              src={singleCommunity.profilePhoto}\r\n              width=\"150\"\r\n              height=\"150\"\r\n              alt=\"profile-image\"\r\n            />\r\n          ) : (\r\n            <UserOutlined className=\"header-icon\" />\r\n          )}\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <p>커뮤니티정보</p>\r\n          <h1>{singleCommunity.communityName}</h1>\r\n          <h2>{singleCommunity.country}</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        {communityOwner && (\r\n          <>\r\n            <div\r\n              className=\"join-user-icon\"\r\n              title=\"가입신청목록\"\r\n              onClick={joinUserModalTrigger}\r\n            >\r\n              <UserOutlined />\r\n              {singleCommunity.JoinUsers.length > 0 && (\r\n                <div className=\"user-icon-badge\">{singleCommunity.JoinUsers.length}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <button\r\n                title=\"수정하기\"\r\n                className=\"modify-button\"\r\n                onClick={communityModifyModalTrigger}\r\n              ></button>\r\n              <button\r\n                title=\"삭제하기\"\r\n                className=\"remove-button\"\r\n                onClick={onClickRemoveButton}\r\n              ></button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {communityOwner ? null : communityUser ? (\r\n          <button onClick={onClickLeaveButton} className=\"leave-button\">\r\n            탈퇴하기\r\n          </button>\r\n        ) : joinUser ? (\r\n          <button className=\"wait-button\">가입대기</button>\r\n        ) : (\r\n          <button onClick={onClickJoinButton} className=\"join-button\">\r\n            가입하기\r\n          </button>\r\n        )}\r\n      </div>\r\n      {joinUserModal && (\r\n        <JoinUserModal\r\n          setJoinUserModal={setJoinUserModal}\r\n          singleCommunity={singleCommunity}\r\n        />\r\n      )}\r\n\r\n      {showCommunityModifyModal && (\r\n        <CommunityModifyModal setShowCommunityModifyModal={setShowCommunityModifyModal} />\r\n      )}\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default CommunityHeader;\r\n","import { END } from '@redux-saga/core';\r\nimport { loadCommunityRequestAction } from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport { loadPostsRequestAction } from 'actions/actionPost';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport CommunityBody from 'components/CommunityBody';\r\nimport CommunityHeader from 'components/CommunityHeader';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport Router from 'next/router';\r\nimport React, { memo, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport styled from 'styled-components';\r\nimport Head from 'next/head';\r\n\r\ninterface IBackgroundImage {\r\n  backgroundImage: string | null;\r\n}\r\n\r\nconst CommunityContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.4)),\r\n    url(${(props: IBackgroundImage) => props.backgroundImage && props.backgroundImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\n\r\nfunction Community() {\r\n  const { singleCommunity, loadCommunityError } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const { reportDone } = useSelector((state: RootStateInterface) => state.post);\r\n  const communityUser = singleCommunity?.Users.find(user => user.id === me?.id);\r\n\r\n  useEffect(() => {\r\n    if (loadCommunityError) {\r\n      Router.push('/');\r\n    }\r\n  }, [loadCommunityError]);\r\n\r\n  useEffect(() => {\r\n    if (reportDone) {\r\n      alert('신고를 완료했습니다');\r\n    }\r\n  }, [reportDone]);\r\n\r\n  if (!singleCommunity) {\r\n    return <div>잠시 기다려주세요</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {singleCommunity.communityName}</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CommunityContainer\r\n          backgroundImage={\r\n            singleCommunity.profilePhoto\r\n              ? singleCommunity.profilePhoto.replace(/\\/resize\\//, '/original/')\r\n              : null\r\n          }\r\n        >\r\n          <CommunityHeader\r\n            singleCommunity={singleCommunity}\r\n            me={me}\r\n            communityUser={communityUser}\r\n          />\r\n          <CommunityBody\r\n            singleCommunity={singleCommunity}\r\n            me={me}\r\n            communityUser={communityUser}\r\n          />\r\n        </CommunityContainer>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const communityId = Number(context.query.id);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCommunityRequestAction({ communityId: communityId }));\r\n    context.store.dispatch(\r\n      loadPostsRequestAction({ communityId: communityId, postId: 0 })\r\n    );\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default memo(Community);\r\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"@hookform/resolvers/yup\");;","module.exports = require(\"@redux-saga/core\");;","module.exports = require(\"antd\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-daum-postcode\");;","module.exports = require(\"react-hook-form\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;","module.exports = require(\"yup\");;"],"sourceRoot":""}