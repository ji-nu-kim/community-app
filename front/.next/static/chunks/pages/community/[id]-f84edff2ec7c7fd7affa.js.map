{"version":3,"sources":["webpack://_N_E/../../../next-server/lib/amp.ts","webpack://_N_E/../../../next-server/lib/loadable.js","webpack://_N_E/./interfaces/community/communityAction.interfaces.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/arrayWithoutHoles.js","webpack://_N_E/../../../next-server/lib/head.tsx","webpack://_N_E/./node_modules/next/dist/build/webpack/loaders/next-client-pages-loader.js?dd43","webpack://_N_E/./node_modules/next/dynamic.js","webpack://_N_E/../../../next-server/lib/side-effect.tsx","webpack://_N_E/./actions/actionCommunity.ts","webpack://_N_E/../../../next-server/lib/dynamic.tsx","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral.js","webpack://_N_E/./components/Layouts/AppLayout.tsx","webpack://_N_E/./node_modules/@ant-design/icons-svg/es/asn/UserOutlined.js","webpack://_N_E/./node_modules/@ant-design/icons/es/icons/UserOutlined.js","webpack://_N_E/./node_modules/next/head.js","webpack://_N_E/../../../next-server/lib/loadable-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/nonIterableSpread.js","webpack://_N_E/../../../next-server/lib/amp-context.ts","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/toConsumableArray.js","webpack://_N_E/./components/CommunityBody/styles.tsx","webpack://_N_E/./components/CommunityBody/index.tsx","webpack://_N_E/./components/CommunityHeader/styles.tsx","webpack://_N_E/./components/CommunityHeader/index.tsx","webpack://_N_E/./pages/community/.tsx","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","webpack://_N_E/./node_modules/next/node_modules/@babel/runtime/helpers/iterableToArray.js"],"names":["isInAmpMode","React","AmpStateContext","ampFirst","hybrid","hasQuery","ALL_INITIALIZERS","READY_INITIALIZERS","initialized","load","loader","promise","state","loading","loaded","error","err","loadMap","obj","promises","Object","key","result","res","Promise","render","props","resolve","createLoadableComponent","loadFn","options","opts","delay","timeout","webpack","modules","subscription","sub","LoadableSubscription","getCurrentValue","subscribe","retry","moduleIds","ids","init","LoadableComponent","ref","context","LoadableContext","useSubscription","Array","moduleName","isLoading","pastDelay","timedOut","constructor","this","_res","_loadFn","_opts","setTimeout","_err","callback","clearTimeout","Loadable","flushInitializers","initializers","Error","resolvePreload","window","actionTypesCommunity","REMOVE_COMMUNITY_IMAGE","UPLOAD_COMMUNITY_IMAGE_REQUEST","UPLOAD_COMMUNITY_IMAGE_SUCCESS","UPLOAD_COMMUNITY_IMAGE_ERROR","CHANGE_COMMUNITY_INFO_REQUEST","CHANGE_COMMUNITY_INFO_SUCCESS","CHANGE_COMMUNITY_INFO_ERROR","ADD_COMMUNITY_REQUEST","ADD_COMMUNITY_SUCCESS","ADD_COMMUNITY_ERROR","REMOVE_COMMUNITY_REQUEST","REMOVE_COMMUNITY_SUCCESS","REMOVE_COMMUNITY_ERROR","JOIN_COMMUNITY_REQUEST","JOIN_COMMUNITY_SUCCESS","JOIN_COMMUNITY_ERROR","ACCEPT_COMMUNITY_REQUEST","ACCEPT_COMMUNITY_SUCCESS","ACCEPT_COMMUNITY_ERROR","REFUSE_COMMUNITY_REQUEST","REFUSE_COMMUNITY_SUCCESS","REFUSE_COMMUNITY_ERROR","LEAVE_COMMUNITY_REQUEST","LEAVE_COMMUNITY_SUCCESS","LEAVE_COMMUNITY_ERROR","LOAD_COMMUNITY_REQUEST","LOAD_COMMUNITY_SUCCESS","LOAD_COMMUNITY_ERROR","LOAD_COMMUNITIES_REQUEST","LOAD_COMMUNITIES_SUCCESS","LOAD_COMMUNITIES_ERROR","SEARCH_COMMUNITIES_REQUEST","SEARCH_COMMUNITIES_SUCCESS","SEARCH_COMMUNITIES_ERROR","LOAD_COUNTRY_COMMUNITIES_REQUEST","LOAD_COUNTRY_COMMUNITIES_SUCCESS","LOAD_COUNTRY_COMMUNITIES_ERROR","LOAD_CATEGORY_COMMUNITIES_REQUEST","LOAD_CATEGORY_COMMUNITIES_SUCCESS","LOAD_CATEGORY_COMMUNITIES_ERROR","LOAD_CATEGORY_REQUEST","LOAD_CATEGORY_SUCCESS","LOAD_CATEGORY_ERROR","LOAD_CATEGORIES_REQUEST","LOAD_CATEGORIES_SUCCESS","LOAD_CATEGORIES_ERROR","ADD_MEET_REQUEST","ADD_MEET_SUCCESS","ADD_MEET_ERROR","REMOVE_MEET_REQUEST","REMOVE_MEET_SUCCESS","REMOVE_MEET_ERROR","MODIFY_MEET_REQUEST","MODIFY_MEET_SUCCESS","MODIFY_MEET_ERROR","JOIN_MEET_REQUEST","JOIN_MEET_SUCCESS","JOIN_MEET_ERROR","LEAVE_MEET_REQUEST","LEAVE_MEET_SUCCESS","LEAVE_MEET_ERROR","arrayLikeToArray","module","exports","arr","isArray","defaultHead","inAmpMode","head","charSet","name","content","onlyReactElement","child","list","fragmentChild","fragmentList","METATYPES","reduceComponents","headElements","headElementChildren","headElement","keys","tags","metaTypes","metaCategories","h","isUnique","hasKey","i","len","metatype","category","categories","unique","c","url","newProps","Head","ampState","useContext","headManager","HeadManagerContext","reduceComponentsToState","__NEXT_P","push","_hasHeadManager","emitChange","Component","removeCommunityImage","type","uploadCommunityImageRequestAction","data","changeCommunityInfoRequestAction","addCommunityRequestAction","removeCommunityRequestAction","joinCommunityRequestAction","acceptCommunityRequestAction","refuseCommunityRequestAction","leaveCommunityRequestAction","loadCountryCommunitiesRequestAction","loadCategoryCommunitiesRequestAction","addMeetRequestAction","removeMeetRequestAction","modifyMeetRequestAction","joinMeetRequestAction","leaveMeetRequestAction","loadableFn","loadableOptions","dynamicOptions","loadModules","value","mod","noSSR","LoadableInitializer","strings","raw","slice","freeze","defineProperties","NavBar","dynamic","SideBar","UserInfoModal","NotificationModal","Global","createGlobalStyle","AppLayout","children","useSelector","user","me","leaveDone","leaveError","useState","userInfoModal","setUserInfoModal","notificationModal","setNotificationModal","useEffect","alert","notices","Notices","style","display","gridTemplateColumns","memo","AntdIcon","assign","icon","displayName","TypeError","arrayWithoutHoles","iterableToArray","unsupportedIterableToArray","nonIterableSpread","BodyContainer","styled","div","Info","Post","Meet","CommunityBody","singleCommunity","communityUser","currentNav","setCurrentNav","onClickNav","useCallback","e","navName","target","className","split","length","onClick","HeaderContainer","JoinUserModal","CommunityModifyModal","CommunityHeader","dispatch","useDispatch","community","joinCommunityDone","changeCommunityInfoDone","removeCommunityDone","joinUserModal","setJoinUserModal","showCommunityModifyModal","setShowCommunityModifyModal","communityOwner","id","OwnerId","joinUser","JoinUsers","find","communityModifyModalTrigger","prev","onClickJoinButton","confirm","communityId","Router","onClickLeaveButton","a","onClickRemoveButton","joinUserModalTrigger","profilePhoto","src","width","height","alt","UserOutlined","communityName","country","title","CommunityContainer","backgroundImage","Community","loadCommunityError","reportDone","post","Users","replace","asyncGeneratorStep","gen","reject","_next","_throw","arg","info","done","then","_asyncToGenerator","fn","self","args","arguments","apply","undefined","iter","Symbol","iterator","from"],"mappings":"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","file":"static/chunks/pages/community/[id]-f84edff2ec7c7fd7affa.js","sourcesContent":["import React from 'react'\nimport { AmpStateContext } from './amp-context'\n\nexport function isInAmpMode({\n  ampFirst = false,\n  hybrid = false,\n  hasQuery = false,\n} = {}): boolean {\n  return ampFirst || (hybrid && hasQuery)\n}\n\nexport function useAmp(): boolean {\n  // Don't assign the context value to a variable to save bytes\n  return isInAmpMode(React.useContext(AmpStateContext))\n}\n","/**\n@copyright (c) 2017-present James Kyle <me@thejameskyle.com>\n MIT License\n Permission is hereby granted, free of charge, to any person obtaining\na copy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n The above copyright notice and this permission notice shall be\nincluded in all copies or substantial portions of the Software.\n THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\nEXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND\nNONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE\nLIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION\nOF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION\nWITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\n*/\n// https://github.com/jamiebuilds/react-loadable/blob/v5.5.0/src/index.js\n// Modified to be compatible with webpack 4 / Next.js\n\nimport React from 'react'\nimport { useSubscription } from 'use-subscription'\nimport { LoadableContext } from './loadable-context'\n\nconst ALL_INITIALIZERS = []\nconst READY_INITIALIZERS = []\nlet initialized = false\n\nfunction load(loader) {\n  let promise = loader()\n\n  let state = {\n    loading: true,\n    loaded: null,\n    error: null,\n  }\n\n  state.promise = promise\n    .then((loaded) => {\n      state.loading = false\n      state.loaded = loaded\n      return loaded\n    })\n    .catch((err) => {\n      state.loading = false\n      state.error = err\n      throw err\n    })\n\n  return state\n}\n\nfunction loadMap(obj) {\n  let state = {\n    loading: false,\n    loaded: {},\n    error: null,\n  }\n\n  let promises = []\n\n  try {\n    Object.keys(obj).forEach((key) => {\n      let result = load(obj[key])\n\n      if (!result.loading) {\n        state.loaded[key] = result.loaded\n        state.error = result.error\n      } else {\n        state.loading = true\n      }\n\n      promises.push(result.promise)\n\n      result.promise\n        .then((res) => {\n          state.loaded[key] = res\n        })\n        .catch((err) => {\n          state.error = err\n        })\n    })\n  } catch (err) {\n    state.error = err\n  }\n\n  state.promise = Promise.all(promises)\n    .then((res) => {\n      state.loading = false\n      return res\n    })\n    .catch((err) => {\n      state.loading = false\n      throw err\n    })\n\n  return state\n}\n\nfunction resolve(obj) {\n  return obj && obj.__esModule ? obj.default : obj\n}\n\nfunction render(loaded, props) {\n  return React.createElement(resolve(loaded), props)\n}\n\nfunction createLoadableComponent(loadFn, options) {\n  let opts = Object.assign(\n    {\n      loader: null,\n      loading: null,\n      delay: 200,\n      timeout: null,\n      render: render,\n      webpack: null,\n      modules: null,\n    },\n    options\n  )\n\n  let subscription = null\n\n  function init() {\n    if (!subscription) {\n      const sub = new LoadableSubscription(loadFn, opts)\n      subscription = {\n        getCurrentValue: sub.getCurrentValue.bind(sub),\n        subscribe: sub.subscribe.bind(sub),\n        retry: sub.retry.bind(sub),\n        promise: sub.promise.bind(sub),\n      }\n    }\n    return subscription.promise()\n  }\n\n  // Server only\n  if (typeof window === 'undefined') {\n    ALL_INITIALIZERS.push(init)\n  }\n\n  // Client only\n  if (\n    !initialized &&\n    typeof window !== 'undefined' &&\n    typeof opts.webpack === 'function'\n  ) {\n    const moduleIds = opts.webpack()\n    READY_INITIALIZERS.push((ids) => {\n      for (const moduleId of moduleIds) {\n        if (ids.indexOf(moduleId) !== -1) {\n          return init()\n        }\n      }\n    })\n  }\n\n  const LoadableComponent = (props, ref) => {\n    init()\n\n    const context = React.useContext(LoadableContext)\n    const state = useSubscription(subscription)\n\n    React.useImperativeHandle(\n      ref,\n      () => ({\n        retry: subscription.retry,\n      }),\n      []\n    )\n\n    if (context && Array.isArray(opts.modules)) {\n      opts.modules.forEach((moduleName) => {\n        context(moduleName)\n      })\n    }\n\n    return React.useMemo(() => {\n      if (state.loading || state.error) {\n        return React.createElement(opts.loading, {\n          isLoading: state.loading,\n          pastDelay: state.pastDelay,\n          timedOut: state.timedOut,\n          error: state.error,\n          retry: subscription.retry,\n        })\n      } else if (state.loaded) {\n        return opts.render(state.loaded, props)\n      } else {\n        return null\n      }\n    }, [props, state])\n  }\n\n  LoadableComponent.preload = () => init()\n  LoadableComponent.displayName = 'LoadableComponent'\n\n  return React.forwardRef(LoadableComponent)\n}\n\nclass LoadableSubscription {\n  constructor(loadFn, opts) {\n    this._loadFn = loadFn\n    this._opts = opts\n    this._callbacks = new Set()\n    this._delay = null\n    this._timeout = null\n\n    this.retry()\n  }\n\n  promise() {\n    return this._res.promise\n  }\n\n  retry() {\n    this._clearTimeouts()\n    this._res = this._loadFn(this._opts.loader)\n\n    this._state = {\n      pastDelay: false,\n      timedOut: false,\n    }\n\n    const { _res: res, _opts: opts } = this\n\n    if (res.loading) {\n      if (typeof opts.delay === 'number') {\n        if (opts.delay === 0) {\n          this._state.pastDelay = true\n        } else {\n          this._delay = setTimeout(() => {\n            this._update({\n              pastDelay: true,\n            })\n          }, opts.delay)\n        }\n      }\n\n      if (typeof opts.timeout === 'number') {\n        this._timeout = setTimeout(() => {\n          this._update({ timedOut: true })\n        }, opts.timeout)\n      }\n    }\n\n    this._res.promise\n      .then(() => {\n        this._update({})\n        this._clearTimeouts()\n      })\n      .catch((_err) => {\n        this._update({})\n        this._clearTimeouts()\n      })\n    this._update({})\n  }\n\n  _update(partial) {\n    this._state = {\n      ...this._state,\n      error: this._res.error,\n      loaded: this._res.loaded,\n      loading: this._res.loading,\n      ...partial,\n    }\n    this._callbacks.forEach((callback) => callback())\n  }\n\n  _clearTimeouts() {\n    clearTimeout(this._delay)\n    clearTimeout(this._timeout)\n  }\n\n  getCurrentValue() {\n    return this._state\n  }\n\n  subscribe(callback) {\n    this._callbacks.add(callback)\n    return () => {\n      this._callbacks.delete(callback)\n    }\n  }\n}\n\nfunction Loadable(opts) {\n  return createLoadableComponent(load, opts)\n}\n\nfunction LoadableMap(opts) {\n  if (typeof opts.render !== 'function') {\n    throw new Error('LoadableMap requires a `render(loaded, props)` function')\n  }\n\n  return createLoadableComponent(loadMap, opts)\n}\n\nLoadable.Map = LoadableMap\n\nfunction flushInitializers(initializers, ids) {\n  let promises = []\n\n  while (initializers.length) {\n    let init = initializers.pop()\n    promises.push(init(ids))\n  }\n\n  return Promise.all(promises).then(() => {\n    if (initializers.length) {\n      return flushInitializers(initializers, ids)\n    }\n  })\n}\n\nLoadable.preloadAll = () => {\n  return new Promise((resolveInitializers, reject) => {\n    flushInitializers(ALL_INITIALIZERS).then(resolveInitializers, reject)\n  })\n}\n\nLoadable.preloadReady = (ids = []) => {\n  return new Promise((resolvePreload) => {\n    const res = () => {\n      initialized = true\n      return resolvePreload()\n    }\n    // We always will resolve, errors should be handled within loading UIs.\n    flushInitializers(READY_INITIALIZERS, ids).then(res, res)\n  })\n}\n\nif (typeof window !== 'undefined') {\n  window.__NEXT_PRELOADREADY = Loadable.preloadReady\n}\n\nexport default Loadable\n","import { ICategory, ICommunity, IUser, IMeet } from '../db';\r\n\r\nexport const actionTypesCommunity = {\r\n  REMOVE_COMMUNITY_IMAGE: 'REMOVE_COMMUNITY_IMAGE', // 커뮤니티 프로필 미리보기 이미지 삭제\r\n  UPLOAD_COMMUNITY_IMAGE_REQUEST: 'UPLOAD_COMMUNITY_IMAGE_REQUEST', // 커뮤니티 프로필 미리보기 이미지 업로드\r\n  UPLOAD_COMMUNITY_IMAGE_SUCCESS: 'UPLOAD_COMMUNITY_IMAGE_SUCCESS',\r\n  UPLOAD_COMMUNITY_IMAGE_ERROR: 'UPLOAD_COMMUNITY_IMAGE_ERROR',\r\n  CHANGE_COMMUNITY_INFO_REQUEST: 'CHANGE_COMMUNITY_INFO_REQUEST', // 커뮤니티 정보 변경\r\n  CHANGE_COMMUNITY_INFO_SUCCESS: 'CHANGE_COMMUNITY_INFO_SUCCESS',\r\n  CHANGE_COMMUNITY_INFO_ERROR: 'CHANGE_COMMUNITY_INFO_ERROR',\r\n  ADD_COMMUNITY_REQUEST: 'ADD_COMMUNITY_REQUEST', // 커뮤니티 생성\r\n  ADD_COMMUNITY_SUCCESS: 'ADD_COMMUNITY_SUCCESS',\r\n  ADD_COMMUNITY_ERROR: 'ADD_COMMUNITY_ERROR',\r\n  REMOVE_COMMUNITY_REQUEST: 'REMOVE_COMMUNITY_REQUEST', // 커뮤니티 제거(유저가 없을 때만)\r\n  REMOVE_COMMUNITY_SUCCESS: 'REMOVE_COMMUNITY_SUCCESS',\r\n  REMOVE_COMMUNITY_ERROR: 'REMOVE_COMMUNITY_ERROR',\r\n  JOIN_COMMUNITY_REQUEST: 'JOIN_COMMUNITY_REQUEST:', // 커뮤니티 가입신청(임시 DB에 저장)\r\n  JOIN_COMMUNITY_SUCCESS: 'JOIN_COMMUNITY_SUCCESS:',\r\n  JOIN_COMMUNITY_ERROR: 'JOIN_COMMUNITY_ERROR:',\r\n  ACCEPT_COMMUNITY_REQUEST: 'ACCEPT_COMMUNITY_REQUEST', // 커뮤니티 가입승인(커뮤니티 DB에 저장)\r\n  ACCEPT_COMMUNITY_SUCCESS: 'ACCEPT_COMMUNITY_SUCCESS',\r\n  ACCEPT_COMMUNITY_ERROR: 'ACCEPT_COMMUNITY_ERROR',\r\n  REFUSE_COMMUNITY_REQUEST: 'REFUSE_COMMUNITY_REQUEST', // 커뮤니티 가입거절(임시 DB에서 삭제)\r\n  REFUSE_COMMUNITY_SUCCESS: 'REFUSE_COMMUNITY_SUCCESS',\r\n  REFUSE_COMMUNITY_ERROR: 'REFUSE_COMMUNITY_ERROR',\r\n  LEAVE_COMMUNITY_REQUEST: 'LEAVE_COMMUNITY_REQUEST', // 커뮤니티 탈퇴\r\n  LEAVE_COMMUNITY_SUCCESS: 'LEAVE_COMMUNITY_SUCCESS',\r\n  LEAVE_COMMUNITY_ERROR: 'LEAVE_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITY_REQUEST: 'LOAD_COMMUNITY_REQUEST', // 특정 커뮤니티 불러오기\r\n  LOAD_COMMUNITY_SUCCESS: 'LOAD_COMMUNITY_SUCCESS',\r\n  LOAD_COMMUNITY_ERROR: 'LOAD_COMMUNITY_ERROR',\r\n  LOAD_COMMUNITIES_REQUEST: 'LOAD_COMMUNITIES_REQUEST', // 모든 커뮤니티 불러오기\r\n  LOAD_COMMUNITIES_SUCCESS: 'LOAD_COMMUNITIES_SUCCESS',\r\n  LOAD_COMMUNITIES_ERROR: 'LOAD_COMMUNITIES_ERROR',\r\n  SEARCH_COMMUNITIES_REQUEST: 'SEARCH_COMMUNITIES_REQUEST', // 커뮤니티 검색\r\n  SEARCH_COMMUNITIES_SUCCESS: 'SEARCH_COMMUNITIES_SUCCESS',\r\n  SEARCH_COMMUNITIES_ERROR: 'SEARCH_COMMUNITIES_ERROR',\r\n  LOAD_COUNTRY_COMMUNITIES_REQUEST: 'LOAD_COUNTRY_COMMUNITIES_REQUEST', // 해당 지역의 모든 커뮤니티 불러오기\r\n  LOAD_COUNTRY_COMMUNITIES_SUCCESS: 'LOAD_COUNTRY_COMMUNITIES_SUCCESS',\r\n  LOAD_COUNTRY_COMMUNITIES_ERROR: 'LOAD_COUNTRY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_COMMUNITIES_REQUEST: 'LOAD_CATEGORY_COMMUNITIES_REQUEST', // 해당 카테고리의 모든 커뮤니티 불러오기\r\n  LOAD_CATEGORY_COMMUNITIES_SUCCESS: 'LOAD_CATEGORY_COMMUNITIES_SUCCESS',\r\n  LOAD_CATEGORY_COMMUNITIES_ERROR: 'LOAD_CATEGORY_COMMUNITIES_ERROR',\r\n  LOAD_CATEGORY_REQUEST: 'LOAD_CATEGORY_REQUEST', // 특정 카테고리 불러오기\r\n  LOAD_CATEGORY_SUCCESS: 'LOAD_CATEGORY_SUCCESS',\r\n  LOAD_CATEGORY_ERROR: 'LOAD_CATEGORY_ERROR',\r\n  LOAD_CATEGORIES_REQUEST: 'LOAD_CATEGORIES_REQUEST', // 모든 카테고리 불러오기\r\n  LOAD_CATEGORIES_SUCCESS: 'LOAD_CATEGORIES_SUCCESS',\r\n  LOAD_CATEGORIES_ERROR: 'LOAD_CATEGORIES_ERROR',\r\n  ADD_MEET_REQUEST: 'ADD_MEET_REQUEST', // 모임 생성\r\n  ADD_MEET_SUCCESS: 'ADD_MEET_SUCCESS',\r\n  ADD_MEET_ERROR: 'ADD_MEET_ERROR',\r\n  REMOVE_MEET_REQUEST: 'REMOVE_MEET_REQUEST', // 모임 제거\r\n  REMOVE_MEET_SUCCESS: 'REMOVE_MEET_SUCCESS',\r\n  REMOVE_MEET_ERROR: 'REMOVE_MEET_ERROR',\r\n  MODIFY_MEET_REQUEST: 'MODIFY_MEET_REQUEST', // 모임 수정\r\n  MODIFY_MEET_SUCCESS: 'MODIFY_MEET_SUCCESS',\r\n  MODIFY_MEET_ERROR: 'MODIFY_MEET_ERROR',\r\n  JOIN_MEET_REQUEST: 'JOIN_MEET_REQUEST', // 모임 가입\r\n  JOIN_MEET_SUCCESS: 'JOIN_MEET_SUCCESS',\r\n  JOIN_MEET_ERROR: 'JOIN_MEET_ERROR',\r\n  LEAVE_MEET_REQUEST: 'LEAVE_MEET_REQUEST', // 모임 탈퇴\r\n  LEAVE_MEET_SUCCESS: 'LEAVE_MEET_SUCCESS',\r\n  LEAVE_MEET_ERROR: 'LEAVE_MEET_ERROR',\r\n} as const;\r\n\r\nexport interface IRemoveCommunityImage {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_IMAGE;\r\n}\r\nexport interface IUploadCommunityImageRequest {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST;\r\n  data: FormData;\r\n}\r\nexport interface IUploadCommunityImageSuccess {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_SUCCESS;\r\n  data: string[];\r\n}\r\nexport interface IUploadCommunityImageError {\r\n  type: typeof actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IChangeCommunityInfoData {\r\n  communityId: number;\r\n  profilePhoto: string[];\r\n  description: string;\r\n  caution: string;\r\n  requirement: string;\r\n}\r\nexport interface IChangeCommunityInfoRequest {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST;\r\n  data: IChangeCommunityInfoData;\r\n}\r\nexport interface IChangeCommunityInfoReturnData {\r\n  communityId: number;\r\n  profilePhoto: string;\r\n  description: string;\r\n  caution: string;\r\n  requirement: string;\r\n}\r\nexport interface IChangeCommunityInfoSuccess {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_SUCCESS;\r\n  data: IChangeCommunityInfoReturnData;\r\n}\r\nexport interface IChangeCommunityInfoError {\r\n  type: typeof actionTypesCommunity.CHANGE_COMMUNITY_INFO_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ICommunityData {\r\n  communityName: string;\r\n  description: string;\r\n  country: string;\r\n  category: string;\r\n}\r\nexport interface IAddCommunityRequest {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_REQUEST;\r\n  data: ICommunityData;\r\n}\r\nexport interface IAddCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IAddCommunityError {\r\n  type: typeof actionTypesCommunity.ADD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveCommunityRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IRemoveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_SUCCESS;\r\n}\r\nexport interface IRemoveCommunityError {\r\n  type: typeof actionTypesCommunity.REMOVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinCommunityRequest {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface IJoinCommunitySuccess {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IJoinCommunityError {\r\n  type: typeof actionTypesCommunity.JOIN_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAcceptCommunityRequest {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number; title: string };\r\n}\r\nexport interface IAcceptCommunitySuccess {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_SUCCESS;\r\n  data: IUser;\r\n}\r\nexport interface IAcceptCommunityError {\r\n  type: typeof actionTypesCommunity.ACCEPT_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRefuseCommunityRequest {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_REQUEST;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface IRefuseCommunitySuccess {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_SUCCESS;\r\n  data: { userId: number };\r\n}\r\nexport interface IRefuseCommunityError {\r\n  type: typeof actionTypesCommunity.REFUSE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveCommunityRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILeaveCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_SUCCESS;\r\n  data: { communityId: number; userId: number };\r\n}\r\nexport interface ILeaveCommunityError {\r\n  type: typeof actionTypesCommunity.LEAVE_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunityRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_REQUEST;\r\n  data: { communityId: number };\r\n}\r\nexport interface ILoadCommunitySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_SUCCESS;\r\n  data: ICommunity;\r\n}\r\nexport interface ILoadCommunityError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_REQUEST;\r\n}\r\nexport interface ILoadCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ISearchCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST;\r\n  data: { keyword: string };\r\n}\r\nexport interface ISearchCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ISearchCommunitiesError {\r\n  type: typeof actionTypesCommunity.SEARCH_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCountryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST;\r\n  data: { country: string; communityId: number };\r\n}\r\nexport interface ILoadCountryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCountryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryCommunitiesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST;\r\n  data: { categoryId: number; communityId: number };\r\n}\r\nexport interface ILoadCategoryCommunitiesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_SUCCESS;\r\n  data: ICommunity[];\r\n}\r\nexport interface ILoadCategoryCommunitiesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoryRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_REQUEST;\r\n  data: { categoryId: number };\r\n}\r\nexport interface ILoadCategorySuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_SUCCESS;\r\n  data: { category: ICategory; communityLength: number };\r\n}\r\nexport interface ILoadCategoryError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORY_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILoadCategoriesRequest {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_REQUEST;\r\n}\r\nexport interface ILoadCategoriesSuccess {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_SUCCESS;\r\n  data: ICategory[];\r\n}\r\nexport interface ILoadCategoriesError {\r\n  type: typeof actionTypesCommunity.LOAD_CATEGORIES_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IAddMeetData {\r\n  place: string;\r\n  fee: number;\r\n  members: number;\r\n  date: string;\r\n  title: string;\r\n  communityId: number;\r\n}\r\nexport interface IAddMeetRequest {\r\n  type: typeof actionTypesCommunity.ADD_MEET_REQUEST;\r\n  data: IAddMeetData;\r\n}\r\nexport interface IAddMeetSuccess {\r\n  type: typeof actionTypesCommunity.ADD_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IAddMeetError {\r\n  type: typeof actionTypesCommunity.ADD_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IRemoveMeetRequest {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IRemoveMeetSuccess {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_SUCCESS;\r\n  data: { meetId: number };\r\n}\r\nexport interface IRemoveMeetError {\r\n  type: typeof actionTypesCommunity.REMOVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IModifyMeetData extends IAddMeetData {\r\n  meetId: number;\r\n}\r\nexport interface IModifyMeetRequest {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_REQUEST;\r\n  data: IModifyMeetData;\r\n}\r\nexport interface IModifyMeetSuccess {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IModifyMeetError {\r\n  type: typeof actionTypesCommunity.MODIFY_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface IJoinMeetRequest {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface IJoinMeetSuccess {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_SUCCESS;\r\n  data: IMeet;\r\n}\r\nexport interface IJoinMeetError {\r\n  type: typeof actionTypesCommunity.JOIN_MEET_ERROR;\r\n  error: Error;\r\n}\r\nexport interface ILeaveMeetRequest {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_REQUEST;\r\n  data: { communityId: number; meetId: number };\r\n}\r\nexport interface ILeaveMeetSuccess {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_SUCCESS;\r\n  data: { meetId: number; userId: number };\r\n}\r\nexport interface ILeaveMeetError {\r\n  type: typeof actionTypesCommunity.LEAVE_MEET_ERROR;\r\n  error: Error;\r\n}\r\n\r\nexport type ActionsCommunity =\r\n  | IRemoveCommunityImage\r\n  | IUploadCommunityImageRequest\r\n  | IUploadCommunityImageSuccess\r\n  | IUploadCommunityImageError\r\n  | IChangeCommunityInfoRequest\r\n  | IChangeCommunityInfoSuccess\r\n  | IChangeCommunityInfoError\r\n  | IAddCommunityRequest\r\n  | IAddCommunitySuccess\r\n  | IAddCommunityError\r\n  | IRemoveCommunityRequest\r\n  | IRemoveCommunitySuccess\r\n  | IRemoveCommunityError\r\n  | IJoinCommunityRequest\r\n  | IJoinCommunitySuccess\r\n  | IJoinCommunityError\r\n  | IAcceptCommunityRequest\r\n  | IAcceptCommunitySuccess\r\n  | IAcceptCommunityError\r\n  | IRefuseCommunityRequest\r\n  | IRefuseCommunitySuccess\r\n  | IRefuseCommunityError\r\n  | ILeaveCommunityRequest\r\n  | ILeaveCommunitySuccess\r\n  | ILeaveCommunityError\r\n  | ILoadCommunityRequest\r\n  | ILoadCommunitySuccess\r\n  | ILoadCommunityError\r\n  | ILoadCommunitiesRequest\r\n  | ILoadCommunitiesSuccess\r\n  | ILoadCommunitiesError\r\n  | ISearchCommunitiesRequest\r\n  | ISearchCommunitiesSuccess\r\n  | ISearchCommunitiesError\r\n  | ILoadCountryCommunitiesRequest\r\n  | ILoadCountryCommunitiesSuccess\r\n  | ILoadCountryCommunitiesError\r\n  | ILoadCategoryCommunitiesRequest\r\n  | ILoadCategoryCommunitiesSuccess\r\n  | ILoadCategoryCommunitiesError\r\n  | ILoadCategoryRequest\r\n  | ILoadCategorySuccess\r\n  | ILoadCategoryError\r\n  | ILoadCategoriesRequest\r\n  | ILoadCategoriesSuccess\r\n  | ILoadCategoriesError\r\n  | IAddMeetRequest\r\n  | IAddMeetSuccess\r\n  | IAddMeetError\r\n  | IRemoveMeetRequest\r\n  | IRemoveMeetSuccess\r\n  | IRemoveMeetError\r\n  | IModifyMeetRequest\r\n  | IModifyMeetSuccess\r\n  | IModifyMeetError\r\n  | IJoinMeetRequest\r\n  | IJoinMeetSuccess\r\n  | IJoinMeetError\r\n  | ILeaveMeetRequest\r\n  | ILeaveMeetSuccess\r\n  | ILeaveMeetError;\r\n","var arrayLikeToArray = require(\"./arrayLikeToArray\");\n\nfunction _arrayWithoutHoles(arr) {\n  if (Array.isArray(arr)) return arrayLikeToArray(arr);\n}\n\nmodule.exports = _arrayWithoutHoles;","import React, { useContext } from 'react'\nimport Effect from './side-effect'\nimport { AmpStateContext } from './amp-context'\nimport { HeadManagerContext } from './head-manager-context'\nimport { isInAmpMode } from './amp'\n\ntype WithInAmpMode = {\n  inAmpMode?: boolean\n}\n\nexport function defaultHead(inAmpMode = false): JSX.Element[] {\n  const head = [<meta charSet=\"utf-8\" />]\n  if (!inAmpMode) {\n    head.push(<meta name=\"viewport\" content=\"width=device-width\" />)\n  }\n  return head\n}\n\nfunction onlyReactElement(\n  list: Array<React.ReactElement<any>>,\n  child: React.ReactChild\n): Array<React.ReactElement<any>> {\n  // React children can be \"string\" or \"number\" in this case we ignore them for backwards compat\n  if (typeof child === 'string' || typeof child === 'number') {\n    return list\n  }\n  // Adds support for React.Fragment\n  if (child.type === React.Fragment) {\n    return list.concat(\n      React.Children.toArray(child.props.children).reduce(\n        (\n          fragmentList: Array<React.ReactElement<any>>,\n          fragmentChild: React.ReactChild\n        ): Array<React.ReactElement<any>> => {\n          if (\n            typeof fragmentChild === 'string' ||\n            typeof fragmentChild === 'number'\n          ) {\n            return fragmentList\n          }\n          return fragmentList.concat(fragmentChild)\n        },\n        []\n      )\n    )\n  }\n  return list.concat(child)\n}\n\nconst METATYPES = ['name', 'httpEquiv', 'charSet', 'itemProp']\n\n/*\n returns a function for filtering head child elements\n which shouldn't be duplicated, like <title/>\n Also adds support for deduplicated `key` properties\n*/\nfunction unique() {\n  const keys = new Set()\n  const tags = new Set()\n  const metaTypes = new Set()\n  const metaCategories: { [metatype: string]: Set<string> } = {}\n\n  return (h: React.ReactElement<any>) => {\n    let isUnique = true\n    let hasKey = false\n\n    if (h.key && typeof h.key !== 'number' && h.key.indexOf('$') > 0) {\n      hasKey = true\n      const key = h.key.slice(h.key.indexOf('$') + 1)\n      if (keys.has(key)) {\n        isUnique = false\n      } else {\n        keys.add(key)\n      }\n    }\n\n    // eslint-disable-next-line default-case\n    switch (h.type) {\n      case 'title':\n      case 'base':\n        if (tags.has(h.type)) {\n          isUnique = false\n        } else {\n          tags.add(h.type)\n        }\n        break\n      case 'meta':\n        for (let i = 0, len = METATYPES.length; i < len; i++) {\n          const metatype = METATYPES[i]\n          if (!h.props.hasOwnProperty(metatype)) continue\n\n          if (metatype === 'charSet') {\n            if (metaTypes.has(metatype)) {\n              isUnique = false\n            } else {\n              metaTypes.add(metatype)\n            }\n          } else {\n            const category = h.props[metatype]\n            const categories = metaCategories[metatype] || new Set()\n            if ((metatype !== 'name' || !hasKey) && categories.has(category)) {\n              isUnique = false\n            } else {\n              categories.add(category)\n              metaCategories[metatype] = categories\n            }\n          }\n        }\n        break\n    }\n\n    return isUnique\n  }\n}\n\n/**\n *\n * @param headElements List of multiple <Head> instances\n */\nfunction reduceComponents(\n  headElements: Array<React.ReactElement<any>>,\n  props: WithInAmpMode\n) {\n  return headElements\n    .reduce(\n      (list: React.ReactChild[], headElement: React.ReactElement<any>) => {\n        const headElementChildren = React.Children.toArray(\n          headElement.props.children\n        )\n        return list.concat(headElementChildren)\n      },\n      []\n    )\n    .reduce(onlyReactElement, [])\n    .reverse()\n    .concat(defaultHead(props.inAmpMode))\n    .filter(unique())\n    .reverse()\n    .map((c: React.ReactElement<any>, i: number) => {\n      const key = c.key || i\n      if (\n        process.env.NODE_ENV !== 'development' &&\n        process.env.__NEXT_OPTIMIZE_FONTS &&\n        !props.inAmpMode\n      ) {\n        if (\n          c.type === 'link' &&\n          c.props['href'] &&\n          // TODO(prateekbh@): Replace this with const from `constants` when the tree shaking works.\n          [\n            'https://fonts.googleapis.com/css',\n            'https://use.typekit.net/',\n          ].some((url) => c.props['href'].startsWith(url))\n        ) {\n          const newProps = { ...(c.props || {}) }\n          newProps['data-href'] = newProps['href']\n          newProps['href'] = undefined\n\n          // Add this attribute to make it easy to identify optimized tags\n          newProps['data-optimized-fonts'] = true\n\n          return React.cloneElement(c, newProps)\n        }\n      }\n      return React.cloneElement(c, { key })\n    })\n}\n\n/**\n * This component injects elements to `<head>` of your page.\n * To avoid duplicated `tags` in `<head>` you can use the `key` property, which will make sure every tag is only rendered once.\n */\nfunction Head({ children }: { children: React.ReactNode }) {\n  const ampState = useContext(AmpStateContext)\n  const headManager = useContext(HeadManagerContext)\n  return (\n    <Effect\n      reduceComponentsToState={reduceComponents}\n      headManager={headManager}\n      inAmpMode={isInAmpMode(ampState)}\n    >\n      {children}\n    </Effect>\n  )\n}\n\n// TODO: Remove in the next major release\nHead.rewind = () => {}\n\nexport default Head\n","\n    (window.__NEXT_P = window.__NEXT_P || []).push([\n      \"/community/[id]\",\n      function () {\n        return require(\"private-next-pages/community/[id].tsx\");\n      }\n    ]);\n  ","module.exports = require('./dist/next-server/lib/dynamic')\n","import React, { Component } from 'react'\n\nconst isServer = typeof window === 'undefined'\n\ntype State = JSX.Element[] | undefined\n\ntype SideEffectProps = {\n  reduceComponentsToState: <T>(\n    components: Array<React.ReactElement<any>>,\n    props: T\n  ) => State\n  handleStateChange?: (state: State) => void\n  headManager: any\n  inAmpMode?: boolean\n}\n\nexport default class extends Component<SideEffectProps> {\n  private _hasHeadManager: boolean\n\n  emitChange = (): void => {\n    if (this._hasHeadManager) {\n      this.props.headManager.updateHead(\n        this.props.reduceComponentsToState(\n          [...this.props.headManager.mountedInstances],\n          this.props\n        )\n      )\n    }\n  }\n\n  constructor(props: any) {\n    super(props)\n    this._hasHeadManager =\n      this.props.headManager && this.props.headManager.mountedInstances\n\n    if (isServer && this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n      this.emitChange()\n    }\n  }\n  componentDidMount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.add(this)\n    }\n    this.emitChange()\n  }\n  componentDidUpdate() {\n    this.emitChange()\n  }\n  componentWillUnmount() {\n    if (this._hasHeadManager) {\n      this.props.headManager.mountedInstances.delete(this)\n    }\n    this.emitChange()\n  }\n\n  render() {\n    return null\n  }\n}\n","import {\r\n  actionTypesCommunity,\r\n  IRemoveCommunityImage,\r\n  IUploadCommunityImageRequest,\r\n  IChangeCommunityInfoData,\r\n  IChangeCommunityInfoRequest,\r\n  IAddCommunityRequest,\r\n  IRemoveCommunityRequest,\r\n  IJoinCommunityRequest,\r\n  IAcceptCommunityRequest,\r\n  IRefuseCommunityRequest,\r\n  ILeaveCommunityRequest,\r\n  ILoadCommunityRequest,\r\n  ILoadCommunitiesRequest,\r\n  ISearchCommunitiesRequest,\r\n  ILoadCountryCommunitiesRequest,\r\n  ILoadCategoryCommunitiesRequest,\r\n  ILoadCategoryRequest,\r\n  ILoadCategoriesRequest,\r\n  IAddMeetRequest,\r\n  IRemoveMeetRequest,\r\n  IModifyMeetRequest,\r\n  IJoinMeetRequest,\r\n  ILeaveMeetRequest,\r\n  IAddMeetData,\r\n  IModifyMeetData,\r\n  ICommunityData,\r\n} from '../interfaces/community/communityAction.interfaces';\r\n\r\nexport const removeCommunityImage = (): IRemoveCommunityImage => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_IMAGE,\r\n  };\r\n};\r\nexport const uploadCommunityImageRequestAction = (\r\n  data: FormData\r\n): IUploadCommunityImageRequest => {\r\n  return {\r\n    type: actionTypesCommunity.UPLOAD_COMMUNITY_IMAGE_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const changeCommunityInfoRequestAction = (\r\n  data: IChangeCommunityInfoData\r\n): IChangeCommunityInfoRequest => {\r\n  return {\r\n    type: actionTypesCommunity.CHANGE_COMMUNITY_INFO_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const addCommunityRequestAction = (data: ICommunityData): IAddCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IRemoveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): IJoinCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const acceptCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n  title: string;\r\n}): IAcceptCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ACCEPT_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const refuseCommunityRequestAction = (data: {\r\n  communityId: number;\r\n  userId: number;\r\n}): IRefuseCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REFUSE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILeaveCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunityRequestAction = (data: {\r\n  communityId: number;\r\n}): ILoadCommunityRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCommunitiesRequestAction = (): ILoadCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COMMUNITIES_REQUEST,\r\n  };\r\n};\r\nexport const searchCommunitiesRequestAction = (data: {\r\n  keyword: string;\r\n}): ISearchCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.SEARCH_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCountryCommunitiesRequestAction = (data: {\r\n  country: string;\r\n  communityId: number;\r\n}): ILoadCountryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_COUNTRY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoryCommunitiesRequestAction = (data: {\r\n  categoryId: number;\r\n  communityId: number;\r\n}): ILoadCategoryCommunitiesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_COMMUNITIES_REQUEST,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const loadCategoryRequestAction = (data: {\r\n  categoryId: number;\r\n}): ILoadCategoryRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORY_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const loadCategoriesRequestAction = (): ILoadCategoriesRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LOAD_CATEGORIES_REQUEST,\r\n  };\r\n};\r\n\r\nexport const addMeetRequestAction = (data: IAddMeetData): IAddMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.ADD_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const removeMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IRemoveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.REMOVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const modifyMeetRequestAction = (data: IModifyMeetData): IModifyMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.MODIFY_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const joinMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): IJoinMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.JOIN_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\nexport const leaveMeetRequestAction = (data: {\r\n  communityId: number;\r\n  meetId: number;\r\n}): ILeaveMeetRequest => {\r\n  return {\r\n    type: actionTypesCommunity.LEAVE_MEET_REQUEST,\r\n    data,\r\n  };\r\n};\r\n","import React from 'react'\nimport Loadable from './loadable'\n\nconst isServerSide = typeof window === 'undefined'\n\nexport type LoaderComponent<P = {}> = Promise<\n  React.ComponentType<P> | { default: React.ComponentType<P> }\n>\n\nexport type Loader<P = {}> = (() => LoaderComponent<P>) | LoaderComponent<P>\n\nexport type LoaderMap = { [mdule: string]: () => Loader<any> }\n\nexport type LoadableGeneratedOptions = {\n  webpack?(): any\n  modules?(): LoaderMap\n}\n\nexport type LoadableBaseOptions<P = {}> = LoadableGeneratedOptions & {\n  loading?: ({\n    error,\n    isLoading,\n    pastDelay,\n  }: {\n    error?: Error | null\n    isLoading?: boolean\n    pastDelay?: boolean\n    retry?: () => void\n    timedOut?: boolean\n  }) => JSX.Element | null\n  loader?: Loader<P> | LoaderMap\n  loadableGenerated?: LoadableGeneratedOptions\n  ssr?: boolean\n}\n\nexport type LoadableOptions<P = {}> = LoadableBaseOptions<P> & {\n  render?(loader: any, props: any): JSX.Element\n}\n\nexport type DynamicOptions<P = {}> = LoadableBaseOptions<P> & {\n  /**\n   * @deprecated the modules option has been planned for removal\n   */\n  render?(props: P, loaded: any): JSX.Element\n}\n\nexport type LoadableFn<P = {}> = (\n  opts: LoadableOptions<P>\n) => React.ComponentType<P>\n\nexport type LoadableComponent<P = {}> = React.ComponentType<P>\n\nexport function noSSR<P = {}>(\n  LoadableInitializer: LoadableFn<P>,\n  loadableOptions: LoadableOptions<P>\n): React.ComponentType<P> {\n  // Removing webpack and modules means react-loadable won't try preloading\n  delete loadableOptions.webpack\n  delete loadableOptions.modules\n\n  // This check is necessary to prevent react-loadable from initializing on the server\n  if (!isServerSide) {\n    return LoadableInitializer(loadableOptions)\n  }\n\n  const Loading = loadableOptions.loading!\n  // This will only be rendered on the server side\n  return () => (\n    <Loading error={null} isLoading pastDelay={false} timedOut={false} />\n  )\n}\n\n// function dynamic<P = {}, O extends DynamicOptions>(options: O):\n\nexport default function dynamic<P = {}>(\n  dynamicOptions: DynamicOptions<P> | Loader<P>,\n  options?: DynamicOptions<P>\n): React.ComponentType<P> {\n  let loadableFn: LoadableFn<P> = Loadable\n  let loadableOptions: LoadableOptions<P> = {\n    // A loading component is not required, so we default it\n    loading: ({ error, isLoading, pastDelay }) => {\n      if (!pastDelay) return null\n      if (process.env.NODE_ENV === 'development') {\n        if (isLoading) {\n          return null\n        }\n        if (error) {\n          return (\n            <p>\n              {error.message}\n              <br />\n              {error.stack}\n            </p>\n          )\n        }\n      }\n\n      return null\n    },\n  }\n\n  // Support for direct import(), eg: dynamic(import('../hello-world'))\n  // Note that this is only kept for the edge case where someone is passing in a promise as first argument\n  // The react-loadable babel plugin will turn dynamic(import('../hello-world')) into dynamic(() => import('../hello-world'))\n  // To make sure we don't execute the import without rendering first\n  if (dynamicOptions instanceof Promise) {\n    loadableOptions.loader = () => dynamicOptions\n    // Support for having import as a function, eg: dynamic(() => import('../hello-world'))\n  } else if (typeof dynamicOptions === 'function') {\n    loadableOptions.loader = dynamicOptions\n    // Support for having first argument being options, eg: dynamic({loader: import('../hello-world')})\n  } else if (typeof dynamicOptions === 'object') {\n    loadableOptions = { ...loadableOptions, ...dynamicOptions }\n  }\n\n  // Support for passing options, eg: dynamic(import('../hello-world'), {loading: () => <p>Loading something</p>})\n  loadableOptions = { ...loadableOptions, ...options }\n\n  if (\n    typeof dynamicOptions === 'object' &&\n    !(dynamicOptions instanceof Promise)\n  ) {\n    // show deprecation warning for `modules` key in development\n    if (process.env.NODE_ENV !== 'production') {\n      if (dynamicOptions.modules) {\n        console.warn(\n          'The modules option for next/dynamic has been deprecated. See here for more info https://nextjs.org/docs/messages/next-dynamic-modules'\n        )\n      }\n    }\n    // Support for `render` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.render) {\n      loadableOptions.render = (loaded, props) =>\n        dynamicOptions.render!(props, loaded)\n    }\n    // Support for `modules` when using a mapping, eg: `dynamic({ modules: () => {return {HelloWorld: import('../hello-world')}, render(props, loaded) {} } })\n    if (dynamicOptions.modules) {\n      loadableFn = Loadable.Map\n      const loadModules: LoaderMap = {}\n      const modules = dynamicOptions.modules()\n      Object.keys(modules).forEach((key) => {\n        const value: any = modules[key]\n        if (typeof value.then === 'function') {\n          loadModules[key] = () => value.then((mod: any) => mod.default || mod)\n          return\n        }\n        loadModules[key] = value\n      })\n      loadableOptions.loader = loadModules\n    }\n  }\n\n  // coming from build/babel/plugins/react-loadable-plugin.js\n  if (loadableOptions.loadableGenerated) {\n    loadableOptions = {\n      ...loadableOptions,\n      ...loadableOptions.loadableGenerated,\n    }\n    delete loadableOptions.loadableGenerated\n  }\n\n  // support for disabling server side rendering, eg: dynamic(import('../hello-world'), {ssr: false})\n  if (typeof loadableOptions.ssr === 'boolean') {\n    if (!loadableOptions.ssr) {\n      delete loadableOptions.ssr\n      return noSSR(loadableFn, loadableOptions)\n    }\n    delete loadableOptions.ssr\n  }\n\n  return loadableFn(loadableOptions)\n}\n","export default function _taggedTemplateLiteral(strings, raw) {\n  if (!raw) {\n    raw = strings.slice(0);\n  }\n\n  return Object.freeze(Object.defineProperties(strings, {\n    raw: {\n      value: Object.freeze(raw)\n    }\n  }));\n}","import React, { memo, ReactNode, useState, useEffect } from 'react';\nimport dynamic from 'next/dynamic';\nimport { createGlobalStyle } from 'styled-components';\nimport { useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\n\nconst NavBar = dynamic(() => import('components/NavBar'));\nconst SideBar = dynamic(() => import('components/SideBar'));\nconst UserInfoModal = dynamic(() => import('components/Modals/UserInfoModal'));\nconst NotificationModal = dynamic(() => import('components/Modals/NotificationModal'));\n\nconst Global = createGlobalStyle`\n  .ant-row {\n    margin-right: 0 !important;\n    margin-left: 0 !important;\n    margin-bottom: 0 !important;\n  }\n  .ant-col:first-child {\n    padding-left: 0 !important;\n  }\n  .ant-col:last-child {\n    padding-right: 0 !important;\n  }\n`;\ninterface AppLayoutProps {\n  children: ReactNode;\n}\n\nfunction AppLayout({ children }: AppLayoutProps) {\n  const { me, leaveDone, leaveError } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n  const [userInfoModal, setUserInfoModal] = useState(false);\n  const [notificationModal, setNotificationModal] = useState(false);\n\n  useEffect(() => {\n    if (leaveDone) {\n      alert('탈퇴처리가 완료되었습니다');\n    }\n  }, [leaveDone]);\n\n  useEffect(() => {\n    if (leaveError) {\n      alert(leaveError);\n    }\n  }, [leaveError]);\n\n  return (\n    <div>\n      <Global />\n      <NavBar\n        notices={me?.Notices}\n        userInfoModal={userInfoModal}\n        setUserInfoModal={setUserInfoModal}\n        setNotificationModal={setNotificationModal}\n      />\n\n      <div style={{ display: 'grid', gridTemplateColumns: '200px auto' }}>\n        <SideBar />\n        <div>{children}</div>\n      </div>\n      {userInfoModal && <UserInfoModal setUserInfoModal={setUserInfoModal} />}\n      {notificationModal && (\n        <NotificationModal\n          setNotificationModal={setNotificationModal}\n          notices={me?.Notices}\n        />\n      )}\n    </div>\n  );\n}\n\nexport default memo(AppLayout);\n","// This icon file is generated automatically.\nvar UserOutlined = { \"icon\": { \"tag\": \"svg\", \"attrs\": { \"viewBox\": \"64 64 896 896\", \"focusable\": \"false\" }, \"children\": [{ \"tag\": \"path\", \"attrs\": { \"d\": \"M858.5 763.6a374 374 0 00-80.6-119.5 375.63 375.63 0 00-119.5-80.6c-.4-.2-.8-.3-1.2-.5C719.5 518 760 444.7 760 362c0-137-111-248-248-248S264 225 264 362c0 82.7 40.5 156 102.8 201.1-.4.2-.8.3-1.2.5-44.8 18.9-85 46-119.5 80.6a375.63 375.63 0 00-80.6 119.5A371.7 371.7 0 00136 901.8a8 8 0 008 8.2h60c4.4 0 7.9-3.5 8-7.8 2-77.2 33-149.5 87.8-204.3 56.7-56.7 132-87.9 212.2-87.9s155.5 31.2 212.2 87.9C779 752.7 810 825 812 902.2c.1 4.4 3.6 7.8 8 7.8h60a8 8 0 008-8.2c-1-47.8-10.9-94.3-29.5-138.2zM512 534c-45.9 0-89.1-17.9-121.6-50.4S340 407.9 340 362c0-45.9 17.9-89.1 50.4-121.6S466.1 190 512 190s89.1 17.9 121.6 50.4S684 316.1 684 362c0 45.9-17.9 89.1-50.4 121.6S557.9 534 512 534z\" } }] }, \"name\": \"user\", \"theme\": \"outlined\" };\nexport default UserOutlined;\n","// GENERATE BY ./scripts/generate.ts\n// DON NOT EDIT IT MANUALLY\nimport * as React from 'react';\nimport UserOutlinedSvg from \"@ant-design/icons-svg/es/asn/UserOutlined\";\nimport AntdIcon from '../components/AntdIcon';\n\nvar UserOutlined = function UserOutlined(props, ref) {\n  return /*#__PURE__*/React.createElement(AntdIcon, Object.assign({}, props, {\n    ref: ref,\n    icon: UserOutlinedSvg\n  }));\n};\n\nUserOutlined.displayName = 'UserOutlined';\nexport default /*#__PURE__*/React.forwardRef(UserOutlined);","module.exports = require('./dist/next-server/lib/head')\n","import React from 'react'\n\ntype CaptureFn = (moduleName: string) => void\n\nexport const LoadableContext = React.createContext<CaptureFn | null>(null)\n\nif (process.env.NODE_ENV !== 'production') {\n  LoadableContext.displayName = 'LoadableContext'\n}\n","function _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nmodule.exports = _nonIterableSpread;","import React from 'react'\n\nexport const AmpStateContext: React.Context<any> = React.createContext({})\n\nif (process.env.NODE_ENV !== 'production') {\n  AmpStateContext.displayName = 'AmpStateContext'\n}\n","var arrayWithoutHoles = require(\"./arrayWithoutHoles\");\n\nvar iterableToArray = require(\"./iterableToArray\");\n\nvar unsupportedIterableToArray = require(\"./unsupportedIterableToArray\");\n\nvar nonIterableSpread = require(\"./nonIterableSpread\");\n\nfunction _toConsumableArray(arr) {\n  return arrayWithoutHoles(arr) || iterableToArray(arr) || unsupportedIterableToArray(arr) || nonIterableSpread();\n}\n\nmodule.exports = _toConsumableArray;","import styled from 'styled-components';\r\n\r\nexport const BodyContainer = styled.div`\r\n  position: relative;\r\n  width: 100%;\r\n  height: calc(100vh - 244px);\r\n  display: grid;\r\n  color: #fff;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n\r\n  .body-inner-container {\r\n    width: 90%;\r\n    height: 90%;\r\n\r\n    @media (min-width: 1024px) {\r\n      width: 80%;\r\n      height: 80%;\r\n    }\r\n    @media (min-width: 1200px) {\r\n      width: 70%;\r\n    }\r\n    @media (min-width: 1400px) {\r\n      width: 60%;\r\n    }\r\n    @media (min-width: 1800px) {\r\n      width: 50%;\r\n    }\r\n\r\n    .active {\r\n      color: #039bec;\r\n    }\r\n\r\n    .body-nav {\r\n      display: flex;\r\n      background: rgba(0, 0, 0, 0.5);\r\n      backdrop-filter: blur(2px);\r\n      -webkit-backdrop-filter: blur(2px);\r\n      height: 44px;\r\n      justify-content: space-evenly;\r\n      align-items: center;\r\n\r\n      div {\r\n        cursor: pointer;\r\n      }\r\n    }\r\n\r\n    .body-content {\r\n      position: relative;\r\n      height: calc(100% - 44px);\r\n    }\r\n  }\r\n`;\r\n","import React, { useCallback, useState } from 'react';\r\nimport dynamic from 'next/dynamic';\r\nimport { BodyContainer } from './styles';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\n\r\nconst Info = dynamic(() => import('./Info'));\r\nconst Post = dynamic(() => import('./Post'));\r\nconst Meet = dynamic(() => import('./Meet'));\r\n\r\ninterface CommunityBodyProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction CommunityBody({ singleCommunity, me, communityUser }: CommunityBodyProps) {\r\n  const [currentNav, setCurrentNav] = useState('info');\r\n\r\n  const onClickNav = useCallback(e => {\r\n    const navName = e.target.className.split('-');\r\n    if (navName[0] === 'nav' && navName[1].length < 5) {\r\n      setCurrentNav(navName[1]);\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <BodyContainer>\r\n      <div className=\"body-inner-container\">\r\n        <div className=\"body-nav\" onClick={onClickNav}>\r\n          <div className={`nav-info${currentNav === 'info' ? ' active' : ''}`}>정보</div>\r\n          <div className={`nav-post${currentNav === 'post' ? ' active' : ''}`}>\r\n            게시글\r\n          </div>\r\n          <div className={`nav-meet${currentNav === 'meet' ? ' active' : ''}`}>모임</div>\r\n        </div>\r\n        <div className=\"body-content\">\r\n          {currentNav === 'info' && <Info singleCommunity={singleCommunity} />}\r\n          {currentNav === 'post' && (\r\n            <Post singleCommunity={singleCommunity} communityUser={communityUser} />\r\n          )}\r\n          {currentNav === 'meet' && (\r\n            <Meet\r\n              singleCommunity={singleCommunity}\r\n              me={me}\r\n              communityUser={communityUser}\r\n            />\r\n          )}\r\n        </div>\r\n      </div>\r\n    </BodyContainer>\r\n  );\r\n}\r\n\r\nexport default CommunityBody;\r\n","import styled from 'styled-components';\r\n\r\nexport const HeaderContainer = styled.div`\r\n  padding: 1rem;\r\n  height: 200px;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.9), rgba(255, 255, 255, 0.3));\r\n  display: grid;\r\n  grid-template-columns: auto 100px;\r\n\r\n  .header-left {\r\n    display: flex;\r\n    align-items: center;\r\n    .header-image {\r\n      width: 150px;\r\n      height: 150px;\r\n      background: rgba(255, 255, 255, 0.2);\r\n      border-radius: 50%;\r\n      display: flex;\r\n      justify-content: center;\r\n      align-items: center;\r\n\r\n      img {\r\n        border-radius: 50%;\r\n        object-fit: cover;\r\n      }\r\n\r\n      .header-icon {\r\n        color: #cacaca;\r\n        font-size: 3rem;\r\n      }\r\n    }\r\n    .header-text {\r\n      margin-left: 1rem;\r\n      height: 100%;\r\n      display: flex;\r\n      flex-direction: column;\r\n      justify-content: center;\r\n\r\n      p {\r\n        font-size: 0.75rem;\r\n        color: #039be5;\r\n        font-weight: bold;\r\n      }\r\n      h1,\r\n      h2 {\r\n        color: #fff;\r\n        font-weight: bold;\r\n      }\r\n\r\n      h1 {\r\n        font-size: 2rem;\r\n      }\r\n      h2 {\r\n        font-size: 1rem;\r\n      }\r\n    }\r\n  }\r\n  .header-right {\r\n    width: 100%;\r\n    justify-self: flex-end;\r\n    display: flex;\r\n    justify-content: space-evenly;\r\n    height: 33px;\r\n\r\n    .join-user-icon {\r\n      color: #fff;\r\n      position: relative;\r\n      font-size: 20px;\r\n      cursor: pointer;\r\n\r\n      .user-icon-badge {\r\n        background: hotpink;\r\n        width: 16px;\r\n        height: 16px;\r\n        border-radius: 50%;\r\n        text-align: center;\r\n        font-size: 10px;\r\n        position: absolute;\r\n        top: -6px;\r\n        right: -8px;\r\n      }\r\n\r\n      :hover {\r\n        color: rgba(255, 255, 255, 0.7);\r\n      }\r\n    }\r\n\r\n    button {\r\n      border: none;\r\n      color: #fff;\r\n      font-size: 0.75rem;\r\n    }\r\n\r\n    .button-container {\r\n      display: flex;\r\n      align-items: center;\r\n      justify-content: space-evenly;\r\n      height: 100%;\r\n      width: 60px;\r\n\r\n      button {\r\n        width: 22px;\r\n        height: 22px;\r\n        border-radius: 50%;\r\n      }\r\n    }\r\n\r\n    .remove-button,\r\n    .modify-button,\r\n    .join-button,\r\n    .leave-button {\r\n      cursor: pointer;\r\n      background: rgba(3, 155, 229, 0.7);\r\n\r\n      :hover {\r\n        filter: saturate(180%);\r\n      }\r\n    }\r\n\r\n    .remove-button {\r\n      background: radial-gradient(#fbd3e9, #bb377d);\r\n    }\r\n    .modify-button {\r\n      background: radial-gradient(#f7f8f8, #acbb78);\r\n    }\r\n\r\n    .wait-button {\r\n      background: #e5037f;\r\n    }\r\n  }\r\n`;\r\n","import { UserOutlined } from '@ant-design/icons';\r\nimport {\r\n  joinCommunityRequestAction,\r\n  leaveCommunityRequestAction,\r\n  removeCommunityRequestAction,\r\n} from 'actions/actionCommunity';\r\nimport { ICommunity, IUser, IUserInfo } from 'interfaces/db';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport Router from 'next/router';\r\nimport dynamic from 'next/dynamic';\r\nimport React, { useCallback, useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { HeaderContainer } from './styles';\r\n\r\nconst JoinUserModal = dynamic(() => import('components/Modals/JoinUserModal'));\r\nconst CommunityModifyModal = dynamic(\r\n  () => import('components/Modals/CommunityModifyModal')\r\n);\r\ninterface CommunityHeaderProps {\r\n  singleCommunity: ICommunity;\r\n  me: IUser | null;\r\n  communityUser: IUserInfo | undefined;\r\n}\r\n\r\nfunction CommunityHeader({ singleCommunity, me, communityUser }: CommunityHeaderProps) {\r\n  const dispatch = useDispatch();\r\n  const { joinCommunityDone, changeCommunityInfoDone, removeCommunityDone } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const [joinUserModal, setJoinUserModal] = useState(false);\r\n  const [showCommunityModifyModal, setShowCommunityModifyModal] = useState(false);\r\n  const communityOwner = me?.id === singleCommunity?.OwnerId;\r\n  const joinUser = singleCommunity.JoinUsers.find(user => user.id === me?.id);\r\n\r\n  const communityModifyModalTrigger = useCallback(() => {\r\n    if (communityOwner) {\r\n      setShowCommunityModifyModal(prev => !prev);\r\n    }\r\n  }, [setShowCommunityModifyModal, communityOwner]);\r\n\r\n  const onClickJoinButton = useCallback(() => {\r\n    if (!me) {\r\n      if (confirm('로그인한 유저만 가능합니다. 로그인하시겠습니까?')) {\r\n        return Router.push('/login');\r\n      }\r\n    } else if (!communityUser && confirm('커뮤니티 가입신청을 하시겠습니까?')) {\r\n      return dispatch(joinCommunityRequestAction({ communityId: singleCommunity.id }));\r\n    }\r\n  }, [singleCommunity, me, communityUser]);\r\n\r\n  const onClickLeaveButton = useCallback(async () => {\r\n    if (communityUser && confirm('커뮤니티를 탈퇴하시겠습니까?')) {\r\n      return dispatch(\r\n        leaveCommunityRequestAction({\r\n          communityId: singleCommunity.id,\r\n        })\r\n      );\r\n    }\r\n  }, [singleCommunity, communityUser]);\r\n\r\n  const onClickRemoveButton = useCallback(async () => {\r\n    if (communityOwner && confirm('커뮤니티를 삭제하시겠습니까?')) {\r\n      return dispatch(removeCommunityRequestAction({ communityId: singleCommunity.id }));\r\n    }\r\n  }, [communityOwner, singleCommunity]);\r\n\r\n  const joinUserModalTrigger = useCallback(() => {\r\n    setJoinUserModal(prev => !prev);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (removeCommunityDone) {\r\n      Router.push('/');\r\n    }\r\n  }, [removeCommunityDone]);\r\n\r\n  useEffect(() => {\r\n    if (joinCommunityDone) {\r\n      alert('커뮤니티 가입신청이 완료되었습니다');\r\n    }\r\n  }, [joinCommunityDone]);\r\n\r\n  useEffect(() => {\r\n    if (changeCommunityInfoDone) {\r\n      setShowCommunityModifyModal(false);\r\n    }\r\n  }, [changeCommunityInfoDone]);\r\n\r\n  return (\r\n    <HeaderContainer>\r\n      <div className=\"header-left\">\r\n        <div className=\"header-image\">\r\n          {singleCommunity.profilePhoto ? (\r\n            <img\r\n              src={singleCommunity.profilePhoto}\r\n              width=\"150\"\r\n              height=\"150\"\r\n              alt=\"profile-image\"\r\n            />\r\n          ) : (\r\n            <UserOutlined className=\"header-icon\" />\r\n          )}\r\n        </div>\r\n        <div className=\"header-text\">\r\n          <p>커뮤니티정보</p>\r\n          <h1>{singleCommunity.communityName}</h1>\r\n          <h2>{singleCommunity.country}</h2>\r\n        </div>\r\n      </div>\r\n      <div className=\"header-right\">\r\n        {communityOwner && (\r\n          <>\r\n            <div\r\n              className=\"join-user-icon\"\r\n              title=\"가입신청목록\"\r\n              onClick={joinUserModalTrigger}\r\n            >\r\n              <UserOutlined />\r\n              {singleCommunity.JoinUsers.length > 0 && (\r\n                <div className=\"user-icon-badge\">{singleCommunity.JoinUsers.length}</div>\r\n              )}\r\n            </div>\r\n            <div className=\"button-container\">\r\n              <button\r\n                title=\"수정하기\"\r\n                className=\"modify-button\"\r\n                onClick={communityModifyModalTrigger}\r\n              ></button>\r\n              <button\r\n                title=\"삭제하기\"\r\n                className=\"remove-button\"\r\n                onClick={onClickRemoveButton}\r\n              ></button>\r\n            </div>\r\n          </>\r\n        )}\r\n        {communityOwner ? null : communityUser ? (\r\n          <button onClick={onClickLeaveButton} className=\"leave-button\">\r\n            탈퇴하기\r\n          </button>\r\n        ) : joinUser ? (\r\n          <button className=\"wait-button\">가입대기</button>\r\n        ) : (\r\n          <button onClick={onClickJoinButton} className=\"join-button\">\r\n            가입하기\r\n          </button>\r\n        )}\r\n      </div>\r\n      {joinUserModal && (\r\n        <JoinUserModal\r\n          setJoinUserModal={setJoinUserModal}\r\n          singleCommunity={singleCommunity}\r\n        />\r\n      )}\r\n\r\n      {showCommunityModifyModal && (\r\n        <CommunityModifyModal setShowCommunityModifyModal={setShowCommunityModifyModal} />\r\n      )}\r\n    </HeaderContainer>\r\n  );\r\n}\r\n\r\nexport default CommunityHeader;\r\n","import { END } from '@redux-saga/core';\r\nimport { loadCommunityRequestAction } from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport { loadPostsRequestAction } from 'actions/actionPost';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport CommunityBody from 'components/CommunityBody';\r\nimport CommunityHeader from 'components/CommunityHeader';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport Router from 'next/router';\r\nimport React, { memo, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport wrapper from 'store/configureStore';\r\nimport styled from 'styled-components';\r\nimport Head from 'next/head';\r\n\r\ninterface IBackgroundImage {\r\n  backgroundImage: string | null;\r\n}\r\n\r\nconst CommunityContainer = styled.div`\r\n  width: 100%;\r\n  height: 100%;\r\n  background: linear-gradient(rgba(0, 0, 0, 0.2), rgba(0, 0, 0, 0.4)),\r\n    url(${(props: IBackgroundImage) => props.backgroundImage && props.backgroundImage});\r\n  background-position: center;\r\n  background-size: cover;\r\n`;\r\n\r\nfunction Community() {\r\n  const { singleCommunity, loadCommunityError } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  const { me } = useSelector((state: RootStateInterface) => state.user);\r\n  const { reportDone } = useSelector((state: RootStateInterface) => state.post);\r\n  const communityUser = singleCommunity?.Users.find(user => user.id === me?.id);\r\n\r\n  useEffect(() => {\r\n    if (loadCommunityError) {\r\n      Router.push('/');\r\n    }\r\n  }, [loadCommunityError]);\r\n\r\n  useEffect(() => {\r\n    if (reportDone) {\r\n      alert('신고를 완료했습니다');\r\n    }\r\n  }, [reportDone]);\r\n\r\n  if (!singleCommunity) {\r\n    return <div>잠시 기다려주세요</div>;\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {singleCommunity.communityName}</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CommunityContainer\r\n          backgroundImage={\r\n            singleCommunity.profilePhoto\r\n              ? singleCommunity.profilePhoto.replace(/\\/resize\\//, '/original/')\r\n              : null\r\n          }\r\n        >\r\n          <CommunityHeader\r\n            singleCommunity={singleCommunity}\r\n            me={me}\r\n            communityUser={communityUser}\r\n          />\r\n          <CommunityBody\r\n            singleCommunity={singleCommunity}\r\n            me={me}\r\n            communityUser={communityUser}\r\n          />\r\n        </CommunityContainer>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const communityId = Number(context.query.id);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(loadCommunityRequestAction({ communityId: communityId }));\r\n    context.store.dispatch(\r\n      loadPostsRequestAction({ communityId: communityId, postId: 0 })\r\n    );\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default memo(Community);\r\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","function _iterableToArray(iter) {\n  if (typeof Symbol !== \"undefined\" && Symbol.iterator in Object(iter)) return Array.from(iter);\n}\n\nmodule.exports = _iterableToArray;"],"sourceRoot":""}