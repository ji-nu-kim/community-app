{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { signUpRequestAction } from '../actions/actionUser';\nimport { Form, Checkbox, Button } from 'antd';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm, Controller } from 'react-hook-form';\nimport { signUpValidation } from '../utils/yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SignUpLayout, { InputContainer, ButtonContainer } from 'components/Layouts/FormLayout';\nconst FormErrorMessage = dynamic(() => import('components/Message/FormErrorMessage'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Message/FormErrorMessage')],\n    modules: ['components/Message/FormErrorMessage']\n  }\n});\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'), {\n  loadableGenerated: {\n    webpack: () => [require.resolveWeak('components/Modals/SearchAddressModal')],\n    modules: ['components/Modals/SearchAddressModal']\n  }\n});\n\nfunction Signup() {\n  var _errors$email, _errors$nickname, _errors$password, _errors$passwordCheck, _errors$term;\n\n  const dispatch = useDispatch();\n  const {\n    signUpLoading,\n    signUpDone,\n    signUpError,\n    me\n  } = useSelector(state => state.user);\n  const {\n    0: showSearchAddressModal,\n    1: setShowSearchAddressModal\n  } = useState(false);\n  const {\n    0: countryError,\n    1: setCountryError\n  } = useState(false);\n  const {\n    0: country,\n    1: setCountry\n  } = useState('');\n  useEffect(() => {\n    if (me && me.id || signUpDone) {\n      Router.push('/');\n    }\n  }, [me, signUpDone]);\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n  const {\n    handleSubmit,\n    errors,\n    control\n  } = useForm({\n    resolver: yupResolver(signUpValidation),\n    mode: 'onBlur'\n  });\n  const openSearchAddressModal = useCallback(() => {\n    setCountryError(false);\n    setShowSearchAddressModal(true);\n  }, []);\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAddressModal(false);\n  }, []);\n  const onSubmit = useCallback(handleSubmit(data => {\n    if (country === '') {\n      return setCountryError(true);\n    }\n\n    dispatch(signUpRequestAction({\n      email: data.email,\n      nickname: data.nickname,\n      password: data.password,\n      country\n    }));\n  }), [country]);\n  return /*#__PURE__*/_jsxs(_Fragment, {\n    children: [/*#__PURE__*/_jsx(Head, {\n      children: /*#__PURE__*/_jsx(\"title\", {\n        children: \"community - \\uD68C\\uC6D0\\uAC00\\uC785\"\n      })\n    }), /*#__PURE__*/_jsxs(SignUpLayout, {\n      children: [/*#__PURE__*/_jsx(\"h1\", {\n        children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n      }), /*#__PURE__*/_jsxs(Form, {\n        onFinish: onSubmit,\n        className: \"form-grid\",\n        children: [/*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"email\",\n            children: \"\\uC774\\uBA54\\uC77C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"input\", {}),\n            type: \"email\",\n            name: \"email\",\n            control: control,\n            placeholder: \"\\uC544\\uC774\\uB514\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            defaultValue: \"\"\n          }), ((_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.email.message\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"nickname\",\n            children: \"\\uB2C9\\uB124\\uC784\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"input\", {}),\n            type: \"text\",\n            name: \"nickname\",\n            control: control,\n            placeholder: \"\\uB2C9\\uB124\\uC784\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",\n            defaultValue: \"\"\n          }), ((_errors$nickname = errors.nickname) === null || _errors$nickname === void 0 ? void 0 : _errors$nickname.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.nickname.message\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"password\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"input\", {}),\n            type: \"password\",\n            name: \"password\",\n            control: control,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n            defaultValue: \"\"\n          }), ((_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.password.message\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"passwordCheck\",\n            children: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uD655\\uC778\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(Controller, {\n            as: /*#__PURE__*/_jsx(\"input\", {}),\n            type: \"password\",\n            name: \"passwordCheck\",\n            control: control,\n            placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638 \\uC7AC\\uC785\\uB825\",\n            defaultValue: \"\"\n          }), ((_errors$passwordCheck = errors.passwordCheck) === null || _errors$passwordCheck === void 0 ? void 0 : _errors$passwordCheck.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.passwordCheck.message\n          })]\n        }), /*#__PURE__*/_jsxs(InputContainer, {\n          children: [/*#__PURE__*/_jsx(\"label\", {\n            htmlFor: \"country\",\n            children: \"\\uC8FC\\uC18C\"\n          }), /*#__PURE__*/_jsx(\"br\", {}), /*#__PURE__*/_jsx(\"input\", {\n            style: {\n              cursor: 'pointer'\n            },\n            value: country,\n            readOnly: true,\n            placeholder: \"\\uC8FC\\uC18C\\uB97C \\uAC80\\uC0C9\\uD558\\uC138\\uC694\",\n            onClick: openSearchAddressModal\n          }), countryError && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: \"\\uC8FC\\uC18C\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"\n          })]\n        }), /*#__PURE__*/_jsxs(\"div\", {\n          children: [/*#__PURE__*/_jsx(Controller, {\n            name: \"term\",\n            control: control,\n            defaultValue: false,\n            render: ({\n              onChange,\n              value\n            }) => /*#__PURE__*/_jsx(Checkbox, {\n              onChange: e => onChange(e.target.checked),\n              checked: value,\n              children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uC5D0 \\uB3D9\\uC758\\uD569\\uB2C8\\uB2E4\"\n            })\n          }), ((_errors$term = errors.term) === null || _errors$term === void 0 ? void 0 : _errors$term.message) && /*#__PURE__*/_jsx(FormErrorMessage, {\n            errorMessage: errors.term.message\n          })]\n        }), /*#__PURE__*/_jsx(ButtonContainer, {\n          children: /*#__PURE__*/_jsx(Button, {\n            type: \"primary\",\n            size: \"large\",\n            htmlType: \"submit\",\n            loading: signUpLoading,\n            children: \"\\uAC00\\uC785\\uD558\\uAE30\"\n          })\n        })]\n      }), showSearchAddressModal && /*#__PURE__*/_jsx(SearchAddressModal, {\n        closeSearchAddressModal: closeSearchAddressModal,\n        setCountry: setCountry,\n        type: \"village\"\n      })]\n    })]\n  });\n}\n\nexport default Signup;","map":{"version":3,"sources":["C:/Users/wlsdn/Desktop/frontend/react/next/community/front/pages/signup.tsx"],"names":["signUpRequestAction","Form","Checkbox","Button","Head","Router","dynamic","React","useCallback","useEffect","useState","useDispatch","useSelector","useForm","Controller","signUpValidation","yupResolver","SignUpLayout","InputContainer","ButtonContainer","FormErrorMessage","SearchAddressModal","Signup","dispatch","signUpLoading","signUpDone","signUpError","me","state","user","showSearchAddressModal","setShowSearchAddressModal","countryError","setCountryError","country","setCountry","id","push","alert","handleSubmit","errors","control","resolver","mode","openSearchAddressModal","closeSearchAddressModal","onSubmit","data","email","nickname","password","message","passwordCheck","cursor","onChange","value","e","target","checked","term"],"mappings":"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","sourcesContent":["import { signUpRequestAction } from '../actions/actionUser';\nimport { Form, Checkbox, Button } from 'antd';\nimport Head from 'next/head';\nimport Router from 'next/router';\nimport dynamic from 'next/dynamic';\nimport React, { useCallback, useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootStateInterface } from 'interfaces/RootState';\nimport { useForm, Controller } from 'react-hook-form';\nimport { signUpValidation } from '../utils/yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport SignUpLayout, {\n  InputContainer,\n  ButtonContainer,\n} from 'components/Layouts/FormLayout';\n\nconst FormErrorMessage = dynamic(() => import('components/Message/FormErrorMessage'));\nconst SearchAddressModal = dynamic(() => import('components/Modals/SearchAddressModal'));\n\ntype SignUpType = {\n  email: string;\n  nickname: string;\n  password: string;\n  passwordCheck: string;\n  term: boolean;\n};\n\nfunction Signup() {\n  const dispatch = useDispatch();\n\n  const { signUpLoading, signUpDone, signUpError, me } = useSelector(\n    (state: RootStateInterface) => state.user\n  );\n\n  const [showSearchAddressModal, setShowSearchAddressModal] = useState(false);\n  const [countryError, setCountryError] = useState(false);\n  const [country, setCountry] = useState('');\n\n  useEffect(() => {\n    if ((me && me.id) || signUpDone) {\n      Router.push('/');\n    }\n  }, [me, signUpDone]);\n\n  useEffect(() => {\n    if (signUpError) {\n      alert(signUpError);\n    }\n  }, [signUpError]);\n\n  const { handleSubmit, errors, control } = useForm<SignUpType>({\n    resolver: yupResolver(signUpValidation),\n    mode: 'onBlur',\n  });\n\n  const openSearchAddressModal = useCallback(() => {\n    setCountryError(false);\n    setShowSearchAddressModal(true);\n  }, []);\n\n  const closeSearchAddressModal = useCallback(() => {\n    setShowSearchAddressModal(false);\n  }, []);\n\n  const onSubmit = useCallback(\n    handleSubmit((data: SignUpType) => {\n      if (country === '') {\n        return setCountryError(true);\n      }\n\n      dispatch(\n        signUpRequestAction({\n          email: data.email,\n          nickname: data.nickname,\n          password: data.password,\n          country,\n        })\n      );\n    }),\n    [country]\n  );\n\n  return (\n    <>\n      <Head>\n        <title>community - 회원가입</title>\n      </Head>\n      <SignUpLayout>\n        <h1>회원가입</h1>\n        <Form onFinish={onSubmit} className=\"form-grid\">\n          <InputContainer>\n            <label htmlFor=\"email\">이메일</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"email\"\n              name=\"email\"\n              control={control}\n              placeholder=\"아이디를 입력하세요\"\n              defaultValue=\"\"\n            />\n            {errors.email?.message && (\n              <FormErrorMessage errorMessage={errors.email.message} />\n            )}\n          </InputContainer>\n\n          <InputContainer>\n            <label htmlFor=\"nickname\">닉네임</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"text\"\n              name=\"nickname\"\n              control={control}\n              placeholder=\"닉네임을 입력하세요\"\n              defaultValue=\"\"\n            />\n            {errors.nickname?.message && (\n              <FormErrorMessage errorMessage={errors.nickname.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"password\">비밀번호</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"password\"\n              name=\"password\"\n              control={control}\n              placeholder=\"비밀번호\"\n              defaultValue=\"\"\n            />\n            {errors.password?.message && (\n              <FormErrorMessage errorMessage={errors.password.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"passwordCheck\">비밀번호 확인</label>\n            <br />\n            <Controller\n              as={<input />}\n              type=\"password\"\n              name=\"passwordCheck\"\n              control={control}\n              placeholder=\"비밀번호 재입력\"\n              defaultValue=\"\"\n            />\n            {errors.passwordCheck?.message && (\n              <FormErrorMessage errorMessage={errors.passwordCheck.message} />\n            )}\n          </InputContainer>\n          <InputContainer>\n            <label htmlFor=\"country\">주소</label>\n            <br />\n            <input\n              style={{ cursor: 'pointer' }}\n              value={country}\n              readOnly\n              placeholder=\"주소를 검색하세요\"\n              onClick={openSearchAddressModal}\n            />\n            {countryError && <FormErrorMessage errorMessage=\"주소를 입력하세요\" />}\n          </InputContainer>\n          <div>\n            <Controller\n              name=\"term\"\n              control={control}\n              defaultValue={false}\n              render={({ onChange, value }) => (\n                <Checkbox onChange={e => onChange(e.target.checked)} checked={value}>\n                  회원가입에 동의합니다\n                </Checkbox>\n              )}\n            />\n            {errors.term?.message && (\n              <FormErrorMessage errorMessage={errors.term.message} />\n            )}\n          </div>\n          <ButtonContainer>\n            <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={signUpLoading}>\n              가입하기\n            </Button>\n          </ButtonContainer>\n        </Form>\n        {showSearchAddressModal && (\n          <SearchAddressModal\n            closeSearchAddressModal={closeSearchAddressModal}\n            setCountry={setCountry}\n            type=\"village\"\n          />\n        )}\n      </SignUpLayout>\n    </>\n  );\n}\n\nexport default Signup;\n"]},"metadata":{},"sourceType":"module"}