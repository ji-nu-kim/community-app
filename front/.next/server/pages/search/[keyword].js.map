{"version":3,"sources":["webpack://front/./pages/search/[keyword].tsx","webpack://front/external \"@ant-design/icons\"","webpack://front/external \"axios\"","webpack://front/external \"immer\"","webpack://front/external \"moment\"","webpack://front/external \"next-redux-wrapper\"","webpack://front/external \"next/dist/next-server/lib/router-context.js\"","webpack://front/external \"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\"","webpack://front/external \"next/dynamic\"","webpack://front/external \"next/head\"","webpack://front/external \"next/router\"","webpack://front/external \"react\"","webpack://front/external \"react-redux\"","webpack://front/external \"react/jsx-runtime\"","webpack://front/external \"redux\"","webpack://front/external \"redux-devtools-extension\"","webpack://front/external \"redux-saga\"","webpack://front/external \"redux-saga/effects\"","webpack://front/external \"styled-components\""],"names":["keyword","router","useRouter","changableCommunities","useSelector","state","community","query","length","map","id","profilePhoto","Categories","name","country","communityName","getServerSideProps","wrapper","context","cookie","req","headers","String","axios","store","dispatch","loadMyInfoRequestAction","searchCommunitiesRequestAction","END","sagaTask","toPromise","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAMA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,OAAT,GAAmB;AACjB,QAAMC,MAAM,GAAGC,uDAAS,EAAxB;AACA,QAAM;AAAEC;AAAF,MAA2BC,wDAAW,CACzCC,KAAD,IAA+BA,KAAK,CAACC,SADK,CAA5C;AAGA,sBACE;AAAA,4BACE,mDAAC,mDAAD;AAAA,6BACE;AAAA,mCAAoBL,MAAM,CAACM,KAAP,CAAaP,OAAjC;AAAA;AADF,MADF,eAIE,mDAAC,iEAAD;AAAA,6BACE,wDAAC,gFAAD;AAAA,gCACE,mDAAC,uFAAD;AAAA,iCACE;AAAA,iCACUC,MAAM,CAACM,KAAP,CAAaP,OADvB,+BAEE,4DAFF,wDAGaG,oBAAoB,CAACK,MAHlC;AAAA;AADF,UADF,eAQE,mDAAC,wFAAD;AAAA,iCACE;AAAK,qBAAS,EAAC,iBAAf;AAAA,sBACGL,oBAAoB,CAACM,GAArB,CAAyBH,SAAS,iBACjC;AAAA,qCACE,mDAAC,+CAAD;AAAM,oBAAI,EAAG,cAAaA,SAAS,CAACI,EAAG,EAAvC;AAA0C,wBAAQ,EAAE,KAApD;AAAA,uCACE;AAAA,yCACE,mDAAC,mEAAD;AACE,gCAAY,EAAEJ,SAAS,CAACK,YAD1B;AAEE,gCAAY,EAAEL,SAAS,CAACM,UAAV,CAAqB,CAArB,EAAwBC,IAFxC;AAGE,2BAAO,EAAEP,SAAS,CAACQ,OAHrB;AAIE,iCAAa,EAAER,SAAS,CAACS;AAJ3B;AADF;AADF;AADF,eAAUT,SAAS,CAACI,EAApB,CADD;AADH;AADF,UARF;AAAA;AADF,MAJF;AAAA,IADF;AAoCD;;AAEM,MAAMM,kBAAsC,GAAGC,wGAAA,CACpD,MAAMC,OAAN,IAAiB;AACf,QAAMC,MAAM,GAAGD,OAAO,CAACE,GAAR,GAAcF,OAAO,CAACE,GAAR,CAAYC,OAAZ,CAAoBF,MAAlC,GAA2C,EAA1D;AACA,QAAMnB,OAAO,GAAGsB,MAAM,CAACJ,OAAO,CAACX,KAAR,CAAcP,OAAf,CAAtB;AACAuB,wEAAA,GAAgC,EAAhC;;AACA,MAAIL,OAAO,CAACE,GAAR,IAAeD,MAAnB,EAA2B;AACzBI,0EAAA,GAAgCJ,MAAhC;AACD;;AACDD,SAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBC,qFAAuB,EAA9C;AACAR,SAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBE,iGAA8B,CAAC;AAAE3B;AAAF,GAAD,CAArD;AACAkB,SAAO,CAACM,KAAR,CAAcC,QAAd,CAAuBG,2CAAvB;AACA,QAAMV,OAAO,CAACM,KAAR,CAAcK,QAAd,CAAuBC,SAAvB,EAAN;AACD,CAZmD,CAA/C;AAeP,4EAAeC,2CAAI,CAAC/B,OAAD,CAAnB,E;;;;;;;;AC7EA,+C;;;;;;;;ACAA,mC;;;;;;;;ACAA,mC;;;;;;;;ACAA,oC;;;;;;;;ACAA,gD;;;;;;;;ACAA,yE;;;;;;;;ACAA,iG;;;;;;;;ACAA,0C;;;;;;;;ACAA,uC;;;;;;;;ACAA,yC;;;;;;;;ACAA,mC;;;;;;;;ACAA,yC;;;;;;;;ACAA,+C;;;;;;;;ACAA,mC;;;;;;;;ACAA,sD;;;;;;;;ACAA,wC;;;;;;;;ACAA,gD;;;;;;;;ACAA,+C","file":"../pages/search/[keyword].js","sourcesContent":["import { searchCommunitiesRequestAction } from 'actions/actionCommunity';\r\nimport { loadMyInfoRequestAction } from 'actions/actionUser';\r\nimport axios from 'axios';\r\nimport AppLayout from 'components/Layouts/AppLayout';\r\nimport CategoryLayout, {\r\n  CategoryContent,\r\n  CategoryHeader,\r\n} from 'components/Layouts/CategoryLayout';\r\nimport { RootStateInterface } from 'interfaces/RootState';\r\nimport { GetServerSideProps } from 'next';\r\nimport React, { memo } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { END } from 'redux-saga';\r\nimport wrapper from 'store/configureStore';\r\nimport Head from 'next/head';\r\nimport { useRouter } from 'next/router';\r\nimport Link from 'next/link';\r\nimport BoxStyleCard from 'components/Cards/BoxStyleCard';\r\n\r\nfunction keyword() {\r\n  const router = useRouter();\r\n  const { changableCommunities } = useSelector(\r\n    (state: RootStateInterface) => state.community\r\n  );\r\n  return (\r\n    <>\r\n      <Head>\r\n        <title>community - {router.query.keyword} 검색</title>\r\n      </Head>\r\n      <AppLayout>\r\n        <CategoryLayout>\r\n          <CategoryHeader>\r\n            <h1>\r\n              &ldquo;{router.query.keyword}&rdquo;와\r\n              <br />\r\n              연관있는 커뮤니티 {changableCommunities.length}개\r\n            </h1>\r\n          </CategoryHeader>\r\n          <CategoryContent>\r\n            <div className=\"cards-container\">\r\n              {changableCommunities.map(community => (\r\n                <div key={community.id}>\r\n                  <Link href={`/community/${community.id}`} prefetch={false}>\r\n                    <a>\r\n                      <BoxStyleCard\r\n                        profilePhoto={community.profilePhoto}\r\n                        categoryName={community.Categories[0].name}\r\n                        country={community.country}\r\n                        communityName={community.communityName}\r\n                      />\r\n                    </a>\r\n                  </Link>\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </CategoryContent>\r\n        </CategoryLayout>\r\n      </AppLayout>\r\n    </>\r\n  );\r\n}\r\n\r\nexport const getServerSideProps: GetServerSideProps = wrapper.getServerSideProps(\r\n  async context => {\r\n    const cookie = context.req ? context.req.headers.cookie : '';\r\n    const keyword = String(context.query.keyword);\r\n    axios.defaults.headers.Cookie = '';\r\n    if (context.req && cookie) {\r\n      axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    context.store.dispatch(loadMyInfoRequestAction());\r\n    context.store.dispatch(searchCommunitiesRequestAction({ keyword }));\r\n    context.store.dispatch(END);\r\n    await context.store.sagaTask.toPromise();\r\n  }\r\n);\r\n\r\nexport default memo(keyword);\r\n","module.exports = require(\"@ant-design/icons\");;","module.exports = require(\"axios\");;","module.exports = require(\"immer\");;","module.exports = require(\"moment\");;","module.exports = require(\"next-redux-wrapper\");;","module.exports = require(\"next/dist/next-server/lib/router-context.js\");;","module.exports = require(\"next/dist/next-server/lib/router/utils/get-asset-path-from-route.js\");;","module.exports = require(\"next/dynamic\");;","module.exports = require(\"next/head\");;","module.exports = require(\"next/router\");;","module.exports = require(\"react\");;","module.exports = require(\"react-redux\");;","module.exports = require(\"react/jsx-runtime\");;","module.exports = require(\"redux\");;","module.exports = require(\"redux-devtools-extension\");;","module.exports = require(\"redux-saga\");;","module.exports = require(\"redux-saga/effects\");;","module.exports = require(\"styled-components\");;"],"sourceRoot":""}